<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WonderLand</title>
  
  <subtitle>Somnium &amp; Somniator</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.cmwonderland.com/"/>
  <updated>2018-06-16T15:56:49.622Z</updated>
  <id>https://www.cmwonderland.com/</id>
  
  <author>
    <name>James Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记和爸爸的点点滴滴</title>
    <link href="https://www.cmwonderland.com/2018/06/16/dad/"/>
    <id>https://www.cmwonderland.com/2018/06/16/dad/</id>
    <published>2018-06-16T15:58:06.000Z</published>
    <updated>2018-06-16T15:56:49.622Z</updated>
    
    <content type="html"><![CDATA[<p>今天终于考完试了，也好久没有更新网站了，正好是父亲节，很想写一篇文章回忆一些记忆中细碎但是印象深刻的事。</p><p>我是个很在意各种细节的人，父亲也用一个个细节深深地影响了我，回顾我长大的每一步，每一步都有爸爸带着我向前走，我们一起经历了很多很多的事情，人们都说一个人二十岁之前的经历基本决定了他是一个什么样的人，我要感谢爸爸和妈妈让我经历的成长，让我成长为一个没有让人失望的人。</p><p>我记下了一些一下子就能想到的事情，还有太多太多细节都回荡在脑海里，如果有时间的话，应该仔细地写一写这些宝贵的回忆。</p><p><img src="http://i4.fuimg.com/640680/c81907e7cb9988e7.jpg" alt="Markdown"></p><a id="more"></a><ul><li>幼儿园</li></ul><p>我记得那时候冬天裹得像个大粽子，妈妈给我裹上一层有一层，我面对着爸爸坐在摩托上，爸爸送我去幼儿园，等着老师开门<br>小学。虽然就家离幼儿园很远，但是纵使能到的特别早，坐在第一排，后来想想这应该是我意识里要做到最好的源头，在我连记忆都保存不下来的岁月里，是爸爸妈妈帮我塑造起了这样的意识。</p><p>我记得直到后来上了小学，赶不上公交了，爸爸就骑着摩托带我一路追上，我最喜欢的就是爸爸说算了直接给你送到吧，我就反而可以提前到校门口，早点到学校总能给我一种很好的感觉，这是父母给我的良好的习惯，永远要早一点，永远不要往后拖。</p><p>我在路上总是喜欢问爸爸无穷无尽的问题，那时候应付一个小孩子多简单呀，爸爸还会教我认各种各样的车，我还记得有一次说到计算图形的面积，爸爸说，还有一个东西叫微积分，还可以计算曲线的面积，比如皮鞋鞋面的面积，我记得很清楚，那是爸爸载着我在买菜的时候说的，我惊讶极了，还有这么高级的东西，我给爸爸说，能不能暑假教会我。现在想想自己当初好天真，但是这种让我每天都对知识充满新鲜与好奇感的生活真的很美妙。</p><ul><li>小学</li></ul><p>我记得爸爸在我一年级的时候就买来奥数书和我一起钻研，这是一件让我感激至今的事情，这个行为带给我的深远影响可能远远地被低估了。我记得那些题，很难，也很有意思，比如用直线分割平面，数列找规律等等问题，有的题还要爸爸研究了答案讲给我。初一的时候郑老师给我们说，要有中招意识，这个思维方式已经很先进了，但是我觉得爸爸的思维方式更先进，让我时刻先人一步地学习，我记得我小学第一学期期末考试就考了双百分，现在想想，得益于父母的眼光，我的每一步都走的很早又很准确，这是多么幸运的事情。</p><p>我记得有一段时间我和爸爸迷上了九宫格和十六宫格，我们比赛谁能先填出来，有一天爸爸告诉我说他半夜起来还填了一会儿，我当时觉得特别有趣，和爸爸比赛做数学题在我看来是一个小男孩能够经历了最佳童年运动之一。我会经常回忆起这个片段，并且会暗下决心，设计更多有趣的挑战，亲子游戏，和我以后的孩子一起经历。虽然时代进步，可以利用的方法和工具越来越多，但是父母的亲身参与陪伴才是这些事的内核所在，如果父亲只是扔下一本奥数书，或者说，你把这十个数独题做出来，我想年幼的我会索然无味，可能就变得和我学电子琴一样了，但是爸爸通过亲身的陪伴把事情变得非常有趣，在我很小的时候就揭示出了“世界上有很多有挑战并且有趣的事情”的道理。我想如果世界上的爸爸们都能这么配着孩子做这些有趣的事情，很多孩子的人生可能会变得很不一样了。</p><p>我还特别感谢爸爸在我小学的时候带着我打篮球和羽毛球，从我使劲扔都仍不到篮筐开始，到我可以一放学就抱着球满场飞奔。我一直觉得小学的时候是我身体最好的时候，也为我中学时候储备了不错的身体，可惜这种锻炼的精神没能被自己坚持下来。那时候总是被爸爸叫着去运动，打羽毛球的时候爸爸总是会想办法调动我，我可以打的越来越远了，投的越来越远了，很可惜到了郑州之后打球的机会就非常少了，风也打，时间也少，再也没有了在老房子门前打羽毛球等着妈妈叫吃饭，还有在篮球场打球打得汗流浃背被爸爸妈妈叫回家的美好记忆了。</p><p>我还记得小学的时候有一次老师让每个人写一张速算卡，以后课间拿着背，别的同学很多是家长手抄，我自己写好公式之后，爸爸就用word敲好公式，然后彩色打印，粘在硬纸板上，我拿着比其他小朋友更精致的速算板，让我无比的自豪，其实我不需要速算卡来帮助我学速算，我每天都做速算题，做很多数学题，六年级还拿了速算比赛的第一名，但是爸爸对细节的重视，利用更好的工具做的更好的行为让我印象深刻。现在我也总是会想办法找到最好的工具，把东西做的尽量完美，这种对待事物的态度对每个人，尤其是对于小孩子的影响是巨大的。</p><p>可以说，爸爸妈妈对教育的重视和精细是我童年收到的最宝贵的礼物，</p><ul><li>小学毕业</li></ul><p>得到去郑外考试的消息，爸爸就立马决定带我去郑州考试，记得当时我还在妈妈办公室玩电脑，正在畅想六年级的暑假，文具盒都已经找不到了。我跟着爸爸做大巴到郑州站，做公交到了偏僻荒凉的西开发区，在那片有艺术气息但是荒废的独栋转车，然后找到河南工业大学，经历了一场偷偷摸摸的安排在晚上的考试，然后彻底改变了自己人生的轨迹。我在想如果是我的话，我会不会这么果决地带着自己的孩子去考试呢，很有可能我会错过一次改变我的孩子和家庭命运的机会，而父母总是在我还年幼无知，不知不觉间，帮我做了一次次无比正确的，让我感激不尽的选择。</p><p>我还记得考试一段时间之后的故事，郑外的考试数学满分一百份，英语五十，语文三十，我当时和爸爸在外面等我认识的一个家长的孩子交流做题的感觉，他应该是考遍了郑州能考的学校，我能感觉到自己信息的闭塞，但是当时题做的确实很不错，交流了一遍之后感觉自己应该都做对了，但是英语很难，觉得自己做的一般，和在南阳的考试完全不是一个难度。回到南阳之后过了很久，都一直没有消息。有一天爸爸送我去睿源上课外班，说起来还没有消息的事情，我大概觉得有点没面子，就说，反正就算考上了也不一定去上，这是大家一直说的，我太小，就算考上了也不一定要去。我记得正好到睿源的楼下了，爸爸停车看着我说，虽然是这么说，但是我很想接到打来的电话。这句话我记得非常非常深，一直到今天我都会常常想起。后来终于接到了电话，我的第一反应就是，一定要去，这是我人生的挑战和转折的起点，父亲的一句话给我带来了多少影响，我说不清楚，但是那种深藏的强烈的期望感在很多年里都在催促着我，在我悠闲的小学时光之后，一下子体会到我应该做些什么。父母的无数的行动和点滴的言语，让我在远离父母的时候从毫无想法的小学生迅速地有了很多意识和想法，这种意识比家长和老师的灌输要有用的多。</p><ul><li>初中的长路漫漫</li></ul><p>还记得初中求学的艰辛和有趣，炎热的夏天，我和爸爸从家里出发，心中充满了不舍，坐上去郑州的大巴，为了早点走，不想等下一班，我们就坐在大巴车偷偷加的小椅子上坐了一路，一路颠簸到郑州。我记得我写的对家人的想念的文章还因为感情细腻被郑老师朗读了。我一学期也就回家一两次，而爸爸妈妈却要轮流来看我，实在是非常辛苦，尤其是妈妈，要坐一天的车，晚上还要买菜做饭，周末为我洗衣服，带我继续在市里奔波上课，为了让我接受好一倍的教育，父母付出了多了好几倍的辛劳，这份付出一直是我内心深处一份非常重要的力量。</p><p>还记得好几次回家的经历，有父亲在国庆节接我到火车站坐大巴，因为买不到票了，一直等到晚上八点多，火车站上空还升起来了孔明灯，回到家已经凌晨了，妈妈还是做好了饭等着。第一个国庆我们去快到高速口的地方坐大巴，也是车非常少，我们最后坐上了一辆一路晃晃悠悠跑的相当慢的车，还在省道上走了一段。还有一年相当有趣，实在等不到车的我们突然在高速口看到一辆从郑州回南阳想挣点外快的救护车，于是我们大概七八个人都挤进去，坐着闪着等的救护车回了南阳。高中之后都是大家一起包车了，也没有太多记忆深刻的回家的记忆，但是初中的每次经历真的让我记忆格外的深刻，每次终于到了南阳的收费站，淡黄色的灯光一下子出现在眼前，那种家的气息就出现了，妈妈总是做好了可口的饭菜在等着，直到大学，已经有了很多的回家的方式，但是让我印象最深刻的依然是初中的求学经历。</p><p>高中的保送生考试，依然是和爸爸一起到了北京，然后记得后学校等成绩的那天，正好发烧了，然后爸爸那天到了郑州，然后就接到消息，被清华录取啦，这几年的艰辛的路都没有白走。记得去大学报到还是和爸爸一起，住在清华南边的宾馆，提前一天晚上逛校园，在法学院门前合照，以及因为转系的风波爸爸来北京，和学校协商，最终顺利地转了专业，每一步能走的顺心如意，真的要感谢父亲。</p><p>我记得初中有一年父亲节，我忘了是初一还是初二，我期末考试考了第一名，非常高兴，打电话给爸爸，正好是父亲节，我就说，我送你的礼物就是我考了第一名，那个时候我很骄傲，不过那个时候我能给的就只是考试的成绩，很多年了这一直是我能做的为数不多的事情。我很感谢父母给了我那么好的机会，让我一直追求我想追求的事情，让我少受到了很多束缚，让我不用想世俗的很多事情，让我做我想做的事情。</p><p>谢谢爸爸让我成长为一个更好的人，我想，等我以后当父亲了，我也要做爸爸这样的父亲。</p><p>煽情的话也不多说啦，<strong>祝爸爸父亲节快乐~</strong></p><p><img src="http://i4.fuimg.com/640680/c99b6d3389f52a7a.jpg" alt="Markdown"></p><center><font color="red" ,font="" size="5">如果我懂得了爱，那一定是因为你</font></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天终于考完试了，也好久没有更新网站了，正好是父亲节，很想写一篇文章回忆一些记忆中细碎但是印象深刻的事。&lt;/p&gt;
&lt;p&gt;我是个很在意各种细节的人，父亲也用一个个细节深深地影响了我，回顾我长大的每一步，每一步都有爸爸带着我向前走，我们一起经历了很多很多的事情，人们都说一个人二十岁之前的经历基本决定了他是一个什么样的人，我要感谢爸爸和妈妈让我经历的成长，让我成长为一个没有让人失望的人。&lt;/p&gt;
&lt;p&gt;我记下了一些一下子就能想到的事情，还有太多太多细节都回荡在脑海里，如果有时间的话，应该仔细地写一写这些宝贵的回忆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i4.fuimg.com/640680/c81907e7cb9988e7.jpg&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="https://www.cmwonderland.com/categories/life/"/>
    
    
      <category term="life" scheme="https://www.cmwonderland.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Linear Regression Assignment 13</title>
    <link href="https://www.cmwonderland.com/2018/05/28/line7/"/>
    <id>https://www.cmwonderland.com/2018/05/28/line7/</id>
    <published>2018-05-28T08:01:19.000Z</published>
    <updated>2018-05-28T08:45:29.327Z</updated>
    
    <content type="html"><![CDATA[<p>The thirteenth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/linearweek13.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/linear_regression_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:<br><div class="row"><iframe src="https://drive.google.com/file/d/1WibEAysXOszktnD3d1BK8bDNcS-vN6wN/preview" style="width:100%; height:550px"></iframe></div></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dat&lt;-read.table(&quot;CH19PR10.txt&quot;)</span><br><span class="line">names(dat)&lt;-c(&apos;y&apos;,&apos;age&apos;,&apos;gender&apos;)</span><br><span class="line">dat$age&lt;-factor(dat$age)</span><br><span class="line">dat$gender&lt;-factor(dat$gender)</span><br><span class="line">fit&lt;-aov(data=dat,y~age*gender)</span><br><span class="line">summary(fit)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library(&quot;ggpubr&quot;)</span><br><span class="line">ggboxplot(dat, x = &quot;age&quot;, y = &quot;y&quot;, color = &quot;gender&quot;,</span><br><span class="line">          palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</span><br></pre></td></tr></table></figure><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (i in c(1,2,3,4,5,6))&#123;</span><br><span class="line">  print (sum(fit$residuals[(6*(i-1)+1):(6*i)]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Yes, they sum to zero for each treatment.</p><h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">par(mfrow=c(1,2))</span><br><span class="line">stripchart(split(resid(fit), dat$gender), method = &quot;stack&quot;,  pch = 19)</span><br><span class="line">abline(h = seq(2, 4)-0.1)</span><br><span class="line">title(&quot;Aligned Residual Dot Plot gender&quot;)</span><br><span class="line">stripchart(split(resid(fit), dat$age), method = &quot;stack&quot;,  pch = 19)</span><br><span class="line">abline(h = seq(2, 4)-0.1)</span><br><span class="line">title(&quot;Aligned Residual Dot Plot age&quot;)</span><br></pre></td></tr></table></figure><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rq&lt;-c()</span><br><span class="line">for (i in c(1:36)) &#123;</span><br><span class="line">  qq&lt;-qnorm((i-3/8)/(36+1/4))</span><br><span class="line">  rq&lt;-c(rq,qq)</span><br><span class="line">&#125;</span><br><span class="line">plot(rq,sort(fit$residuals))</span><br><span class="line">abline(0,1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor(rq,sort(fit$residuals))**2</span><br></pre></td></tr></table></figure><p>when n = 36 and significance value = 0.05, the Critical Values for Coefficient of Correlation between Ordered Residuals and Expected Values under Normality is 0.97. And the correlation calculated is 0.9720399. So it appears reasonable.</p><h2 id="e"><a href="#e" class="headerlink" title="e"></a>e</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">par(mfrow=c(1,2))</span><br><span class="line">arrofres = matrix(nrow = 6,ncol = 6)</span><br><span class="line">for (i in c(1,2,3,4,5,6))&#123;</span><br><span class="line">  arrofres[i,]&lt;-fit$residuals[(6*(i-1)+1):(6*i)]</span><br><span class="line">&#125;</span><br><span class="line">matplot(arrofres)</span><br><span class="line">plot(fit$residuals,type = &apos;b&apos;)</span><br></pre></td></tr></table></figure><p>residuals in each treatment’s sum is equal to zero, and it seems that the residuals has no relation with treatments.</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><h2 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interaction.plot(dat$age,dat$gender,dat$y,type=&quot;b&quot;,col=c(&quot;red&quot;,&quot;blue&quot;),pch=c(16,18))</span><br></pre></td></tr></table></figure><p>age has larger effect and gender has small effect, since they are nearly parrallel, they have little interaction.</p><h2 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-aov(data=dat,y~age*gender)</span><br><span class="line">anova(fit)</span><br></pre></td></tr></table></figure><p>age, it has the largest SSR.</p><h2 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-aov(data=dat,y~age*gender)</span><br><span class="line">anova(fit)</span><br><span class="line">qf(0.95,2,30)</span><br><span class="line">1-pf(1.0581,2,30)</span><br></pre></td></tr></table></figure><ul><li>Hypothesis: $H<em>0 : \sigma^2</em>{\alpha\beta}&gt;0, i =1,2,3,j=1,2 $</li><li>Decision rule: Reject $H<em>0$ if $F* &gt;F</em>{0.95,2,30}$</li><li>Conclusion: Since $F∗ = \frac{MSAB}{MSE} = 1.0581$ , we do not reject $H_0$ and conclude that there<br>are no interaction effects with p = 0.3597133</li></ul><h2 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qf(0.95,2,2)</span><br><span class="line">qf(0.95,1,2)</span><br><span class="line">1-pf(66.2907,2,2)</span><br><span class="line">1-pf(2.2791,1,2)</span><br></pre></td></tr></table></figure><h3 id="i-Factor-A-age-main-effect"><a href="#i-Factor-A-age-main-effect" class="headerlink" title="i. Factor A (age) main effect"></a>i. Factor A (age) main effect</h3><ul><li>Hypothesis: $H_0 : \alpha_i = 0 vs H_a$ : at least one $\alpha_i$ is not 0, i = 1, 2, 3</li><li>Decision rule: Reject $H<em>0$ if $F∗ = MSA/MSE &gt; F</em>{0.95,2,2} = 19$</li><li>Conclusion: Since F∗ = 158.361/2.528 =62.6428 , we reject $H_0$ and conclude that there is<br>Factor A main effect for the number of coats with p =0.01486089</li></ul><h3 id="ii-Factor-B-gender-main-effect"><a href="#ii-Factor-B-gender-main-effect" class="headerlink" title="ii. Factor B (gender) main effect"></a>ii. Factor B (gender) main effect</h3><ul><li>Hypothesis: $H_0 : \beta_i = 0 vs H_a$ : at least one $\beta_i$ is not 0, i = 1, 2</li><li>Decision rule: Reject $H<em>0$ if $F∗ = MSB/MSE &gt; F</em>{0.95,1,2} = 18.51282$</li><li>Conclusion: Since F∗ = 2.2791 , we do not reject $H_0$ and conclude that there is no<br>Factor B main effect for the number of coats with p =0.2701973</li></ul><h2 id="f"><a href="#f" class="headerlink" title="f"></a>f</h2><p>Yes, age has large effect and gender has little effect, and there are no apparent interactions</p><h2 id="g"><a href="#g" class="headerlink" title="g"></a>g</h2><ul><li>single factor: age 316.7, Residuals   82.2 </li><li>two factor: age 316.7, gender    5.44, age:gender   5.06, Residuals   71.67<br>factor A age has same sum of squares, and residuals’ sum of squares in single factor ANOVA equals to all other sum of squares in two factor ANOVA except age. Yes, the degree holds the same relation.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The thirteenth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>系统临界态对智能的启发</title>
    <link href="https://www.cmwonderland.com/2018/05/23/aboutbrain&amp;dl/"/>
    <id>https://www.cmwonderland.com/2018/05/23/aboutbrain&amp;dl/</id>
    <published>2018-05-23T08:49:39.000Z</published>
    <updated>2018-05-23T11:25:31.484Z</updated>
    
    <content type="html"><![CDATA[<p>本文写于2016年末，作为《脑科学与人工智能》一课的作业</p><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>人工智能领域自惊艳出世以来已有几十年的历史，经过长久的蛰伏和起伏，在这两年徐徐展开渐至高潮的宏伟篇章。对人工智能的探讨是一个复杂的深奥的话题，我想选择人工智能与生物接壤的一个小角度，谈谈我对智能的理解。</p><a id="more"></a><p>脑科学与人工智能有着天然的交叉，虽然很多做技术的人并不懂得古老又崭新的神经学知识。我们的大脑确实格外神秘，我们的大脑有上千亿的神经元，还要再多上几个数量级的突触。这个数量虽然远远不如广袤的宇宙中行星的个数，但也足够赋予渺小的人类畅想的资质和勇气。思考本身就是个值得思考的有趣的话题，然而这类话题往往陷入人择原理的尴尬处境。人脑是如此复杂精细的结构，以至于我们用还原论的方法研究至今还进展尚浅，甚至也弄不明白人工智能和大脑结构究竟哪个能更快地弄明白原理。因此我想稍微降低一些难度，也是受到宋老师的启发，从智能的角度思考，试图像数学家和物理学家那样，思考得更基本一些。</p><h3 id="简单与复杂"><a href="#简单与复杂" class="headerlink" title="简单与复杂"></a>简单与复杂</h3><p>智能、生命的定义是什么，是一个不止由生物学家专有的宏大的问题。薛定谔就曾经写过令生物学家折服的小册子《生命是什么》，其负熵的概念颇有新意，只是那个时候意识和智能并没有被摆到很高的位置，而如今身体其他部位问题的解惑愈发加重了人们对于智能和意识的兴趣，我甚至觉得意识和智能就是万物之源，自然真理乃至永生之匙。</p><p>一门自称为科学的学科总是试图用尽可能少的通行的原理构建体系。物理学家苦苦寻觅统一基本作用力的终极理论，生物学家却不得不一开始就面对真实世界的复杂的模型。Paul Nurse曾经评论道：要真正理解细胞系统的复杂网络，可能不得不进入一个更抽象的陌生领域，这个领域更适于进行数学分析。</p><p>自从洛伦兹在分析天气问题时搞出来一套混沌科学的想法，这套神奇又诱人的理论就格外深入人心，人们可以把简单至三体问题复杂至生物系统、经济社会等各种问题代入其中并且摊手摇头。过去我们习惯于研究生物化学中的平衡状态，但是平衡态意味着寂静和死亡，生物系统中存在着大量的非平衡态，正是在非平衡态中得以产生秩序与结构。</p><p>大脑是无可置疑的复杂系统，神经元的立体连接，不同化学物质的复杂作用让整个系统复杂得让人心碎。随着连接组学等学科的深入发展，有更多的理论工作者开始努力阐释系统的原理。我们希望系统是尽可能简洁的，纵然结果并不简洁，但是希望源头是简洁的。就像四种基本作用力和精确的宇宙常数带来的宏大的宇宙，机械决定论畅想过拉普拉斯妖这样的预言家。现在我们知道仅从物理角度是不够拼凑出真理的全部的，那么我们还需要多少尽量简单的东西呢？</p><p>简单可以产生让人炫目的复杂，比如冯诺依曼提出的元胞自动机。就是一种简单的对真实世界的模型化建构。通过简单的非线性函数的耦合，元胞自动机可以产生极端复杂的结果。比如规则为184的自动机，可以描述交通流、模拟晶体生长。规则30可以产生混沌，用来做伪随机数发生器。最强大的110，被证明具有图灵完备性，具有通用的计算能力。110也许是目前最简单的通用计算机了，可以计算自然界能够计算的复杂性的上限。Wolfram大胆地提出了新的自然定律，指出自然系统不可能产生不可计算的行为。自然界中各种过程实现的计算在复杂程度上都是本质等价的，没有比通用计算机所能进行的计算更复杂的了。</p><p>元胞自动机的规则如此简单，却能产生如此复杂的强大的结果让人振奋。如果，人脑也是这么简单就好了，或者，稍微复杂一些，但是逃不过一些简单的规则的组合，只是这些规则的非线性乃至量子性像一团薄雾蒙住了我们的眼睛，这样的迷雾我们是不怕的，人类对简洁的天然的追求总会为我们拨云见日，揭示复杂背后的简单。</p><h3 id="从简单到复杂：描述智能的临界态"><a href="#从简单到复杂：描述智能的临界态" class="headerlink" title="从简单到复杂：描述智能的临界态"></a>从简单到复杂：描述智能的临界态</h3><p>人工智能已经在很多领域取得了成就，语音、视觉、自动驾驶、语言、博弈等等领域。</p><p>但是遗憾的是每个机器学习的系统只能解决特定问题，并不像人类大脑经过简单学习学会新的东西，通用的智能似乎是计算机很难实现的。</p><p>通用的智能是否有方法进行描述？人工智能解决某个具体问题，我们总能找到一个标准去判断其好坏，比如下围棋，视觉、语音识别准确率。那么通用性的评价标准是什么呢？</p><p>在《临界：智能设计的原则》一书中有这样有趣的观点：</p><blockquote><p>把智能/人工智能定义为在任意环境中找到最优解的能力。</p></blockquote><p>这种神奇的能力，在我看来受到一些更基本的原理的影响：比如对称性，最小作用量原理和熵。比如很简单的例子：一个粒子在盒子里自由运动，一旦撞到壁游戏就结束，那么最安全的，选择最多的位置就是正中央；当单摆恰好直立时，有两种不同的摆动方向，这位它自身提供了最大的未来的可能性，虽然它本身会处于一种不稳定平衡的状态。而当系统变得复杂的时候，这种不稳定的最大化可能就很容易维持了。</p><p>比如在鸟群或者昆虫群的集体运动中，要让未来有更多的可能性，鸟群的可能性包括更多的食物和对捕食者的应对，当未来有无穷的可能性时它们仍然有办法做出响应。一个天然的想法是无限可能性=每个粒子完全随机，其实这个想法是不对的，完全随机意味着可能性的急剧降低，系统的统计学指标会趋于完全确定，而完全的有序当然也不是可能性最多的选择。只有在处于某种临界态上，群体可以维持完整的同时每个粒子个体可以感受到未来刺激，并且在整个群体中产生长程的效应，微小的扰动就可以在群体中产生剧烈的响应。这样的性质是临界态的重要特点，这样的临界态才是对应于未来可能性最大的状态，也就是智能的状态。这个例子很好理解，看一下鸟群和海洋中的鱼群是如何在空间中做出令人炫目的群体运动就可以有最直观的感受了。完全的无序和完全的有序都不是最大化未来可能的选择，真正的选择应该是自组织临界态。</p><p>未来选择最多的状态应该是处于对称状态，可以发生对称性破缺；从动力学角度看，应该停留在分叉点或者中间转变态的点。某个对称性消失，系统就可能产生转变。在临界态附近系统会表现出既不完全随机也不完全有序的状态。两个晶体的温度差距可以非常小，但是图案样式可以有非常大的变化。临界态的图像的构象上有自相似的特性，图案上有分形的结构，这是临界现象的特点。</p><h3 id="沙堆模型与森林大火"><a href="#沙堆模型与森林大火" class="headerlink" title="沙堆模型与森林大火"></a>沙堆模型与森林大火</h3><p>桌子上放着一些沙子，沙子还比较少，不断增加沙子之后沙堆的斜坡的斜率会增加，但是不会无限增加，我们从来没有见过九十度的沙堆。当沙堆的斜坡斜率小于某个值，不断加沙子就会增加斜率，而达到某个值之后，不管怎么加沙子，尽管斜率会发生一些微小的变化，但是会维持在一个临界的斜率，它不需要我们用某种智能的方法维持就会自发维持，这就是沙堆模型，这就是能让系统自动保持在临界态附近的最简单模型。</p><p>我对沙堆模型感兴趣的原因之一是我的实验室老板(2016年)汤超教授也是该模型的发现者之一。这个模型有非常非常深刻又广泛的内涵。当我们去研究简单的东西（比如沙堆）时却能发现深刻的规律的时候，我们就会不禁去想，这背后应该有什么非常有趣的规律。</p><p>沙堆模型是非平衡物理中非常简单又深刻的模型，沙堆不断流入的沙粒可以看做系统对外界能量和信息的吸收，从而使自己维持在自组织临界的状态，这个模型是具有普适的意义的。前面从简单到复杂的模型已经让我们意识到，自组织临界的维持是需要条件的，沙堆模型向我们很好的演示了这一点，而这样的思想与生命拥有的智能不谋而合：我们正是依靠摄入能量和信息来抵御熵增，避免生命走向彻底的无序。</p><p>一粒沙子也可以改变整个系统的临界态。有可能造成巨大的崩塌的，也有可能没有什么影响。接下来再放的沙子又有可能恢复系统的临界态，也就是说沙子会造成系统的崩塌，但是系统的临界态还可以保持在很小的范围内。如果沙堆还没有到达临界态上，放上一粒沙子我们就可以很确定地说沙堆不会发生崩塌，而达到临界态之后沙堆有可能发生任意规模的崩塌，这也就是我们前面说的最大未来可能性。至于发生多大规模的崩塌，几位专家很容易地统计出来，沙堆崩塌规模的大小与概率符合幂律分布。</p><p>如果在临界状态下，外界不做干预的情况下沙堆的未来是无法预知的，而非临界态时的未来是可知的，这也是我们前面说的最大化未来可能。地质学家很快发现，地震震级与发生概率也符合幂律分布，地壳的活动可能也处于自组织临界的状态，这也是地震等灾害难以预测的原因。沙堆模型也是一种特殊的元胞自动机模型，有很多相关的研究。</p><p>不但许多自然现象里蕴含着沙堆模型，更贴近生命与智能的例子里也蕴含着这样的思想。鱼群的游动受到的扰动与一条鱼的速度分布符合幂律分布，人群的合作也可以与沙堆模型类比。一个沙子扰动附近的沙子的分叉行为就符合分形产生的规则，如果有初始状态的确定，这个结构还可以不断增长，比如生物发育中三个胚层的发育。</p><p><img src="http://i1.fuimg.com/640680/e707a6c6f4ea10a4.png" alt="Markdown"></p><p>生物/智能“自发选择”的符合自组织临界的特性让人欣喜，我们可以考虑把研究生物智能问题和研究系统自组织问题融入一体，从简单的动力学和统计学角度去思考智能的特性，这无疑是很好的结果了。</p><h3 id="森林大火与大脑的临界态"><a href="#森林大火与大脑的临界态" class="headerlink" title="森林大火与大脑的临界态"></a>森林大火与大脑的临界态</h3><p>森林大火模型与沙堆模型以一些相似性。一棵树的燃烧可能造成周围格点，也就是其他树的燃烧，这与沙子掉落导致斜率超过临界值带来的崩塌是类似的。不同之处在于：沙堆可以继续放沙子，而森林大火刚刚燃烧过的地方是不能再燃烧的，这种本来就是自然的特性的东西显然与生物模型更符合！稍微考虑一下就会想到，这可以与生物的不应期对应，这在大脑的功能中是重要的。因此研究森林大火的统计性质，从某种程度上也是在研究大脑神经活动的统计性质。</p><p>何帆先生曾经写过一篇政治杂文，用森林大火的模型研究政治现象（可见这种朴素普适的想法是很容易被人接受的），他提出如果不断地掉落一些小的火种，让森林部分燃烧，这样森林虽然燃烧一部分，但是火灾规模都不大，如果平时不燃烧，那么系统有小概率产生大的火灾的时候就很糟糕了，这里面想讲的政治道理其实已经比较明显了。</p><p>森林可能不是一年四季都处于临界状态的，何帆先生先放一把火的做法就让森林不那么容易发生火灾了，这就是让系统偏离平衡态的方法。雨水很多的地方不易发生火灾，可以被称为亚临界状态，如果非常干燥极易发生火灾，可以被称为超临界状态。</p><p>超临界状态也是系统和生命常见的状态。如果崩塌中有正反馈，一个崩塌就越容易造成崩塌，就像马太效应一样。正反馈的直接效果会带来要不然不崩塌要不然剧烈崩塌的双稳态。<br>其实这个现象是非常容易发生的，在非理想情况的沙堆实验中，沙子落下时会带有一定冲击力，沙子掉下时就会造成本来不至于崩塌的地方也崩塌，也就是说沙堆会处于某种超临界的状态，这种正反馈的效果就是真实实验观察时发现了很多巨大的崩塌。</p><p>换句话说，在沙堆实验中只要给系统一些正反馈，就会使系统处于一种超临界的状态下，使系统要不不崩塌要不产生巨大崩塌，这种状态就是双稳态。因为沙堆的崩塌是连带性的，因此一个崩塌区域是连城一片的，所以真实的沙堆模型可能就没有抽象的理论中那么复杂的分形结构。</p><p>下面是针对大脑神经活动的思考。图灵曾经有过一段深受时代影响的对机器思想的论述。他从原子弹的原理受到启发，提出人类的大脑输入的想法就像反应堆外界轰击的中子，这些中子会造成我们大脑的反应，这些反应可能会逐步消失，但是过量的轰击甚至会导致反应堆解体。图灵进一步提出了不具有真正思想的动物的大脑可能的情况：动物的大脑处于亚临界状态，输入想法则回到静息状态，而人类的一部分思想处于超临界状态，给一个想法可以创造出无穷无尽的想法。图灵很自然地就提出，想让机器拥有智能，就要让机器也拥有超临界的状态。<br>然而图灵的想法有两个重大的失误，这种设想并不直接对应于神经的活动，超临界状态也并不是最好的选择。超临界状态只有两种结果：大的崩塌或者小的崩塌。如果大脑真的出现超临界状态，比如大脑大范围的神经放电，这种现象就对应于癫痫。（当然超临界状态也许会给人一些因祸得福的好处，比如近乎“疯狂”的创造力）到了八九十年代，提出沙堆模型的bak在一个神经科学会议上提出，人类的大脑应该是临界态的，虽然当时没有办法进行实验验证，但是如今我们已经有非常多的实验证明大脑确实处于临界状态。</p><p>从小尺度上，我们可以观察到与沙堆模型相似的神经雪崩，一个神经的兴奋造成周围神经的兴奋。大尺度上，类似于鸟群一样，大脑皮层在时间空间上产生长程关联，虽然是小概率但是可能发生在行为层次上，产生类似于临界慢化的现象，类似于疾病的潜伏期。</p><p>虽然实验说明在大脑一小块儿区域有临界态，切片与完整的大脑还是不一样的，如今通过对整个大脑的测量，比如功能核磁共振FMRI，来做大脑神经活动研究，如果要说明大脑整体处于临界状态，就要看大脑的神经关联是否足够长。FMRI实验证明了大脑皮层的神经活动存在长程关联，从而说明了大脑在整体上也处于临界态。如今已经有理论说明了大脑的临界性与大脑的网络结构有关。</p><p>有一些人因为看一些画面闪烁过快的电视节目发生癫痫：频率过高的输入信号就像沙堆模型中大规模的沙粒下落会导致大规模沙崩导致癫痫。而正常人在看到这些画面不会癫痫的保护机制包括输入信号频率增加后突触的活动会降低，就像发生小火变多之后森林大火的可能性减小，也就是说我们的大脑存在机制保持在临界态上不会产生崩溃。这个例子也让人联想到最近一项治疗阿尔兹海默症的突破性研究，在大量的药物治疗尝试后，科学家试着用一定频率的闪光治疗阿尔兹海默症并且取得了奇效。这让人浮想联翩，除了对某些化学物质的刺激，一定频率（40Hz）的光还对大脑产生了什么影响。现在人们已经知道大脑的临界态对大脑的意义包括信息传输、存储、计算能力的提升。</p><h3 id="大脑中的幂律分布"><a href="#大脑中的幂律分布" class="headerlink" title="大脑中的幂律分布"></a>大脑中的幂律分布</h3><p>大脑中也是存在幂律分布的，新近的研究更是进一步阐释了这一点。该研究的其中一个实验是以蒙着眼睛的小鼠作为实验对象，实验结果表明在生物大脑中可能存在一种通用的计算原理。在小鼠大脑发育的关键阶段，蒙着眼睛的小鼠的大脑中与视觉相关的大脑区域会被重新分配其它心智任务。这似乎能够证明人脑和老鼠的大脑相似，都具有可塑性，可以以一种通用计算机器（universal computing machine）的方式进行重新编程。</p><p>钱卓教授花费了十多年的时间研究连接理论（Theory of Connectivity）中，试图发现人脑灰质（grey matter）中存在的一种占据主导地位的统一计算原理</p><p>很多人都一直在思考，在智能的起源和大脑的进化上一定有一个基本的设计原理，就像是 DNA 的双螺旋结构，每一个生物都有普遍存在的遗传密码。钱卓给出了证据说明人脑可能是按照一种极其简单的数理逻辑来运作的。连接理论（Theory of Connectivity）认为一个叫做基于二次幂的置换（power-of-two-based permutation）的简单算法可以被用来解释大脑的回路，其可表示为$N = 2^i -1$</p><p>研究观察说明大脑的基本计算算法确实是通过基于二次幂的置换逻辑进行组织的。这个简单的数学逻辑可以用来解释整个进化谱（evolutionary spectrum）中的大脑计算，范围涵盖最简单的神经网络到最复杂的神经网络。这种工作是令人震撼和激动的。想一想，一项结合了神经科学，自然世界与人工神经网络的研究，把一种普适的规律就这样发现了：自然界的幂律分布，大脑的简洁又普适的运算机制，又能给深度学习很多启发，这样的发现是对神经科学的重大的冲击，对人工智能的极大地促进，对自己的更加深刻的认识。这个公式的简洁让人舒适又开心，自然界就应该是这样的：复杂又简单，简单源自于思想与原理的统一，只要原理是统一的，我们就只需要处理数学和具体条件的复杂，这样的复杂性就可以被聪明的人类掌握于手中。这就是自然、科学、数理与思想的奇妙和联系！</p><p>进一步把临界态的特征适用于大脑中，可以看到大脑的一些特点，比如长程性：大脑存在着长程的时间与空间相关，让大脑有了更高的整合特性，这也是大家关注的大脑与AI的重要区别。比如均衡性，保持整体与保持敏感的平衡，而且在做出反应后依然可以保持敏感，而不是接受一波信息之后就放松了。这种状态是稳定性与随机性的最佳的平衡。人的大脑还在有序无序之间表达出很强的适应性，一个很随机的系统很灵活但是不稳定，比如今天做这个明天做这个但是记不住，没法应用和进步；一个很稳定的大脑可以记住很多东西但是并不能互相联系（比如AI），因此一个适应性很强的大脑应该在稳定性与随机性之间。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>我相信世界应该是简洁的，我们总是希望用各种方法逼近一些尽可能简洁美好的基本真理。现在工业界的深度学习进展迅速，这是对人类发展有益的好事，但是对于科学界来说，更关键的不是盲目的冒进，而是静下心来发现原理性的东西，计算科学家希望从数学和计算的角度研究，神经科学家希望从大脑结构和功能的角度研究，我想我们应该加入更多的系统生物学和物理学、统计学的想法，把所有的这些东西都融合起来，追本溯源，也许就可拨云见日，目见真理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文写于2016年末，作为《脑科学与人工智能》一课的作业&lt;/p&gt;
&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;人工智能领域自惊艳出世以来已有几十年的历史，经过长久的蛰伏和起伏，在这两年徐徐展开渐至高潮的宏伟篇章。对人工智能的探讨是一个复杂的深奥的话题，我想选择人工智能与生物接壤的一个小角度，谈谈我对智能的理解。&lt;/p&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/tags/thoughts/"/>
    
      <category term="brain" scheme="https://www.cmwonderland.com/tags/brain/"/>
    
      <category term="deep learning" scheme="https://www.cmwonderland.com/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>Multivariate Statistics Assignment 5</title>
    <link href="https://www.cmwonderland.com/2018/05/23/multi2/"/>
    <id>https://www.cmwonderland.com/2018/05/23/multi2/</id>
    <published>2018-05-23T04:59:19.000Z</published>
    <updated>2018-05-23T07:19:15.683Z</updated>
    
    <content type="html"><![CDATA[<p>The fifth assignment of Multivariate Statistics. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/multihw5.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/multi-variable_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:<br><div class="row"><iframe src="https://drive.google.com/file/d/1AXRjDQXwYn_LiF3O0zzfgwiWLfeiThHp/preview" style="width:100%; height:550px"></iframe></div></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mp &lt;- matrix(c(5,2,2,2),2,2,byrow=T) </span><br><span class="line">eigen(mp)</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\text{The eigenvalue-eigenvector pairs are } \lambda_1 =6, e_1 =  [\frac{2}{\sqrt5},\frac{1}{\sqrt5}]; \lambda_2 =1, e_2 =  [-\frac{1}{\sqrt5},\frac{2}{\sqrt5}].\\\text{Therefore, the principle componenets become: }\\Y_1 = e_1^T X = \frac{2}{\sqrt5}X_1 +\frac{1}{\sqrt5}X_2\\Y_1 = e_2^T X = -\frac{1}{\sqrt5}X_1 +\frac{2}{\sqrt5}X_2\\\text{The total population variance explained by first principal component is:}\\\frac{var(Y_1)}{var(Y_1)+var(Y_2)} = \frac{\lambda_1}{\lambda_1+\lambda_2} = \frac{6}{1+6} \approx 85.71\%</script><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cov2cor(mp)</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\text{The correlation matrix } \rho = \left[\begin{matrix}1 & \sqrt\frac{2}{5} \\\sqrt\frac{2}{5}&1\end{matrix}\right]\\\text{The eigenvalue-eigenvector pairs are }\\\lambda_1= \frac{5+\sqrt {10}}{5}, \ e_1=\left[\begin{matrix}\frac{1}{\sqrt 2} \\\frac{1}{\sqrt 2}\end{matrix}\right]\\\lambda_1= \frac{5-\sqrt {10}}{5}, \ e_1=\left[\begin{matrix}-\frac{1}{\sqrt 2} \\\frac{1}{\sqrt 2}\end{matrix}\right]</script><script type="math/tex; mode=display">Let \ \mathbf{Z_i} = \frac{\mathbf{X_i}-\mu_i}{\sqrt {\sigma_{ii}}}, i =1,...,p. \text{The principal components become:}\\Y_1 = e_1^T Z = \frac{1}{\sqrt2}Z_1 +\frac{1}{\sqrt2}Z_2\\Y_1 = e_2^T Z = -\frac{1}{\sqrt2}Z_1 +\frac{1}{\sqrt2}Z_2\\\text{The total population variance explained by first principal component is:}\\\frac{var(Y_1)}{var(Y_1)+var(Y_2)} = \frac{\lambda_1}{\lambda_1+\lambda_2} = \frac{5+\sqrt{10}}{10} \approx 81.6\%</script><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><p>The principal components of Z obtained from the eigenvectors of the correlation<br>matrix ρ of X is different from those calculated from covariance matrix $\Sigma$. Because<br>the eigen pairs derived from $\Sigma$, in general not the same as the ones derived from $\rho$</p><h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2><p>THe correlations between $Y_j$ and $Z_i$ are:</p><script type="math/tex; mode=display">\rho_{Y_1,Z_1} = e_{11}\sqrt {\lambda_1} = \frac{1}{\sqrt2}\sqrt \frac{5+\sqrt {10}}{5} \approx0.903 \\\rho_{Y_1,Z_2} = e_{12}\sqrt {\lambda_1} = \frac{1}{\sqrt2}\sqrt \frac{5+\sqrt {10}}{5} \approx0.903 \\\rho_{Y_2,Z_1} = e_{21}\sqrt {\lambda_2} = - \frac{1}{\sqrt2}\sqrt \frac{5-\sqrt {10}}{5} \approx -0.429</script><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><h2 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># read the data</span><br><span class="line">setwd(&apos;~/Desktop/三春/3多元统计分析/作业/作业4/&apos;)</span><br><span class="line">dat&lt;-read.csv(&quot;table8.4.csv&quot;)</span><br><span class="line">X1&lt;-dat$x1</span><br><span class="line">X2&lt;-dat$x2</span><br><span class="line">X3&lt;-dat$x3</span><br><span class="line">X4&lt;-dat$x4</span><br><span class="line">X5&lt;-dat$x5</span><br><span class="line">covar &lt;- cov(dat)</span><br><span class="line">covar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eigen(cov(dat))</span><br><span class="line">prcomp(dat)</span><br><span class="line">summary(prcomp(dat))</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">Y_1 = e_1^T X= -0.2228228 X_1  -0.3072900 X_2 -0.1548103 X_3 -0.6389680 X_4 -0.6509044 X_5\\Y_2 = e_2^T X = 0.6252260 X_1 + 0.5703900 X_2 +0.3445049 X_3 -0.2479475 X_4 -0.3218478 X_5\\Y_3 = e_3^T X= -0.32611218 X_1 +  0.24959014 X_2 +0.03763929 X_3 +0.64249741 X_4 -0.64586064 X_5\\Y_4 = e_4^T X=  0.6627590 X_1 -0.4140935X_2 -0.4970499 X_3 +0.3088689 X_4 -0.2163758 X_5\\Y_5 = e_5^T X=-0.11765952 X_1 +0.58860803 X_2 -0.78030428 X_3 -0.14845546 X_4 +0.09371777 X_5</script><h2 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h2><p>From the summary above, the proportion of the total sample variance explained by the rst<br>three principal components is: 89.881%. It means that the first three explain almost all<br>variance.</p><h2 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h2><p>From 8-33, we have the CI of m $\lambda_i$:</p><script type="math/tex; mode=display">[\frac{\hat \lambda_i}{1+z(\alpha/2m)\sqrt{2/n}},\frac{\hat \lambda_i}{1-z(\alpha/2m)\sqrt{2/n}}]</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">z &lt;-qnorm(1-1/6)</span><br><span class="line">cical &lt;-function(lambda)&#123;</span><br><span class="line">  c(lambda/(1+z*(1/103)**0.5),lambda/(1-z*(1/103)**0.5))</span><br><span class="line">&#125;</span><br><span class="line">cical(0.0013676780)</span><br><span class="line">cical(0.0007011596) </span><br><span class="line">cical(0.0002538024)</span><br></pre></td></tr></table></figure><p>CIs are: [0.001248653 0.001511786], [0.0006401396 0.0007750385], [0.0002317147 0.0002805447]</p><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(c(0.52926, 0.80059, 0.89881, 0.95399, 1.00000),ylab=&quot;Cumulative proportion&quot;,xlab=&quot;Component number&quot;,type=&apos;b&apos;)</span><br></pre></td></tr></table></figure><p>From the cumulative proportion plot, it seems that three dimensions’ PC are enough.</p><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><h2 id="a-2"><a href="#a-2" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library(bootstrap)</span><br><span class="line">data(scor)</span><br><span class="line">plot(scor)</span><br></pre></td></tr></table></figure><h2 id="b-2"><a href="#b-2" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor(scor)</span><br></pre></td></tr></table></figure><h2 id="c-2"><a href="#c-2" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">prcomp(scor)</span><br><span class="line">summary(prcomp(scor))</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">Y_1 = e_1^T X= -0.5054457 X_1  -0.3683486 X_2 -0.3456612 X_3 -0.4511226 X_4 -0.5346501 X_5\\Y_2 = e_2^T X = -0.74874751 X_1 -0.20740314 X_2 + 0.07590813 X_3 +0.30088849 X_4 +0.54778205 X_5\\Y_3 = e_3^T X= 0.2997888 X_1   -0.4155900 X_2 -0.1453182 X_3 -0.5966265 X_4 +0.6002758 X_5\\Y_4 = e_4^T X=  -0.296184264 X_1 + 0.78288817X_2 +0.003236339 X_3 -0.518139724 X_4 +0.175732020 X_5\\Y_5 = e_5^T X= -0.07939388 X_1 -0.18887639 X_2 +0.92392015 X_3 -0.28552169 X_4 -0.15123239 X_5</script><h2 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(c( 0.6191,0.8013 ,0.8948 ,0.97102, 1.00000),ylab=&quot;Cumulative proportion&quot;,xlab=&quot;Component number&quot;,type=&apos;b&apos;)</span><br></pre></td></tr></table></figure><p>I will choose the first too for these three PCs take almost 80% of total variance.</p><h2 id="e"><a href="#e" class="headerlink" title="e"></a>e</h2><p>PC1 may stand for the indicator of scores on all subjects. PC2 has more straightforward mearning: it is related to closed or open rules.</p><h2 id="f"><a href="#f" class="headerlink" title="f"></a>f</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(&apos;ggfortify&apos;)</span><br><span class="line">autoplot(prcomp(scor,scale=TRUE),colour=&apos;green&apos;,label=TRUE)</span><br></pre></td></tr></table></figure><h2 id="g"><a href="#g" class="headerlink" title="g"></a>g</h2><p>$\chi^2_2(0.05) = 5.99$<br>I use python to check the outlier:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(strr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.array(strr.split(<span class="string">' '</span>)).astype(<span class="string">'float'</span>).reshape(<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">pca = PCA(n_components=<span class="number">2</span>, svd_solver=<span class="string">'full'</span>)</span><br><span class="line">dat = pca.fit_transform(data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ellipse</span><span class="params">(i)</span>:</span></span><br><span class="line">    x,y = dat[i,<span class="number">0</span>],dat[i,<span class="number">1</span>]</span><br><span class="line">    a =  (x/<span class="number">26.2105</span>)**<span class="number">2</span> + (y/<span class="number">14.2166</span>)**<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> a &gt;=<span class="number">5.99</span>:</span><br><span class="line">        <span class="keyword">print</span> (i,a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(data.shape[<span class="number">0</span>]):</span><br><span class="line">    ellipse(i)</span><br></pre></td></tr></table></figure></p><p>And we can find eight outliers: 1,2,23,28,66,76,81,87</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The fifth assignment of Multivariate Statistics. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>MAC用automator创建小应用解决一些简单需求</title>
    <link href="https://www.cmwonderland.com/2018/05/22/customizeapp/"/>
    <id>https://www.cmwonderland.com/2018/05/22/customizeapp/</id>
    <published>2018-05-22T09:35:37.000Z</published>
    <updated>2018-05-22T10:07:02.670Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本来是要解决mac一个很蠢的问题的：无法新建文件。</strong></p><p>之前的策略有两种：一是复制粘贴其他的文件过来。另一个是cd到当前目录下然后touch一个文件。这个有点麻烦，首先cd还得拖到终端一个文件才能找对位置。</p><p>这次用了Mac自带的automator自己做一个简单的生成新文件的应用，非常简单。</p><p>显然既然automator还可以用shell脚本，能低成本实现的东西还是很多的。</p><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=21224493&auto=1&height=66"></iframe><h2 id="STEPS"><a href="#STEPS" class="headerlink" title="STEPS"></a>STEPS</h2><h3 id="open-automator"><a href="#open-automator" class="headerlink" title="open automator"></a>open automator</h3><h4 id="select-application"><a href="#select-application" class="headerlink" title="select application"></a>select application</h4><p><img src="http://i4.fuimg.com/640680/f7023d7d9b64c7a6.png" alt="Markdown"></p><h4 id="select-AppleScript-on-left-bar"><a href="#select-AppleScript-on-left-bar" class="headerlink" title="select AppleScript on left bar"></a>select AppleScript on left bar</h4><p><strong>WRITE</strong><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">on</span> <span class="built_in">run</span> &#123;input, parameters&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"Finder"</span></span><br><span class="line"><span class="keyword">set</span> selection <span class="keyword">to</span> make new <span class="built_in">file</span> <span class="keyword">at</span> (<span class="keyword">get</span> insertion location)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> input</span><br><span class="line"><span class="keyword">end</span> <span class="built_in">run</span></span><br></pre></td></tr></table></figure></p><h3 id="save-as-file-app-in-somewhere"><a href="#save-as-file-app-in-somewhere" class="headerlink" title="save as file.app in somewhere"></a>save as file.app in somewhere</h3><blockquote><p>YOU can use your own icon, just change the picture to icns and drag it to apps/contents/resources to replace the original one. And also copy your picture to the <strong>Get Info Menu</strong></p></blockquote><h3 id="customize-toolbar"><a href="#customize-toolbar" class="headerlink" title="customize toolbar"></a>customize toolbar</h3><h4 id="drug-your-new-application-to-toolbar"><a href="#drug-your-new-application-to-toolbar" class="headerlink" title="drug your new application to toolbar"></a>drug your new application to toolbar</h4><p><img src="http://i4.fuimg.com/640680/a26d9176d1204015.png" alt="Markdown"></p><p><strong>DONE</strong></p><p><img src="http://i4.fuimg.com/640680/8d684b37c5e1ad34.png" alt="Markdown"></p><p><strong>NEXT TIME click the button above to enjoy your design</strong></p><p>As you can see, I design another one to sync my scripts, contents:</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/Desktop/</span>website<span class="regexp">/jamesblog /</span>Volumes<span class="regexp">/New\ Drive/</span></span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/Desktop/</span>bear <span class="regexp">/Volumes/</span>New\ Drive/</span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/Desktop/</span>爷爷回忆录gitbook <span class="regexp">/Volumes/</span>New\ Drive/</span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/Desktop/</span>三春 <span class="regexp">/Volumes/</span>New\ Drive/</span><br><span class="line">rsync -avzh --max-size=<span class="string">'5M'</span> --exclude-from=<span class="string">'exclude_me.txt'</span> <span class="string">hpc1:</span><span class="regexp">~/projects/</span> <span class="regexp">/Volumes/</span>New\ Drive/hpc1backup</span><br><span class="line">rsync -avzh --max-size=<span class="string">'5M'</span> --exclude-from=<span class="string">'exclude_me.txt'</span> <span class="string">ibme:</span><span class="regexp">~/projects/</span> <span class="regexp">/Volumes/</span>New\ Drive/ibmebackup</span><br><span class="line">cp <span class="regexp">/Users/</span>james<span class="regexp">/snippets.json /</span>Users<span class="regexp">/james/</span>Library<span class="regexp">/Jupyter/</span>nbextensions<span class="regexp">/snippets/</span>snippets.json</span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/snippets.json ibme:/</span>Share<span class="regexp">/home/</span>chenxupeng<span class="regexp">/.local/</span>share<span class="regexp">/jupyter/</span>nbextensions<span class="regexp">/snippets/</span></span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/snippets.json cnode:/</span>home<span class="regexp">/chenxupeng/</span>.local<span class="regexp">/share/</span>jupyter<span class="regexp">/nbextensions/</span>snippets/snippets.json</span><br><span class="line">rsync -avzh <span class="regexp">/Users/</span>james<span class="regexp">/snippets.json hpc1:/</span>home<span class="regexp">/chenxupeng/</span>.local<span class="regexp">/share/</span>jupyter<span class="regexp">/nbextensions/</span>snippets/</span><br></pre></td></tr></table></figure><p><img src="http://i4.fuimg.com/640680/4c85f5ca77cab348.png" alt="Markdown"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本来是要解决mac一个很蠢的问题的：无法新建文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之前的策略有两种：一是复制粘贴其他的文件过来。另一个是cd到当前目录下然后touch一个文件。这个有点麻烦，首先cd还得拖到终端一个文件才能找对位置。&lt;/p&gt;
&lt;p&gt;这次用了Mac自带的automator自己做一个简单的生成新文件的应用，非常简单。&lt;/p&gt;
&lt;p&gt;显然既然automator还可以用shell脚本，能低成本实现的东西还是很多的。&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="setup" scheme="https://www.cmwonderland.com/tags/setup/"/>
    
      <category term="mac" scheme="https://www.cmwonderland.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>混沌之思</title>
    <link href="https://www.cmwonderland.com/2018/05/21/dailythoughts/"/>
    <id>https://www.cmwonderland.com/2018/05/21/dailythoughts/</id>
    <published>2018-05-21T11:47:25.000Z</published>
    <updated>2018-05-22T12:33:10.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念-amp-will-update-daily"><a href="#碎碎念-amp-will-update-daily" class="headerlink" title="碎碎念&amp; will update daily"></a>碎碎念&amp; will update daily</h2><blockquote><p>基本来自于过去的各处的碎碎念，比如记录在朋友圈的，便签里的，笔记里的。和孟孟微信聊天的太不好找了，以及很多时候口头聊的时候觉得自己充满哲理与逻辑的很好的话都没有记录下来，总会有种可惜的感觉，不过也许很多东西都已经内化为大脑结构的一部分了吧。OK，让我们先从中二热血的开始。</p></blockquote><a id="more"></a><hr><p>最爱的龙珠超就这么完结啦，追了两年多，每周日一集，最忙的时候（美赛）都在凌晨补看了，考完托福出来也要先看了龙珠超再吃饭。总有人说龙珠超画面崩坏缺乏诚意，但是真的很好看呀，对于一个上大学了还把龙珠漫画重温了很多遍的人来说，龙珠系列二十多年后还有最爱的漫画的新篇章可以看真的太幸福了，记得去年十月八号109，110两集联播的大战的震撼，让我很多个晚上一遍遍地重温，龙珠总是能在这么多年后还点燃全世界粉丝的热情，龙珠这么赚钱的ip，明年剧场版搞完肯定还会接着画，悟空会更强，故事会继续~<a href="https://bbs.hupu.com/21773153.html" target="_blank" rel="noopener">https://bbs.hupu.com/21773153.html</a> </p><blockquote><p>记于龙珠超完结。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=536623434&auto=1&height=66"></iframe><hr><p>这么多年了，江南想起来他还有龙族这本书要写了，人已经变成中年大叔了，还能热血得起来么。龙族勾起了我很多美好的回忆，和好哥们一起讨论每一个细节是非常愉快的经历，现在又可以在江南扣扣索索地每次更新两页纸之后吐槽了。</p><blockquote><p>记于龙五开始连载</p></blockquote><hr><p>校庆期间读到最好看的故事，把各个时代的知名人物给串起来了，很多感触：<br>最重要的故事总是被少数几个人推动着，如果没有张钹院士四十年来持续不断对人工智能的大力推进，新一代马少平这样的教师，还有周枫这样的天才，恐怕清华和人工智能未必会有多少缘分；真的很羡慕96年左右的黄金时代，在最早通互联网的地方那批人受到那么好的滋润，实习工资一万一个月，那时候北京房价才两千多吧，到现在也都成了一方互联网大佬，生逢其时很重要；计算机系真的是收纳聪明人，而且课程导向不断把人培养的更聪明有趣的地方，好像唐文斌在文章里说：“我们当时想办法把多门课的大作业凑成一个作业，努力编出一个很合理的题目，既可以交这边又能交那边，就可以用两倍时间把一个大作业做的非常之nb”，上学期用这个方法一个项目用了三遍，可惜没舍得花三倍的时间做好，可见投机取巧容易，有挑战心很难，而编程真的是很容易让人有挑战心的事情；<br>前辈们铺路，这个时代真好。</p><p><a href="https://mp.weixin.qq.com/s/cClINXB242XLmZ6AhE8e_w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/cClINXB242XLmZ6AhE8e_w</a></p><blockquote><p>记于校庆</p></blockquote><hr><p>太酷炫了，而且看起来更贴近医疗应用，如果设备再小型化商业化的话，是不是可以说细胞尺度的医疗大数据时代就来了，也许有一天真的可以对活体生物做细胞尺度的建模？也许有一天可以对大脑做活体建模呢</p><p><a href="https://mp.weixin.qq.com/s/vn4SL0672OPytqET_4F1Hw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vn4SL0672OPytqET_4F1Hw</a></p><hr><p>施boss实在是太了不起了，人生为一件大事来。<br>看校董会俨然是清华系把持的了，说不定几十年后中国教育史”私立大学的曙光”一章会这么写：在当时最好的大学，几位治学与育人都具有超人眼光和手段的学界领袖杨振宁，施一公，钱颖一做出了一步大胆的尝试，从而孕育出了一所世界顶级的中国的私立大学。</p><p><a href="https://mp.weixin.qq.com/s/KiZpIVvtfVHEh-so4szbUQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/KiZpIVvtfVHEh-so4szbUQ</a></p><hr><p>强无敌，说好的一年，这才几个月就完成了第一步，我觉得这项目就是杰出科学家和基金会结合的典范，真女神级科学家Regev致力推动的人类细胞图谱，本来也是个上帝工程，需要Regev一遍遍强调一步步慢慢合作就好，不一定要有一个目标，完成一部分也行，结果扎克伯格的资金进来，全球顶级科学家积极申请，提前完成测序，以后数据要是都公开的话计算生物学家要幸福晕了<br>看来下一步忽悠几个富人给连接组学多捐点钱，什么研究大脑结构说不定可以变得更聪明、不得老年痴呆，长生不老什么的，说不定没几年就真把大脑连接全测出来了，要乐观，我看21世纪真还就是生命科学的世纪</p><p><a href="https://mp.weixin.qq.com/s/W2ItMP-LK5qPnAozxgsORg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/W2ItMP-LK5qPnAozxgsORg</a></p><hr><p>这个真的好啊，快赶上以前mini款嗯价格了，太实惠了，而且支持pencil！ipad pro得五千往上了吧，再加上刚和罗技推出的300的pencil，两千多一点用最新款ipad而且是支持pencil款，ipad真是款越来越没对手的产品，，，</p><p><a href="https://wap.ithome.com/html/352915.htm" target="_blank" rel="noopener">https://wap.ithome.com/html/352915.htm</a></p><hr><p>拿到连接组的电镜数据的时候玩了个无聊的游戏，把空间的一百多层切片按时间顺序展开，发现神经元逐层的伸展在时间尺度上竟然像细胞的无规则运动，感觉这种时空的转换好有趣，如果时间尺度的游动在空间上展开又会是什么有趣的样子呢</p><blockquote><p>记于把空间图像动画呈现后的感想</p></blockquote><hr><p>百度云总裁的程序员表达风格，斯隆管理评论的主席这数据是用matplotlib画的吧，随随便便写个评论发Nature好爽，李稻葵随时装逼：和硅谷风险投资人Peter Thiel吃早餐聊起来人工智能，，，李稻葵是真帅真聪明真有趣，谦虚且学习能力极快，不愧是给boss上课的顶级智囊，李珍老师真幸福，，，疯狂夸工科比MIT强，自黑经管研究很弱，狂黑特朗普，然后自夸政府高科技领域政策宽松，狂赞美国的天才制度，狂黑中国的中庸培养扼杀个性。然后讨论一波不停骂特朗普，估计中美贸易战快被烦死了<br>另外说什么2030还不知道美国总统在哪儿呢，应该搞个AI xian fa，中国想得远，两个一百年，美国整天就在竞选，总感觉在黑，，，</p><blockquote><p>记于中美人工智能前沿论坛</p></blockquote><hr><p>这样做大概就默认了连接组学真的可以从结构还原记忆了，虽然差的太远太远，保存大脑并没有用，还得切成极其薄的切片，亚细胞尺度地成像再重构出来才行，以及如果是致死性的，那就是哲学上的命题了，这个人就不是自己了，应该只有忒休斯之船那样在活着的时候一部分一部分替换才可以，做不影响生命但是存储记忆部位的材料替换。看人类的技术进展，几十年内也没什么戏，这个初创公司的简单的把戏，也就是给个最后一刻的安慰罢了</p><p><a href="https://mp.weixin.qq.com/s/Rq_uUmdllhFvpr_JmNmv3g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Rq_uUmdllhFvpr_JmNmv3g</a></p><hr><p>有意思有深度，量子位这位编辑总结的好。之前我还专门总结过<a href="https://www.cmwonderland.com/2018/04/10/Deep-Learning-Practice/">Deep Learning Practice | WonderLand</a></p><p><a href="https://mp.weixin.qq.com/s/R-29UGMvHyBp8OkWk7zdpw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/R-29UGMvHyBp8OkWk7zdpw</a></p><hr><p>这篇文章读了五遍，体会越来越深。初中的时候从宋老师那里借来犹太名人传科学家册读，活脱脱一部量子力学史，读Hinton的故事则是在读一部深度学习史，让人迫不及待地想知道个究竟，为什么事情这么发生了。Hinton是鼻祖，是如今万人崇敬的精神领袖，还对神经和意识无比痴迷，是个真正的科学家，且家学渊源深厚，“做学者，或者做个失败者”，从这种故事中获得历史上的大师们的精神传承非常有意义。我觉得Hinton有一种真正的科学家的魅力，不够入世，拥有庞大“虚幻”的梦想，  在寒冬和热潮中竟然能够不动摇，这种传世的科学精神非常非常的了不起。</p><p><a href="https://mp.weixin.qq.com/s/vNYMHFhXeEzz6Ny0p1pbNA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/vNYMHFhXeEzz6Ny0p1pbNA</a></p><hr><p>太厉害了！马斯克原版roadster的神秘力量，太了不起了，并联发动机还可以回收，有人总是想找借口说马斯克没什么了不起，就是一个使用NASA技术的商人，NASA养多少亲儿子了怎么没见到成功的，马斯克想搞火箭的时候还得跑到俄罗斯买的时候又怎么说呢。我总觉得用凡人和投资人的角度去揣度马斯克是现实却狭隘庸俗的，当你被自我眼界所拘束的时候，他在用他的方式追寻星辰大海</p><p><a href="https://wap.ithome.com/html/346687.htm" target="_blank" rel="noopener">https://wap.ithome.com/html/346687.htm</a></p><hr><p>上午的讲座是听过的最佳之一，付向东太了不起了，RNA world的领军人物，人生经历颇为传奇，培养的学生也极其传奇，谈起人生经验科研经验培养经验，不知道台下一堆PI们有没有脸红耳赤的感觉，而且总能抓住重大科学问题，领域的切换也非常顺滑，还滑到了那么有趣的神经领域，最后落到疾病的治疗，实在是很了不起。现在愈发想以后去读个postdoc了，就是不知道六七年后付老师还搞不搞得动啦。午餐的时候听付老师继续谈笑风生，实在是太了不起了了，CNS和子刊发了七十多篇了，，大谈科研经验培养经验人生经验，感觉比施一公还强啊，，，博后做PI成功率80%，简直高的可怕，越来越想去读个postdoc了，，</p><blockquote><p>记于付向东讲座后</p></blockquote><hr><p>哇，从来没有看过这么特别且震撼的电影，今天和朋友去偏僻的海淀工人电影院看一部上映很久的梵高的电影，六万多帧，要么是彩色的油画，要么是黑白的胶片，抽象的影像把让细节和故事本身特别抓人，故事竟然有了点罗生门式的悬疑的味道，却没有走偏，原来观众想寻找的害死梵高的凶手并不存在，谁都没有错，每个人都不是坏人，只剩对天才的崇敬和对天才带来的性格与命运的诅咒的旁观式的叹惋，感觉现在越来越能理解这种事情了，那些让未来的世界变得美好的却承受着来自这个世界的痛苦的人，努力地付出却得痛苦地承认自己得不到回报，这种天赋让人羡慕也让人心疼。</p><blockquote><p>记观影《至爱梵高》</p></blockquote><hr><p>哇很美很美，顺便夹带点私货，学细胞的时候就在想，这么枯燥无味的讲述方式和背书方式简直是毫无用处的折磨，如果有人做了一个3D可视化或者VR的细胞全景，整个学期大家可以真的在细胞里遨游畅览，效果会好太多。只可惜有能力做出来的人大多没时间做。施一公几年前就想做Science is cool的让更多人爱上自然科学的工作了，看起来也没空做，而广大PI们工作繁重，而且恐怕也不舍得让实验室博士生们花很久做这个，我见过的最开明的就是张强锋老师让学生玩了几个月VR看结构了。最后还有一个很重要的问题，对于生物和化学这样公认的大坑来说，爱和理想能不能解决问题。我的很多同学在一门门地背生物课的时候都深受其苦，新雅的学生们和外系混住，意识到自己数学计算机和各种专业课学的太简单太水的也分分修辅修额外选课，让我觉得这么学科和它的解决方法太不匹配了，生物是最美丽动人的学科，但是仿佛在蛮荒时期的不定量，不系统，有大量难解之谜的研究方法让人失落，好像生物应该是四十二世纪的科学，我们都生的太早了一样。<br>而且最好玩的事情在于，生物学细碎却庞大，不需要多么费劲就总能发出来文章，而且往往数据和意义可以帮忙保驾护航，让一堆数学家物理学家嫉妒经费，这些更加美丽理性的学科更难推进，LHC烧了多少经费也验证不出来几个美妙的理论，有的数理出身的还会转生物来抢饭碗，这些人往往都聪明强大，包括在就业工作的时候，这些学了无数门复杂可怕的专业课的学生的综合水平也大大高于生物系的学生，我见识过电子系物理系计算机系这些专业的学生，课程设置上生物系一学期的课程带来的智力挑战未必比得上这些院系一门课程，院系间的差距大的可怕，最终带来了人的巨大差距。<br>所以结论就是，生物学太美丽而宏大，这么复杂的系统让我们丧失了定量化的工具，丧失了运用大脑更复杂的数理逻辑体系化解决的能力，于是我们选择了一条很卑微的道路，把精彩的专业课变成了专业内常识与名词介绍与记忆课程。其实一条复杂的信号通路，一个蛋白的互作网络，都需要大量的数学模型去描述，但是这样没法讲，没法做，投入太多，大家压力太大，研究看起来用不着这么难也能发文章，那就索性不要了好了。我去听过北大开的生物数学物理的课，讲如何在生物学问题里建模，课是数学系老师开的，课是数学物理专业学生选的。<br>从就业角度，大家当然愿意学金融，同样一片混沌模糊的专业，但是能赚钱，选计算机电子，累，动脑子但是赚钱，选数学物理，累动脑子，回头转行赚钱。选生物的话，似乎陷入了一个低门槛的陷阱，前两天一个PI问我，觉不觉得生物是一个大坑，每个人都知道它的问题，但是看起来这不是生物学的错，也不是大家的错，也许是生的早了的错，也许也有点想的不够多不够努力的错，所以对于广大社会群体来讲，同样不思考那么多，大学直接去计算机电子数学物理这些专业跟着被虐，都能学到很多能力，所以也怪大家主观能动性不强，还要怪生物学现象太多太多了，等二十五世纪一切尘埃落定，所有的一切发现都摆在生物学家眼前等待解释的时候，我相信那个时代的生物会是门槛最高最需要思维与理性的专业。希望这两代科学家解决好疾病衰老和神经的问题，让我们都有机会看到那一天吧。</p><p><a href="https://mp.weixin.qq.com/s/enkZra8kLqnV2gEi3ThTMA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/enkZra8kLqnV2gEi3ThTMA</a></p><hr><p>学校终于批复了嘛。中国最好的大学损失了一位未来的杰出校长，但是中国教育史上可能因此留下一个更加传奇的名字，这是件功德无量的大事，施一公说他要把西湖大学建成中国的Berkeley，一定可以的</p><p>前几任校领导，陈希是今上化工系的老同学，如今已经是中组部长，书记处书记，胡和平水利系出来，已经是陕西书记，陈吉宁卸任不过两年多，已经是北京市长，施boss本来就深得今上厚爱，政治上也是前途无量的，但是我感觉他仔细考虑过这些，作为一个更加纯粹的科学家和教育家，他找到了一种我们这些书生看起来更棒的青史留名的机会，他衡量过什么才是他后半生的人生大事，所以这份事业在他心中真的拥有无比厚重的分量</p><blockquote><p>记于施一公辞任清华副校长，全职执掌西湖大学</p></blockquote><hr><p>最后一节体育课，一同学突然凑过来说，同学你以前是不是法学院的，看着好熟悉，我以为是法学院一同学，交谈几句发现是五字班的，生物竞赛生，开学就转了物理。高三的时候第一届生物预科班提前来了清华。三年前的春天，我当时还没转生物，看到了一个去NIBS罗敏敏老师实验室参观的通知，就跟着几个人一起跑过去了，想想真的神奇，在那里看了光遗传学的技术，还有透明脑的技术，罗敏敏老师一直是个非常fancy的人，然后认识了这个同学，我还感慨着我还没有转到生物系，这边高三的学生就被施一公拉过来提前上课了。我记得罗老师请吃饭的时候，我还问他，老师您觉得有没有可能我们可以把大脑里的所有结构研究清楚，这样人就可以永生了，我就是为这个梦想转系的。两年后上了钟毅和罗敏敏老师的神经课，知道王立元学长在钟老师那里也在做透明脑的成像，还认识了林祖迪学长做深度学习，但是暑研去了Harvard的Litchman那里用深度学习重构三维的大脑连接组学图像。而这位转物理的同学依然做着生物相关的研究，我一问，果然在宋森老师那里，做类脑计算的东西，宋森老师现在想用深度学习建模模拟出海马体的功能，感觉会非常有趣。钟老师本来也对我说想做类脑计算方面的工作，只可惜我本事太差，于是还是决定先踏踏实实学好深度学习的东西，心理先继续惦记着更加有趣但是飘渺的事物。没想到三年后遇到，大家围着的还是差不多的东西，大脑与意识真是古往今来最吸引人的事物，世界真小，但是有意思的人真多呀。</p><blockquote><p>记大三上网球课</p></blockquote><hr><p>2017年是我人生中真正感到满意的一年，难以想象这一年发生了多少事情，我热爱牵挂的人们依然幸福，最爱的人常在身边，发现了更多更大的世界，过去很多做不到的事情竟然一点点做到，遇到了很棒很了不起的人，感觉到人生的幸运和幸福，这半年做了很多不敢想象的事情，为自己喜爱的事情而奋斗是最佳的幸福条件，这一年感到自己多年来希冀的渺茫的梦想也许依然有为之奋斗一生的意义，这一年心想事成，感觉人类和科学的未来也光明可爱。<br>希望接下来的每一年，都能满意如今年，要倍加珍惜眼前美好的一切，要做更多真正了不起的事，要多想想真正的梦想，2018会更美好~</p><blockquote><p>2017年终</p></blockquote><hr><p>“在AI领域，我真的非常期待实现一个“没有AI就无法实现的”大的科学突破。我想这可能会在2018年发生在一个领域类似生物或化学领域。”<br>我们需要一个生物学领域的alpha go给老头子们带来点激荡了</p><p><a href="https://mp.weixin.qq.com/s/TyfT9bYq7tOkwuw7m0_SKg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/TyfT9bYq7tOkwuw7m0_SKg</a></p><hr><p>Amazing，真的听不出来，那么不久电话客服就可以被淘汰了吗？既然他们大多数本身就在做信息检索，按照一套标准流程回应，现在有很自然的声音的话人们好接受多了。以及Google assistant 配上这样的声音能把siri甩开几个身位了，观感上差太多</p><p><a href="https://wap.ithome.com/html/340735.htm" target="_blank" rel="noopener">https://wap.ithome.com/html/340735.htm</a></p><hr><p>我看以后可以这样做三语教学：从胎教开始，播放中英文儿歌童谣，再加上把python代码转成语音？我看可以把github加星前一百的python项目的文档转成语音，培养孩子的语感，还可以把python常用package以及Sklearm,TensorFlow以及PyTorch的官方文档转成音频，还可以实时监测胎儿心动数据，搞一个机器学习算法，听的比较迷惑的地方多重复几遍。三岁开始教数值计算，五岁开始教基本数理逻辑，不能让孩子输在起跑线上，，<br>欢迎各位探讨新时代育儿经验</p><p><a href="https://mp.weixin.qq.com/s/WnH42-PLYDokJWpOPumurQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/WnH42-PLYDokJWpOPumurQ</a></p><hr><p>这家公司有趣了，暑假参加的比赛，SRT题和ANN大作业都在做胸片的识别，模式识别又做了CT的识别。感觉了感觉这家公司的创业成本和难度，CT的肺部识别因为kaggle和阿里两个大赛成熟方案很多，胸片的也有一些方案，吴恩达也在做，也好解决一些。鉴于代码开源好找到，难度基本就在于和医院合作拿到数据资源了。所以我猜最后还是腾讯来终结医疗图像市场，毕竟国家战略给BAT分山头的时候把AI医疗图像分给企鹅家了</p><p><a href="http://www.infervision.com/Infer/product?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">http://www.infervision.com/Infer/product?from=timeline&amp;isappinstalled=0</a></p><hr><p>等老了是不是可以吹牛：年轻的时候看着比特币从几美元涨到了几十万美元一枚，，一天感慨一回，这种不知道顶点和终点的东西，和股市一样让人着迷，，比特币太贵了，要不买挖矿设备提供商英伟达好了</p><p><a href="https://wap.ithome.com/html/336543.htm" target="_blank" rel="noopener">https://wap.ithome.com/html/336543.htm</a></p><hr><p>真是愚蠢到令人瞠目结舌，核心的威力真是强，自己喜欢中医所以就这么搞？这是药，有可能会吃死人的东西，你为了推广中医临床都不用做了？以及中医不用参加医学考试，开诊所登记一下就行，我随意揣测一下：国家社保资金有巨大的缺口，医保承受不住，你们干脆就吃中药别吃那么贵的西药了，反正我们自己研发不出来有专利有仿制不了。我看以后谁敢看中医。</p><p><a href="https://mp.weixin.qq.com/s/6xQOUk3vgUe5mIWjhnPDKQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6xQOUk3vgUe5mIWjhnPDKQ</a></p><hr><p>马斯克不是最完美的那个，却永远是最有魅力的那个，但是魅力这个词又这么单薄，这个人活得就像救世主一样，如果未来有什么决定命运的关头被挽救，那一定有他的功劳</p><p><a href="https://mp.weixin.qq.com/s/8tVLtErD7FvJ6jf7W45yLg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8tVLtErD7FvJ6jf7W45yLg</a></p><hr><p>没看成直播，十年后roadster2终于来了，百公里1.9，续航一千公里，史上速度最快的，在我看来也是最美的跑车，，但是另一款产品其实更伟大，这个拥有SpaceX公司的男人一定经常畅想着未来的模样，这个梦幻的卡车是为一个非常干净高效梦幻的未来而生的</p><p><a href="https://36kr.com/p/5103430.html?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">https://36kr.com/p/5103430.html?from=timeline&amp;isappinstalled=0</a></p><hr><p>Oh my god！中国人的壮举！好想合作一波不过人家也说了合作的人太多了，，这实在太了不起了，有的事真的得有钱任性的社会主义大国才能干得了，你哈佛的每年上千万经费依然比不上我五十台设备并行成像，，遥远的梦想只要砸钱总是能实现的，大胆预测二十年后连接组学就能带来第一个完整的大脑三维重构图谱，那将是怎样壮观的景象，这个领域值得几代人奋斗终生</p><p><a href="https://mp.weixin.qq.com/s/oEaCUkM59tnNUPKIRZwekA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oEaCUkM59tnNUPKIRZwekA</a></p><hr><p>更幸运的是英伟达，，不到两年股价涨了六倍多，明知道AI火的要死矿主们还挖币挖的飞起，这笔这么好赚的买卖怎么就没想到呢，，</p><p><a href="https://mp.weixin.qq.com/s/EocGKMcs3tzY3O_dxbCVZQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/EocGKMcs3tzY3O_dxbCVZQ</a></p><hr><p>刚刚上市的搜狗和科大讯飞都是这波AI浪潮的超级幸运儿，浪潮一来发现自己这么多年的技术积累全都用得上，，</p><p><a href="https://mp.weixin.qq.com/s/ik3FKrwzhx_rrUEkKzyeqg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ik3FKrwzhx_rrUEkKzyeqg</a></p><hr><p>杰夫花了几天时间，最终想出“要弄清这个问题的最佳方式是把我的生活向前推进到80岁”，并做出“最小化遗憾”的决定。<br>杰夫说，你并不想最后记录下来的都是自己的遗憾。虽然你可能会对自己做错的事情感到懊悔，但更多的遗憾来自于“没有采取任何行动”</p><p>这个时代和马斯克一样强悍聪慧，并且有很终极的梦想的人。</p><p><a href="https://wap.ithome.com/html/333336.htm" target="_blank" rel="noopener">https://wap.ithome.com/html/333336.htm</a></p><hr><p>最后一场报告，生物物理所的副所长许老师真是好厉害，物理学出身，博士老板跟他发了第一篇文章后要转神经了，后来还当了院士，还是宋森的老板，然后许老师两轮博后跟着温伯格和杨振宁两位巨匠[可怜]，然后去冷泉港之前竟然没听过这地方，以为沃森早就死了，后来第一篇生物文章沃森还当了通讯作者，后来一路砍瓜切菜到现在，脑子聪明干啥都行</p><blockquote><p>记于博士生论坛 2017</p></blockquote><hr><p>搜狗就要IPO了，读到这篇旧文，很有感慨，王小川学长大概是这两代互联网巨头们最有情怀的了，不仅有科技情怀，而且有科学情怀，去年来讲AI是我听过的对AI最好的最有境界的思考之一，当年先是低谷，然后在巨头的庇护下找到生存之路，后来保护者弱了下来，自己倒是一步步变强，如今拆开独立上市，中间的博弈肯定也很不轻松，真的很厉害~</p><p><a href="https://mp.weixin.qq.com/s/MdA0w5ebce569XoCqA2rMg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/MdA0w5ebce569XoCqA2rMg</a></p><hr><p>“我和爸爸通过一段程序对苏轼的3458首词进行了分词处理”，下面不用看了，改天施清华也可以”我和爸爸通过一台冷冻电镜解了个结构”，玩素质教育普通人怎么玩的过北上学生嘛，学学苏轼就能请到康震去讲，普通人被忽悠了那么多年素质教育，兜兜转转最后发现，应试教育才是公平的最好的出路，，</p><p>当然这样培训出来的学生确实可以很精英，高一去清华附中夏令营，发现附中的学生虽然数学题做的不如，但是数学建模很厉害，大多数地方的同学几乎是第一次接触这个概念，这种对普通人不公平的精英训练确实有效</p><p><a href="http://app.myzaker.com/news/article.php?pk=59dc08069490cbb27b00001f&amp;from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">http://app.myzaker.com/news/article.php?pk=59dc08069490cbb27b00001f&amp;from=timeline&amp;isappinstalled=0</a></p><hr><p>乍一看相当激动人心的样子，不过发现是去年的论文，似乎研究者也是耕耘在材料领域的，看到芯片真的长成神经元性状还是蛮震撼的，临界自组织还有幂率分布倒也很契合一派人对智能的看法。不过就像文中说的，这种芯片本身就有点不可解释了，人虽然不能解释人脑的具体机制依然可以使用人脑，不知道这种芯片的编码解码如何做下去呢，说不定机理上黑箱芯片不比普通芯片加黑箱算法容易解释，但是依然是类脑计算的一个有趣的也许有用的好研究~</p><p><a href="https://mp.weixin.qq.com/s/LqR4KLBkOWtu4UiElsQvIA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/LqR4KLBkOWtu4UiElsQvIA</a></p><hr><p><strong>TO BE CONTINUED，上面的只是从朋友圈整理过来的。不得不说苹果的生态做的很好，靠着在手机上复制及时粘贴到电脑的功能，整理着还是非常快的。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;碎碎念-amp-will-update-daily&quot;&gt;&lt;a href=&quot;#碎碎念-amp-will-update-daily&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&amp;amp; will update daily&quot;&gt;&lt;/a&gt;碎碎念&amp;amp; will update daily&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;基本来自于过去的各处的碎碎念，比如记录在朋友圈的，便签里的，笔记里的。和孟孟微信聊天的太不好找了，以及很多时候口头聊的时候觉得自己充满哲理与逻辑的很好的话都没有记录下来，总会有种可惜的感觉，不过也许很多东西都已经内化为大脑结构的一部分了吧。OK，让我们先从中二热血的开始。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/tags/thoughts/"/>
    
      <category term="life" scheme="https://www.cmwonderland.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Death &amp; Dream</title>
    <link href="https://www.cmwonderland.com/2018/05/21/death-and-dream/"/>
    <id>https://www.cmwonderland.com/2018/05/21/death-and-dream/</id>
    <published>2018-05-20T16:49:39.000Z</published>
    <updated>2018-05-21T17:17:53.425Z</updated>
    
    <content type="html"><![CDATA[<p><strong>I have the feeling that it will be the hardest passage I ever write. My life is filled with these two strong words, but it seems so painful to organize them into words.</strong> Usually I will ignore and avoid thinking about these sad topics, but it always haunted me. I know how much fear and sadness I will suffer from writing them done. </p><p>The <strong>fear</strong> about them, the <strong>sadness</strong> about my inability to conquer them, the <strong>envy</strong> of far future’s generations’ potential power to conquer death, traveling through the huge universe, the <strong>despair</strong> of our generations’ lack of  science and technological methods.</p><p>But I will write it down. I am strong when facing anything else, I can always find ways to solve the hard problems, I find my biggest fear happens to be something I should try to solve. I may find some way to hide my fear, to do something else, to earn many money, to live a happy, ignorant life. <strong>But I find out that the only way help me not to regret about my life is doing it, trying all the ways to conquer my fear, and the origin of my fear.</strong></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=449818741&auto=1&height=66"></iframe><a id="more"></a><hr><p>我已经感觉到了这个东西有多难写了，情绪好的时候不能写，因为写不出来心思，情绪差的时候不敢写，夜深人静不敢写，这是篇很难写的文章，所以我就慢慢一点一点打磨这篇文章，先把一些零碎的东西放上去吧。</p><hr><h3 id="我的人生、转折和恐惧"><a href="#我的人生、转折和恐惧" class="headerlink" title="我的人生、转折和恐惧"></a>我的人生、转折和恐惧</h3><p>我一直讨厌和害怕直面这样的恐惧，当然恐惧会找上门来，有的时候它是好事，它会指引着我做一些事情，不错过一些东西。它指引我放弃了读法律，转身去读生物，纵然“不挣钱、是个大坑”，它指引我关注到好几个领域的重大进展：深度学习、成像技术，它指引我一切考虑它们，它指引我别忘了我的梦想，我的恐惧感其实是我最大的动力源泉。诸如出人头地、挣大钱这样的愿望总是会被我和周围的科学大师们对世俗平庸之物的鄙视所消解，而恐惧死亡，希望了解意识之谜，进而获得一切终极的答案，这是我恐惧和梦想的根源。</p><hr><h3 id="我的梦想"><a href="#我的梦想" class="headerlink" title="我的梦想"></a>我的梦想</h3><p>非常喜欢做梦的人，梦想远大的遥远的东西<br>理想主义，中国这样的人很少，做科研做的功利，细节严谨但丧失了热情而只作为工作。而我热情又专注，格外理想主义，我向往无限远处的宇宙和无限远的未来，思考科学的终极，痴迷于生命，<strong>但是又往往格外因此沮丧、难过</strong></p><p>理想主义，学生物，不想做循环，想搞清楚终极的东西，施一公，一个理想主义者，做很好的科研，让功利的国人意识到科学很酷，科学的意义，在中国最好的大学保护被功利的人们抨击嘲笑的生物学科，受到人们的尊重，如今更是尝试办中国的第一个私立大学，试图培养真正的科学大师。我无比尊敬和喜爱这样的人，从十六岁开始，每一次听施一公讲话，和他聊天，我都热血澎湃。他太了不起了，一年前他告诉我们：人生为一件大事来，他找到了他的人生大事，去办一所真正在中国的公立体制下突破限制的研究型大学，一年多过去了，他做的简直完美，这种梦想的力量，是我坚信我未来有一天也可以完成了不起的事情的源动力，这样的理想主义者和热血澎湃的dreamer是真正了不起的人。</p><p>我无比珍惜生命，我多年来感慨与人择原理，无比珍惜自己的一切，又对意识和永生的话题念念不忘</p><p>“两年前和林祖迪聊完，我这样在日记里写道：Lichtman做的事情让我振奋起来，我无比的兴奋和激动，还有这样的世界呀，感谢我现在有的一切让我有机会去哪怕触摸一下我所向往的东西，看来我那愚蠢又遥远的梦想未必做不到”</p><p><strong>我多年来的想法：</strong></p><p>我想这就是我的终极之梦了，一个妄图超越世俗和生物规律的，相当疯狂的梦想，我常常为之痴迷，又为之害怕，为之沮丧，想尽办法不去想它，但是我的人生轨迹始终被它吸引着，发现另外的dreamer，做着巨大的伟大的梦想的人，如今我就要有机会去看一看试一试体会一下，看看我所向往的终极是什么了。</p><p>我小时候就想过，既然很多人都怕死，为什么不停掉大家做的“暂时的工作”，全人类一起先解决长生不死，然后有的是时间做自己的事情呢。后来我发现世界的复杂、人性的复杂，复杂的超乎想象，但是我也发现人和人是不一样的，dreamer和普通人不一样，有的时候一个强有力的有梦想的人，就足以推动一件伟大的历史事件，比如Lichtman</p><p>人生为一件大事来，我的大事就是这样。</p><p>放牛娃的轮回</p><p>我给十几个人或多或少的讲过，女友，父母，读生物的好友，一些可能听不懂的人，凌晨被我叫醒的室友，我还在回家的火车上感喟一通放在QQ空间，发在我以为会有同伴的论坛。这是件孤独的事情，很难期待有人懂，能体会的人，恐怕我也不想和他多交流。。</p><hr><h3 id="达成终极的思路"><a href="#达成终极的思路" class="headerlink" title="达成终极的思路"></a>达成终极的思路</h3><h4 id="我们的大脑太强"><a href="#我们的大脑太强" class="headerlink" title="我们的大脑太强"></a>我们的大脑太强</h4><p>大脑是复杂的，每个人类大脑包含约1000亿个神经元，能产生100多万亿个连接，常被拿来和另一个复杂系统做比较：电子计算机。它们都具有强大的问题处理能力，都包含大量基本单元——分别是神经元和晶体管，这些基本单元都相连成复杂的环路，处理以电信号形式传输的信息。整体上看，人脑和计算机也有着相似的架构：用于输入、输出、中央处理和记忆存储的环路可以被大致区分开，又能协同工作。</p><p>它们谁处理问题的能力更强？人脑还是计算机？考虑到过去几十年计算机技术发展之快，你可能会觉得答案是计算机。的确，通过适当的组装构建和编程，计算机已经能在复杂游戏中打败人类顶尖高手了：上世纪90年代它打败了国际象棋世界冠军，最近Alpha Go打败了围棋顶尖高手，还有百科知识竞赛电视节目《危险边缘》（Jeopardy！）中机器人也获得了胜利。然而，在我落笔之际，人类仍然能在众多日常任务中更胜一筹——例如在拥挤的城市街道上认出一辆自行车或一个特定的人，例如举起茶杯将它平稳地移到嘴边 ——更不用说大脑的概念化能力和创造力。</p><div class="table-container"><table><thead><tr><th>性能指标</th><th style="text-align:right">计算机</th><th style="text-align:center">人类大脑</th></tr></thead><tbody><tr><td>基本单元数量</td><td style="text-align:right">接近100亿个晶体管</td><td style="text-align:center">～1000亿个神经元 ～100万亿个突触</td></tr><tr><td>基本运算速度</td><td style="text-align:right">100亿/秒</td><td style="text-align:center">&lt;1000/秒</td></tr><tr><td>精度</td><td style="text-align:right">～1/42亿（对于32位处理器）</td><td style="text-align:center">～1/100</td></tr><tr><td>功耗</td><td style="text-align:right">～100瓦</td><td style="text-align:center">～10瓦</td></tr><tr><td>信息处理模式</td><td style="text-align:right">基本是串行</td><td style="text-align:center">串行以及大规模并行</td></tr><tr><td>每个单元的输入/输出</td><td style="text-align:right">1-3</td><td style="text-align:center">～1000</td></tr><tr><td>信号模式</td><td style="text-align:right">数字</td><td style="text-align:center">数字和模拟</td></tr></tbody></table></div><p>Based on data of computer in 2008<br>reference：John von Neumann, The Computer and the Brain （New Haven: Yale University Press, 2012）; D.A Patterson and J.L. Hennessy, Computer Organization and Design(Amsterdam: Elsevier, 2012)</p><p>神经元放电的频率最高大约每秒1,000次。 再举个例子，神经元主要通过在轴突终端特定结构——突触（synapse）上释放化学神经递质来将信息传递给下游神经元，后者将其重新转换为电信号——这个过程我们称之为突触传递。突触传输最快大约需要1毫秒。因此无论是尖峰还是突触传递，大脑每秒最多可执行大约1000次基本运算，比计算机慢1000万倍。</p><p><strong>~职业的网球运动员可以追踪以160英里/小时运行的网球的运动轨迹。~</strong></p><p>然而，大脑的计算表现既不算慢也不算坏。比如，一个职业的网球选手可以追踪高达160英里/小时速度运行的网球的运动轨迹，移到球场最佳位置，挥动手臂，甩动球拍，将球击回对面，一系列动作发生在几百毫秒之间。此外，大脑完成所有这些任务（在其控制的身体的帮助下），功耗比计算机大约低十倍。大脑是怎么做到的？计算机和大脑之间的一个重要区别是每个系统内部处理信息的模式。计算机任务主要以顺序步骤执行，这点我们可以从工程师创建顺序指令流的编程方式中看出来。对于这种连续级联运算，每个步骤都需要高度精确，因为误差会在连续步骤中积累、放大。大脑也使用连续步骤来处理信息。在网球回击的例子中，信息从眼睛传向大脑，然后传向脊髓，从而控制腿部、躯干、手臂和手腕的肌肉收缩。</p><p>但利用数量众多的神经元和每个神经元发出的大量连接，大脑也同时采用大规模的并行处理。例如，移动的网球会激活视网膜中许多称为光感受器的细胞，它的作用是将光转换为电信号。这些信号随之被并行传送给视网膜中许多不同类型的神经元。只消两个至三个突触传递的时间，球的位置、方向、速度的相关信息已经被不同神经环路提取，并平行地传输到大脑。同样地，运动皮层（大脑中负责有意识运动的部分）会发出平行的指令分别控制腿部、躯干、手臂和手腕的肌肉收缩，这样身体和手臂能同时协调，调整身体到接球的最佳姿势。</p><p>这种大规模并行策略是是可行的，因为每个神经元都从许多其他神经元那儿输入、输出信息——一个哺乳动物神经元平均有数以千计的输入和输出。相比之下，计算机每个晶体管仅有三个输入和输出节点。来自单个神经元的信息可以被传递到许多并行的下游路径。与此同时，许多处理相同信息的神经元，可以将它们的输入信息集中到相同的下游神经元。后一种特性对于提高信息处理的精度特别有用。例如，由单个神经元表示的信息可能是“嘈杂”的（比如说，精确度为1/100）。通过取平均值，下游的神经元小伙伴通常能够从100个输入神经元中提取更精确的信息（这种情况下，精确度能到千分之一） [6]。</p><p>计算机和大脑相比，基本单元的信号模式也有相同和不同之处。晶体管采用数字信号，使用离散值（0和1）来表示信息。神经元轴突中的峰值也是一个数字信号，因为神经元在任何时间要么处于尖峰状态，要么处于非激活状态。当神经元被激活时，所有尖峰都是差不多相同大小、形状，这一特性有助于实现可靠的远距离尖峰传播。不过，神经元也利用模拟信号，它使用连续的值来表示信息。一些神经元（像我们视网膜中的大多数神经元）是无尖峰的，它们的输出通过分级的电信号传输的（与尖峰信号不同，它的大小可以连续变化），可传输比尖峰信号更多的信息</p><p>回击网球的例子还彰显了大脑另一个显著特点：它可以基于当前状态和历史经验，修改神经元之间的连接强度——神经科学家们普遍认为，这是学习与记忆的基础。重复的训练能使神经元环路为任务优化其连接方式，从而大幅提高速度与精确度。</p><p>在过去的几十年里，工程师不断受大脑启发来改进计算机设计。并行处理的原则，还有根据使用情况调整连接强度，都被纳入了现代计算机。比如，增加并行性，即在单个计算机中使用多个核心处理器，已经是当前计算机设计的趋势。又比如，机器学习和人工智能领域的“深度学习”，近年来取得了巨大的成功，计算机和移动设备中的物体识别和语音识别方面的迅速进展都得益于它，其就是受到了哺乳动物视觉系统的启发。和哺乳动物的视觉系统一样，深度学习采用越来越深的层次来表示越来越抽象的特征（比如视觉目标或者言语），不同层次之间的连接权重也通过机器学习动态调整，而不是由工程师手工设计。这些最新进展已经扩展了计算机能够执行的任务的指令表。尽管如此，大脑还是比最先进的计算机具有更高的灵活性、泛化与学习能力。</p><h4 id="将意识硅基化"><a href="#将意识硅基化" class="headerlink" title="将意识硅基化"></a>将意识硅基化</h4><h5 id="忒休斯之船的困难"><a href="#忒休斯之船的困难" class="headerlink" title="忒休斯之船的困难"></a>忒休斯之船的困难</h5><p>克隆、量子力学下的复制等等都是和将意识存储到另一台机器上一样的，并不切实可行的思路，因为它们都犯了同样的一个错误：未能成功地将一份独一无二的记忆更好地保存，而是试图复制出一份更新的来替代，这是错误的。</p><blockquote><p>假定某物体的构成要素被置换后，但它依旧是原来的物体吗？1世纪时的希腊作家普鲁塔克提出一个问题：如果<strong>忒修斯</strong>的船上的木头被逐渐替换，直到所有的木头都不是原来的木头，那这艘船还是原来的那艘船吗？</p></blockquote><p><strong>是的</strong>，我想是的。如果我们重新完美地复制了一艘船，那当然不是忒休斯之船，如果我们重新复制出来一个人，那一定不是原来的人，先不论其难度几何（比如克隆一定是远远不够的，其脑部的结构细节可以说差的太远，因而思维和记忆的硬件基础已经完全不同，更何况他还是没有被灌注那份原始的拷贝）。</p><p>事实上我们一定不能先造出另一个硬件的容器，然后用灌注我们的记忆的方式把我们的一切意识灌入另一个容器（且不论其难度）。因为那只是从他人的角度保存自己的思想的方式，这是残酷的，冰冷的，也是没有意义的。既然我们已经在讨论永生这么疯狂又自我的事情，我们就得明白，这里面最关键的点乃是 ~<strong>“自我的感受”</strong>~，如果你眼睁睁地看着克隆出来的你、或者意识被灌注到机器上的你活着，但是你柔软的大脑依然会渐渐枯萎，那么，你还是会死去，你并未获得永恒。</p><p>我想我们唯一的思路恰恰是<strong>忒休斯之船的思路</strong>，这个思路很好想，在刚进入大学的夏日的凉夜，我就把这个想法在闲聊中告知了一位同学，大多数人都不会想这种奇怪的故事，但是他同意了我的想法，有趣的是这位同学还会继续留在清华读深度学习领域的phd。我说，</p><blockquote><p>我们应该一点一点地用电子元件替代</p></blockquote><h4 id="深度学习与类脑芯片"><a href="#深度学习与类脑芯片" class="headerlink" title="深度学习与类脑芯片"></a>深度学习与类脑芯片</h4><blockquote><p>深度学习未来一定会帮人类社会迈入伟大，而且会带给孕育它的主要对象之一，神经生物学带来天翻地覆的影响。<br>我一直觉得自己生在一个很美妙的时代，一个黎明前的时代，有太多东西需要摸索，一个科学家喜爱的时代，有无尽的探索可以去做。尤其是似乎处在人工智能的黎明</p></blockquote><h4 id="系统计算神经生物学"><a href="#系统计算神经生物学" class="headerlink" title="系统计算神经生物学"></a>系统计算神经生物学</h4><blockquote><p>深度学习未来一定会帮人类社会迈入伟大，而且会带给孕育它的主要对象之一，神经生物学带来天翻地覆的影响。<br>我一直觉得自己生在一个太早的时代，一个黎明前黑暗的时代，有太多东西需要摸索，一个科学家喜爱的时代，有无尽的探索可以去做。只可惜我一直处于一种<strong>朝闻道，夕死可矣</strong>的急迫中，我迫不及待地想窥探终极，无法获知终极的渺小感十分的让人痛苦。而且这个黎明前的黑暗距离破晓还有遥远的时间长度。</p></blockquote><p>深度学习的发展救回了我的梦想，但是梦想依然遥不可及，我们无法一直沿着同一条路走下去，人工智能有很多光明的应用，而我所探讨的东西是黑暗中的弥散在各处的不被过多探讨的迷雾，我们探讨的，是一个<strong>终极前景伟大到超越一切，但是直到终极前都毫无意义，天才和工作人员和愿意投入的人</strong>远少于人工智能这样的行业的东西。到最后我们必须自己想办法。我们有一些了不起的人物，Geoffrey Hinton从神经科学的角度做出了深度学习，而他依然执着于大脑的意义，这样的天才与大师是我们的希望之一。另外的更重要的希望还在深耕于神经科学领域的大师。</p><p>感谢我的女朋友孟孟，她总是在我脆弱的时候给我力量，一份美好的心态可以帮人面对一切。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;I have the feeling that it will be the hardest passage I ever write. My life is filled with these two strong words, but it seems so painful to organize them into words.&lt;/strong&gt; Usually I will ignore and avoid thinking about these sad topics, but it always haunted me. I know how much fear and sadness I will suffer from writing them done. &lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;fear&lt;/strong&gt; about them, the &lt;strong&gt;sadness&lt;/strong&gt; about my inability to conquer them, the &lt;strong&gt;envy&lt;/strong&gt; of far future’s generations’ potential power to conquer death, traveling through the huge universe, the &lt;strong&gt;despair&lt;/strong&gt; of our generations’ lack of  science and technological methods.&lt;/p&gt;
&lt;p&gt;But I will write it down. I am strong when facing anything else, I can always find ways to solve the hard problems, I find my biggest fear happens to be something I should try to solve. I may find some way to hide my fear, to do something else, to earn many money, to live a happy, ignorant life. &lt;strong&gt;But I find out that the only way help me not to regret about my life is doing it, trying all the ways to conquer my fear, and the origin of my fear.&lt;/strong&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=449818741&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://www.cmwonderland.com/tags/thoughts/"/>
    
      <category term="life" scheme="https://www.cmwonderland.com/tags/life/"/>
    
      <category term="dream" scheme="https://www.cmwonderland.com/tags/dream/"/>
    
  </entry>
  
  <entry>
    <title>Linear Regression Assignment 10</title>
    <link href="https://www.cmwonderland.com/2018/05/20/line5/"/>
    <id>https://www.cmwonderland.com/2018/05/20/line5/</id>
    <published>2018-05-20T02:01:19.000Z</published>
    <updated>2018-05-21T14:14:21.429Z</updated>
    
    <content type="html"><![CDATA[<p>The eleventh assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/linearweek11.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/linear_regression_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:</p><div class="row"><iframe src="https://drive.google.com/file/d/1rQelXNDGk1GJmcFKDWqpeJGFbHUiDe1k/preview" style="width:100%; height:550px"></iframe></div><h3 id="15-8"><a href="#15-8" class="headerlink" title="15.8"></a>15.8</h3><h4 id="a"><a href="#a" class="headerlink" title="a"></a>a</h4><p>This study is mixed exeprimental and observational.</p><p>A randomization of treatments (standard or computer based curriculum) does occur. However, the choice of which school is not randomized.</p><h4 id="b"><a href="#b" class="headerlink" title="b"></a>b</h4><ul><li>Experimental factor: Type of curriculum; </li><li><p>Levels: Standard or computer based.</p></li><li><p>observational factor: schools;</p></li><li>Levels: school no.1, 2 and 3</li></ul><p>There are 6 factor-level combinations:</p><ul><li>School1 +standard; </li><li>School 1 +computer based;</li><li>School2 +standard; </li><li>School 2 +computer based;</li><li>School3 +standard; </li><li>School 3 +computer based.</li></ul><h4 id="c"><a href="#c" class="headerlink" title="c"></a>c</h4><p>Completely randomized design</p><h4 id="d"><a href="#d" class="headerlink" title="d"></a>d</h4><p>The basic unit is each of the 24-student sections</p><h3 id="15-10"><a href="#15-10" class="headerlink" title="15.10"></a>15.10</h3><h4 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h4><p>Mixed exeprimental and observational.</p><p>The color of paper is randomized but the nature of parking lots is just observed.</p><h4 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h4><ul><li>Experimental factor: Color of the paper</li><li><p>Levels: Blue, green, orange</p></li><li><p>observational factor: What parking lot the papers are distributed in;</p></li><li>Levels: Parking lot a, b, c, d.</li></ul><p>There are 12 factor-level combinations:</p><ul><li>Parking lot a+ Blue;</li><li>Parking lot b+ Blue;</li><li>Parking lot c+ Blue;</li><li>Parking lot d+ Blue;</li><li>Parking lot a+ Orange;</li><li>Parking lot b+ Orange;</li><li>Parking lot c+ Orange;</li><li>Parking lot d+ Orange;</li><li>Parking lot a+ Green;</li><li>Parking lot b+ Green;</li><li>Parking lot c+ Green;</li><li>Parking lot d+ Green;</li></ul><h4 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h4><p>Repeated measures design</p><h4 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h4><p>The basic unit is the papers of the same color distributed in each of the parking lots.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The eleventh assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>Linear Regression Assignment 12</title>
    <link href="https://www.cmwonderland.com/2018/05/20/line6/"/>
    <id>https://www.cmwonderland.com/2018/05/20/line6/</id>
    <published>2018-05-20T02:01:19.000Z</published>
    <updated>2018-05-21T14:14:32.125Z</updated>
    
    <content type="html"><![CDATA[<p>The twelveth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/linearweek12.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/linear_regression_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:<br><div class="row"><iframe src="https://drive.google.com/file/d/1TV_5cYmIUSdir6iIdjqZsDHVsWejGBpE/preview" style="width:100%; height:550px"></iframe></div></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- seq(-5, 18, length=1000)</span><br><span class="line">y1 &lt;- dnorm(x, mean=5.1, sd=2.8)</span><br><span class="line">y2 &lt;- dnorm(x, mean=6.3, sd=2.8)</span><br><span class="line">y3 &lt;- dnorm(x, mean=7.9, sd=2.8)</span><br><span class="line">y4 &lt;- dnorm(x, mean=9.5, sd=2.8)</span><br><span class="line">plot(x, y1, type=&quot;l&quot;, lwd=1)</span><br><span class="line">lines(x, y2, type=&quot;l&quot;, lwd=1)</span><br><span class="line">lines(x, y3, type=&quot;l&quot;, lwd=1)</span><br><span class="line">lines(x, y4, type=&quot;l&quot;, lwd=1)</span><br><span class="line">abline(v=5.1)</span><br><span class="line">abline(v=6.3)</span><br><span class="line">abline(v=7.9)</span><br><span class="line">abline(v=9.5)</span><br></pre></td></tr></table></figure><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><script type="math/tex; mode=display">E(MSE) = \sigma^2 = 7.84 \\E(MSTR) = \sigma^2 + \frac{\sum _i(\mu_i-\mu  )^2}{\gamma -1} \\=7.84+\frac{100[(5.1-7.2)^2+(6.3-7.2)^2+(7.9-7.2)^2+(9.5-7.2)^2]}{3} \approx 374</script><p>It suggests that the different treatments have substantially impact on Y</p><h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2><script type="math/tex; mode=display">\text{Use same equation as b, we have: }E(MSTR) = \sigma^2 + \frac{\sum _i(\mu_i-\mu  )^2}{\gamma -1} \\=7.84+\frac{100[(5.1-7.2)^2+(5.6-7.2)^2+(9-7.2)^2+(9.5-7.2)^2]}{3} \approx 523</script><p>It is because the points distribution are more scattered compared to b.</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dat&lt;-read.table(&quot;CH16PR10.txt&quot;)</span><br><span class="line">names(dat)&lt;-c(&quot;x&quot;,&quot;age&quot;,&quot;num&quot;)</span><br></pre></td></tr></table></figure><h2 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(x=dat$age, y=dat$x)</span><br></pre></td></tr></table></figure><p>The factor level means seem to differ, at least the middle ge group differs from the other two.<br>The variability within each factor level seems to be constant.</p><h2 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">code &lt;- rbind(diag(1,3),-1)</span><br><span class="line">xx &lt;- code[dat$age,]</span><br><span class="line">dat$x1 &lt;- xx[,1]</span><br><span class="line">dat$x2 &lt;- xx[,2]</span><br><span class="line">dat$x3 &lt;- xx[,3]</span><br><span class="line"></span><br><span class="line">dat$age &lt;- factor(dat$age)</span><br><span class="line">fit1 &lt;- aov(x~age,data=dat)</span><br><span class="line">yhat &lt;- fitted(fit1)</span><br><span class="line">yhat</span><br></pre></td></tr></table></figure><h2 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resid1 &lt;- resid(fit1)</span><br><span class="line">resid1</span><br></pre></td></tr></table></figure><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">summary(fit1)</span><br></pre></td></tr></table></figure><h2 id="e"><a href="#e" class="headerlink" title="e"></a>e</h2><script type="math/tex; mode=display">H_0:\mu_1=\mu_2=\mu_3 \\H_1: \text{otherwise} \\F^*=\frac{MSTR}{MSE}</script><p>Reject null hypothesis if F*&gt;$F_{0.99,3,33}$<br>The p value is 4.769e-12<br>We reject H_0</p><h2 id="f"><a href="#f" class="headerlink" title="f"></a>f</h2><p>If seems that middle aged people tend to offer more cash for a used car, while young and old people tend to offer less.</p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><h2 id="a-2"><a href="#a-2" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fit2 &lt;- lm(x~age,data=dat)</span><br><span class="line">summary(fit2)</span><br></pre></td></tr></table></figure><p>The model is $Yhat=21.5+6.25X_1-0.0833X_2$<br>The intercept term estimates the average cell sample mean.</p><h2 id="b-2"><a href="#b-2" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anova(fit2)</span><br></pre></td></tr></table></figure><p>$H_0:\tau_1=\tau_2$ </p><p>$H_1: otherwise$</p><p>$F^*=\frac{MSR}{MSE}$</p><p>Reject null hypothesis if F*&gt;$F_{0.99,2,33}$<br>The p value is 4.769e-12, so We reject H_0</p><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><h2 id="b-3"><a href="#b-3" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Young=c(23, 25, 21, 22, 21, 22, 20, 23, 19, 22, 19, 21)</span><br><span class="line">Middle=c(28, 27, 27, 29, 26, 29, 27, 30, 28, 27, 26, 29)</span><br><span class="line">Elderly=c(23, 20, 25, 21, 22, 23, 21, 20, 19, 20, 22, 21)</span><br><span class="line">FactorLevels=c(1,2,3)</span><br><span class="line">n1=length(Young)</span><br><span class="line">n2=length(Middle)</span><br><span class="line">n3=length(Elderly)</span><br><span class="line"></span><br><span class="line">MyData=data.frame(</span><br><span class="line">Values=c(Young,Middle,Elderly),</span><br><span class="line">Treatment=c(rep(1,n1),rep(2,n2),rep(3,n3)))</span><br><span class="line"></span><br><span class="line">y=MyData$Values</span><br><span class="line">x=factor(MyData$Treatment)</span><br><span class="line">means=tapply(y,x,mean)</span><br><span class="line">n=tapply(y,x,length)</span><br><span class="line">df=sum(n)-2</span><br><span class="line"></span><br><span class="line">MSE=2.49</span><br><span class="line">alpha=0.01</span><br><span class="line">l1=means[1]-qt(1-alpha/2,df)*sqrt(MSE/n[1])</span><br><span class="line">u1=means[1]+qt(1-alpha/2,df)*sqrt(MSE/n[1])</span><br><span class="line">print(c(l1,u1))</span><br></pre></td></tr></table></figure><p>So the confidence level is (20.2572,22.7428)</p><h2 id="c-2"><a href="#c-2" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MSE=2.49</span><br><span class="line">alpha=0.01</span><br><span class="line">l31=means[3]-means[1]-qt(1-alpha/2,df)*sqrt(MSE/n[1]+MSE/n[3])</span><br><span class="line">u31=means[3]-means[1]+qt(1-alpha/2,df)*sqrt(MSE/n[1]+MSE/n[3])</span><br><span class="line">print(c(l31,u31))</span><br></pre></td></tr></table></figure><p>This confidence interval contains 0, so we cannot reject the null hypothesis that $\mu_1=\mu_3$</p><h2 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MSE=2.49;</span><br><span class="line">alpha=0.01;</span><br><span class="line">lcontrast=-means[1]+2*means[2]-means[3]-qt(1-alpha/2,df)*sqrt(MSE/n[1]+4*MSE/n[2]+MSE/n[3])</span><br><span class="line">ucontrast=-means[1]+2*means[2]-means[3]+qt(1-alpha/2,df)*sqrt(MSE/n[1]+4*MSE/n[2]+MSE/n[3])</span><br><span class="line">print(c(lcontrast,ucontrast))</span><br></pre></td></tr></table></figure><p>$H_0:\mu_2-\mu_1=\mu_3-\mu_2$<br>$H_1: otherwise$<br>Since the confidence interval for the contrast does not contain 0, we do not reject the null hypothesis.</p><h2 id="e-1"><a href="#e-1" class="headerlink" title="e"></a>e</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results&lt;-aov(y~x);</span><br><span class="line">TukeyHSD(results)</span><br></pre></td></tr></table></figure><p>There is significant difference between young and middle aged people, as well as mlderly and middle aged people. But there is no significant difference between the young and elderly.</p><h2 id="f-1"><a href="#f-1" class="headerlink" title="f"></a>f</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pairwise.t.test(y,x,p.adjust=&quot;bonferroni&quot;)</span><br></pre></td></tr></table></figure><p>The bonferroni method gives the same result. But it won’t be more efficient, since it “overstates” the significnce level.</p><h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><h2 id="a-3"><a href="#a-3" class="headerlink" title="a"></a>a</h2><p>This has been done in the previous problem, question d.<br>The confidence interval is (-15.627664,-9.539003)</p><h2 id="b-4"><a href="#b-4" class="headerlink" title="b"></a>b</h2><p>D_1 = 6.2500, D_2 =  −6.3333, D_3 = −0.0833, </p><p>L_1 =−12.5833, s{D_i} =0.6442 (i = 1, 2, 3), s{L_1} = 1.1158,</p><p>F(0.90, 2, 33) = 2.47, S = 2.223</p><p>Then we can obtain the family intervals:</p><p>(4.818,7.682)</p><p>(−7.765,−4.901)</p><p>(−1.515,1.349)</p><p>(−15.064,−10.103)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The twelveth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>Linear Regression Assignment 9</title>
    <link href="https://www.cmwonderland.com/2018/05/20/line4/"/>
    <id>https://www.cmwonderland.com/2018/05/20/line4/</id>
    <published>2018-05-20T02:01:19.000Z</published>
    <updated>2018-05-23T13:42:39.625Z</updated>
    
    <content type="html"><![CDATA[<p>The nineth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/linearweek9.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/linear_regression_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:</p><div class="row"><iframe src="https://drive.google.com/file/d/1ZKK3pAgtaT3coeGr6Qm_tmOyXWi7dpNS/preview" style="width:100%; height:550px"></iframe></div><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># read the data</span><br><span class="line">dat&lt;-read.csv(&quot;ch6.csv&quot;)</span><br><span class="line">names(dat)&lt;-c(&quot;y&quot;,&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)</span><br></pre></td></tr></table></figure><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-lm(y~x1+x2,data=dat)</span><br><span class="line">summary(fit)</span><br></pre></td></tr></table></figure><p>So the regression model is $Y=3995+0.0009192X_1+12.12X_2$</p><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">par(mfrow=c(1,2))</span><br><span class="line">yonx1 &lt;- lm(y~x1,data=dat)</span><br><span class="line">yonx2 &lt;- lm(y~x2,data=dat)</span><br><span class="line">x1onx2 &lt;- lm(x1~x2,data=dat)</span><br><span class="line">x2onx1 &lt;- lm(x2~x1,data=dat)</span><br><span class="line">plot(x1onx2$residuals,yonx2$residuals,col=&quot;blue&quot;,pch=16,</span><br><span class="line">xlab=&quot;e(X_1|X_2)&quot;, ylab=&quot;e(Y|X_2)&quot;)</span><br><span class="line">abline(0,fit$coefficients[2])</span><br><span class="line">abline(0,0,lty=2,col=&quot;gray&quot;)</span><br><span class="line">plot(x2onx1$residuals,yonx1$residuals,col=&quot;red&quot;,pch=16,</span><br><span class="line">xlab=&quot;e(X_2|X_1)&quot;, ylab=&quot;e(Y|X_1)&quot;,xlim=c(-50000,150000))</span><br><span class="line">abline(0,fit$coefficients[3])</span><br><span class="line">abline(0,0,lty=2,col=&quot;gray&quot;)</span><br></pre></td></tr></table></figure><h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2><p> We use about the same scale in the two plots. In the first plot, the scatter of points around the least square line does not differ much compared to the scatter around the horizontal line. However, in the second plot, we can see that the scatter around the regression line (which is almost verticle under this scale) is significantly smaller than the scatter around the horizontal line. This tells us that X1 is of little use when X2 is in the model, while X2 can still explain a lot when X1 is present.<br>So perhaps X1 can be discarded.</p><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># The regression functions below are required</span><br><span class="line">fit1&lt;-lm(resid(yonx2)~resid(x1onx2)-1)</span><br><span class="line">summary(fit1)</span><br><span class="line">summary(yonx2)</span><br><span class="line">summary(x1onx2)</span><br></pre></td></tr></table></figure><p>Summarizing from the results above, the regression function is<br>$[Y-(4237.47+17.04x_2)=0.000919[x_1-(263272+5348x_2)]$</p><p>Which is equivalent to $Y=3995+0.0009192X_1+12.12X_2$</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><h2 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newfit&lt;-lm(y~x1+x2+x3,data=dat)</span><br><span class="line">sdr&lt;-rstudent(newfit)</span><br><span class="line">sdr # the studentized deleted residuals</span><br></pre></td></tr></table></figure><p>H_0: Not an outlier; H_1: Is an outlier<br>We reject the null hypothesis when the studentized deleted residuals are larger than $t(1-\alpha/2n;n-p-1)$<br>The results are below<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n=52</span><br><span class="line">p=4</span><br><span class="line">ifelse(sdr &gt; qt(1-0.90/2/n,n-p-1), &quot;YES&quot;, &quot;NO&quot;)</span><br></pre></td></tr></table></figure></p><p>So none is deemed as an outlier.</p><h2 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hatd&lt;-hatvalues(newfit)</span><br><span class="line">hatd</span><br><span class="line">n=52</span><br><span class="line">p=4</span><br><span class="line">ifelse(hatd &gt; 2*p/n, &quot;YES&quot;, &quot;NO&quot;)</span><br></pre></td></tr></table></figure><p>According to the rule of the thumb, cases 4,16,21,22,43,44,48 are thought to be outliers.</p><h2 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">attach(dat)</span><br><span class="line">plot(x1,x2)</span><br></pre></td></tr></table></figure><p>Judging from the scatter plot, this prediction does not seem to involve extrapolation beyond the range of the data.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xnew&lt;-c(300000,7.2,0)</span><br><span class="line">X&lt;-as.matrix(dat)</span><br><span class="line">X&lt;-X[,-1]</span><br><span class="line">hnew&lt;-t(xnew)%*%solve(t(X)%*%X)%*%xnew</span><br><span class="line">ifelse(hnew &gt; 2*p/n, &quot;YES&quot;, &quot;NO&quot;)</span><br></pre></td></tr></table></figure></p><p>Using (10.29), the conclusion is the same, as stated above.</p><h2 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">test&lt;-cbind(</span><br><span class="line">  &quot;DFFITS&quot;  = dffits(newfit),</span><br><span class="line">  &quot;DFBETA0&quot; = dfbetas(newfit)[,1],</span><br><span class="line">  &quot;DFBETA1&quot; = dfbetas(newfit)[,2],</span><br><span class="line">  &quot;DFBETA2&quot; = dfbetas(newfit)[,3],</span><br><span class="line">  &quot;DFBETA3&quot; = dfbetas(newfit)[,4],</span><br><span class="line">  &quot;Cook&apos;s Distance&quot; =cooks.distance(newfit))</span><br><span class="line">test&lt;-test[c(16,22,43,48,10,32,38,40),]</span><br><span class="line">test</span><br><span class="line">qf(0.1,4,48)# 10% quantile of the corresponding F distribution</span><br><span class="line">abs(test[,1])&gt;2*sqrt(p/n)</span><br><span class="line">abs(test[,c(2,3,4,5)])&gt;2/sqrt(n)</span><br></pre></td></tr></table></figure><p>It can be seen that  Cook’s distance is well below 10% quantile of the corresponding F distribution which is roughly 0.26.<br>Judging from DEFITS, it seems that case 43 and 32 are influential.<br>Judging from DFDETA, it seems that cse 16,43,10,32,40 are influential.</p><h2 id="f"><a href="#f" class="headerlink" title="f"></a>f</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd&lt;-cooks.distance(newfit)</span><br><span class="line">plot(seq(1:52),cd,xlab=&quot;Case Index Number&quot;,ylab=&quot;Cook&apos;s Distance&quot;, main=&quot;Index Plot&quot;,type=&quot;b&quot;)</span><br></pre></td></tr></table></figure><p>None of the cases is deemed as influential according to this criteron.</p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><h2 id="a-2"><a href="#a-2" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pairs(~cases+percent+holiday+labor,data=dat, </span><br><span class="line">   main=&quot;Simple Scatterplot Matrix&quot;)</span><br><span class="line">cor(dat[,1:4])</span><br></pre></td></tr></table></figure><p>There does not seem to be significant pairwise linear associations. X2 and X3 seem to have a relatively higher liner correlation.</p><h2 id="b-2"><a href="#b-2" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#cases+percent+holiday</span><br><span class="line">summary(lm(cases ~ percent+holiday))$r.squared </span><br><span class="line">summary(lm(percent~cases +holiday))$r.squared</span><br><span class="line">summary(lm(holiday~cases +percent))$r.squared</span><br><span class="line">myfun&lt;-function(a)&#123;</span><br><span class="line">  result &lt;-1/(1-a**2)</span><br><span class="line">  return (result)</span><br><span class="line">  &#125;</span><br><span class="line">myfun(0.01181682)</span><br><span class="line">myfun(0.01172621)</span><br><span class="line">myfun(0.003705038)</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">(VIF)_j = \frac{1}{1-R_j^2}\\max_j(VIF)_j = 1.00014 \leq 10</script><p>So there is no serious multicolinearity here.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The nineth assignment of Linear Regression. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>Differential Expression&amp;作业</title>
    <link href="https://www.cmwonderland.com/2018/05/20/diffexpress/"/>
    <id>https://www.cmwonderland.com/2018/05/20/diffexpress/</id>
    <published>2018-05-19T16:08:12.000Z</published>
    <updated>2018-05-21T13:08:07.966Z</updated>
    
    <content type="html"><![CDATA[<p>It contains my assignment in Bioinformatics course talking about Differential Expression and this semesters’ code<br><a id="more"></a></p><h1 id="My-assignment-in-bioinformatics-course"><a href="#My-assignment-in-bioinformatics-course" class="headerlink" title="My assignment in bioinformatics course"></a>My assignment in bioinformatics course</h1><div class="row"><iframe src="https://drive.google.com/file/d/1d2YKSKrCfnELAHiAlEqAxIBErdCfR4-L/preview" style="width:100%; height:550px"></iframe></div><h1 id="Codes-using-different-packages-producing-differential-expression-files"><a href="#Codes-using-different-packages-producing-differential-expression-files" class="headerlink" title="Codes using different packages producing differential expression files"></a>Codes using different packages producing differential expression files</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">setwd(<span class="string">'61samplesmatrix'</span>)</span><br><span class="line">#rnanames = <span class="string">'miRNA'</span></span><br><span class="line">rnaname = <span class="string">'miRNA'</span></span><br><span class="line">commonpath = <span class="string">'04.counts/hcc_lulab.sequentialMap.homer.'</span></span><br><span class="line">savepath = <span class="string">'05.diffexp/hcc_lulab.sequentialMap.homer.'</span></span><br><span class="line">mx &lt;- read.table(paste(commonpath,rnaname,<span class="string">".mx"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,header=T)</span><br><span class="line">design &lt;- read.table(<span class="string">"05.diffexp/design.tsv"</span>,sep=<span class="string">"\t"</span>,header=T)</span><br><span class="line">filter_genes &lt;- apply(</span><br><span class="line">  mx[,<span class="number">2</span>:ncol(mx)],</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  function(x) length(x[x &gt; <span class="number">2</span>]) &gt;= <span class="number">2</span></span><br><span class="line">)</span><br><span class="line">mx_filterGenes &lt;- mx[filter_genes,]</span><br><span class="line">####################################################################################</span><br><span class="line">####################################################################################</span><br><span class="line">library(DESeq2)</span><br><span class="line">countData &lt;- mx_filterGenes</span><br><span class="line">colData &lt;- design</span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(countData, colData, design=~Treatment, tidy=TRUE)</span><br><span class="line">norm &lt;- rlog(dds,blind=FALSE)</span><br><span class="line">norm_matrix &lt;- assay(norm)</span><br><span class="line">norm_df &lt;- data.frame(Gene=rownames(norm_matrix), norm_matrix)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".DESeq2.rlog.mx"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(norm_df, paste(savepath,rnaname,<span class="string">".DESeq2.rlog.mx"</span>,sep=<span class="string">""</span>), row.names = FALSE,sep=<span class="string">"\t"</span>)&#125;</span><br><span class="line">deg &lt;- DESeq(dds)</span><br><span class="line"></span><br><span class="line">res &lt;- results(deg,contrast=c(<span class="string">"Treatment"</span>,<span class="string">"normal"</span>,<span class="string">"Before"</span>),tidy=TRUE)</span><br><span class="line">merged_res &lt;- merge(norm_df,res,by.x=<span class="string">"Gene"</span>,by.y=<span class="string">"row"</span>)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".NormalvsBefore.DESeq2.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(merged_res,file=paste(savepath,rnaname,<span class="string">".NormalvsBefore.DESeq2.tsv"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,row.names=FALSE)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res1 &lt;- results(deg,contrast=c(<span class="string">"Treatment"</span>,<span class="string">"normal"</span>,<span class="string">"After"</span>),tidy=TRUE)</span><br><span class="line">merged_res1 &lt;- merge(norm_df,res1,by.x=<span class="string">"Gene"</span>,by.y=<span class="string">"row"</span>)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".NormalvsAfter.DESeq2.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(merged_res1,file=paste(savepath,rnaname,<span class="string">".NormalvsAfter.DESeq2.tsv"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,row.names=FALSE)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res2 &lt;- results(deg,contrast=c(<span class="string">"Treatment"</span>,<span class="string">"After"</span>,<span class="string">"Before"</span>),tidy=TRUE)</span><br><span class="line">merged_res2 &lt;- merge(norm_df,res2,by.x=<span class="string">"Gene"</span>,by.y=<span class="string">"row"</span>)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".AftervsBefore.DESeq2.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(merged_res2,file=paste(savepath,rnaname,<span class="string">".AftervsBefore.DESeq2.tsv"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,row.names=FALSE)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">####################################################################################</span><br><span class="line">####################################################################################</span><br><span class="line">library(edgeR)</span><br><span class="line">#Read Data <span class="keyword">in</span></span><br><span class="line">countData &lt;- mx_filterGenes[,<span class="number">-1</span>]</span><br><span class="line">rownames(countData) &lt;- mx_filterGenes[,<span class="number">1</span>]</span><br><span class="line">design &lt;- read.table(<span class="string">"05.diffexp/design.tsv"</span>,sep=<span class="string">"\t"</span>,header=T)</span><br><span class="line">colData &lt;- design</span><br><span class="line">y &lt;- DGEList(countData, samples=colData, group=colData$Treatment)</span><br><span class="line">y &lt;- calcNormFactors(y)</span><br><span class="line">design &lt;-model.matrix(~Treatment, data=colData)</span><br><span class="line">y &lt;- estimateDisp(y, design)</span><br><span class="line">et &lt;- exactTest(y)</span><br><span class="line">res &lt;- topTags(et,Inf)</span><br><span class="line">tidyResult &lt;- data.frame(Gene=rownames(res$table), res$table)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".NCvsHCC.edgeR.classic.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(tidyResult,file=paste(savepath,rnaname,<span class="string">".NCvsHCC.edgeR.classic.tsv"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,row.names=FALSE)&#125;</span><br><span class="line">fit &lt;- glmFit(y,design)</span><br><span class="line">lrt &lt;- glmLRT(fit,contrast = c(<span class="number">1</span>,<span class="number">-1</span>))</span><br><span class="line">FDR &lt;- p.adjust(lrt$table$PValue, method=<span class="string">"BH"</span>)</span><br><span class="line">padj_lrt &lt;- cbind(lrt$table,FDR)</span><br><span class="line">fit_df &lt;- lrt$fitted.values</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".homer.edgeR.TMM.mx"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(fit_df,file = paste(savepath,rnaname,<span class="string">".homer.edgeR.TMM.mx"</span>,sep=<span class="string">""</span>),row.names = T, sep=<span class="string">"\t"</span>, quote=F)&#125;</span><br><span class="line">merged_lrt &lt;- merge(fit_df,padj_lrt,by=<span class="string">"row.names"</span>)</span><br><span class="line">colnames(merged_lrt)[<span class="number">1</span>] &lt;- <span class="string">"Genes"</span></span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".NCvsHCC.edgeR.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(merged_lrt,file =paste(savepath,rnaname,<span class="string">".NCvsHCC.edgeR.tsv"</span>,sep=<span class="string">""</span>),row.names = F, sep=<span class="string">"\t"</span>, quote=F)&#125;</span><br><span class="line">####################################################################################</span><br><span class="line">####################################################################################</span><br><span class="line"></span><br><span class="line">cpmMx &lt;- read.table(paste(commonpath,rnaname,<span class="string">".homer.rpm.m"</span>,sep=<span class="string">""</span>),sep=<span class="string">"\t"</span>,header=T)</span><br><span class="line">filter_cpm &lt;- apply(</span><br><span class="line">  mx[,<span class="number">2</span>:ncol(cpmMx)],</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  function(x) length(x[x &gt; <span class="number">0</span>]) &gt;= <span class="number">2</span></span><br><span class="line">)</span><br><span class="line">mx_filterCPM &lt;- cpmMx[filter_cpm,]</span><br><span class="line">myFun &lt;- function(x)&#123;</span><br><span class="line">  x = <span class="keyword">as</span>.numeric(x)</span><br><span class="line">  v1 = x[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">  v2 = x[<span class="number">5</span>:<span class="number">10</span>]</span><br><span class="line">  out &lt;- wilcox.test(v1,v2,exact = F) </span><br><span class="line">  out &lt;- out$p.value</span><br><span class="line">&#125;</span><br><span class="line">p_value &lt;- apply(mx_filterCPM,<span class="number">1</span>,myFun)</span><br><span class="line">p_value[is.nan(p_value)] &lt;- <span class="number">1</span></span><br><span class="line">FDR &lt;- p.adjust(p_value,method = <span class="string">"BH"</span>)</span><br><span class="line">mx_filterCPM$avgNC &lt;- apply(mx_filterCPM[,<span class="number">2</span>:<span class="number">4</span>],<span class="number">1</span>,mean)</span><br><span class="line">mx_filterCPM$avgHCC &lt;- apply(mx_filterCPM[,<span class="number">5</span>:<span class="number">10</span>],<span class="number">1</span>,mean)</span><br><span class="line">mx_filterCPM$log2fc &lt;- log2((mx_filterCPM$avgNC+<span class="number">0.25</span>)/(mx_filterCPM$avgHCC+<span class="number">0.25</span>))</span><br><span class="line">results &lt;- cbind(mx_filterCPM,p_value,FDR)</span><br><span class="line"><span class="keyword">if</span>(!file.exists(paste(savepath,rnaname,<span class="string">".NCvsHCC.wilcox.tsv"</span>,sep=<span class="string">""</span>)))&#123;</span><br><span class="line">  write.table(results,file = paste(savepath,rnaname,<span class="string">".NCvsHCC.wilcox.tsv"</span>,sep=<span class="string">""</span>),row.names = F, sep=<span class="string">"\t"</span>, quote=F)&#125;</span><br></pre></td></tr></table></figure><h1 id="some-plot-from-DESeq2"><a href="#some-plot-from-DESeq2" class="headerlink" title="some plot from DESeq2"></a>some plot from DESeq2</h1><p>Here is the pdf version of the following codes and its output.<br><div class="row"><iframe src="https://drive.google.com/file/d/1TYMXYXPnZ_1SDT9FQgQUx8g0wy4QXGQm/preview" style="width:100%; height:550px"></iframe></div></p><p>If you can’t see pdf, please try this more interactive way by <a href="https://www.cmwonderland.com/expression.html"><strong>click here</strong></a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### DESeq2</span></span><br><span class="line">&#123;r <span class="attribute">warning</span>=<span class="literal">FALSE</span>&#125;</span><br><span class="line"><span class="comment"># filter expression matrix</span></span><br><span class="line">mx &lt;- read.table(<span class="string">"04.counts/hcc_example.miRNA.homer.ct.mx"</span>,<span class="attribute">sep</span>=<span class="string">"\t"</span>,header=T)</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter genes</span></span><br><span class="line">filter_genes &lt;- apply(</span><br><span class="line">  mx[,2:ncol(mx)],</span><br><span class="line">  1,</span><br><span class="line">  function(x) length(x[x &gt; 2]) &gt;= 2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mx_filterGenes &lt;- mx[filter_genes,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># load experimential design</span></span><br><span class="line">design &lt;- read.table(<span class="string">"05.diffexp/design.tsv"</span>,<span class="attribute">sep</span>=<span class="string">"\t"</span>,header=T)</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------------------</span></span><br><span class="line"><span class="comment"># basic script for normalizing with DESeq2</span></span><br><span class="line">library(DESeq2)</span><br><span class="line"><span class="comment">#Read Data in</span></span><br><span class="line">countData &lt;- mx_filterGenes</span><br><span class="line">colData &lt;- design</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate Dataset</span></span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(countData, colData, <span class="attribute">design</span>=~Treatment, <span class="attribute">tidy</span>=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># normlize using rlog method</span></span><br><span class="line">norm &lt;- rlog(dds,<span class="attribute">blind</span>=<span class="literal">FALSE</span>)</span><br><span class="line">norm_matrix &lt;- assay(norm)</span><br><span class="line">norm_df &lt;- data.frame(<span class="attribute">Gene</span>=rownames(norm_matrix), norm_matrix)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!file.exists(<span class="string">"05.diffexp/hcc_example.miRNA.homer.DESeq2.rlog.mx"</span>))&#123;</span><br><span class="line">write.table(norm_df, <span class="string">"05.diffexp/hcc_example.miRNA.homer.DESeq2.rlog.mx"</span>, row.names = <span class="literal">FALSE</span>,<span class="attribute">sep</span>=<span class="string">"\t"</span>)&#125;</span><br><span class="line"></span><br><span class="line">deg &lt;- DESeq(dds)</span><br><span class="line">res &lt;- results(deg,<span class="attribute">tidy</span>=<span class="literal">TRUE</span>)</span><br><span class="line">merged_res &lt;- merge(norm_df,res,by.<span class="attribute">x</span>=<span class="string">"Gene"</span>,by.y="row")</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!file.exists(<span class="string">"05.diffexp/hcc_example.miRNA.NCvsHCC.DESeq2.tsv"</span>))&#123;</span><br><span class="line">write.table(merged_res,<span class="attribute">file</span>=<span class="string">"05.diffexp/hcc_example.miRNA.NCvsHCC.DESeq2.tsv"</span>,sep="\t",row.names=FALSE)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>the codes use DESeq2 and produces files:</p><p>05.diffexp/hcc_example.miRNA.homer.DESeq2.rlog.mx</p><p>05.diffexp/hcc_example.miRNA.NCvsHCC.DESeq2.tsv</p><h2 id="edgeR"><a href="#edgeR" class="headerlink" title="edgeR"></a>edgeR</h2><figure class="highlight plain"><figcaption><span>warning</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"># 0.filter expression matrix</span><br><span class="line">mx &lt;- read.table(&quot;04.counts/hcc_example.miRNA.homer.ct.mx&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line"></span><br><span class="line"># filter genes</span><br><span class="line">filter_genes &lt;- apply(</span><br><span class="line">    mx[,2:ncol(mx)],</span><br><span class="line">    1,</span><br><span class="line">    function(x) length(x[x &gt; 2]) &gt;= 2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mx_filterGenes &lt;- mx[filter_genes,]</span><br><span class="line"></span><br><span class="line"># load experimential design</span><br><span class="line">design &lt;- read.table(&quot;05.diffexp/design.tsv&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line"></span><br><span class="line">#--------------------------------</span><br><span class="line"># basic script for running edgeR</span><br><span class="line">library(edgeR)</span><br><span class="line">#Read Data in</span><br><span class="line">countData &lt;- mx_filterGenes[,-1]</span><br><span class="line">rownames(countData) &lt;- mx_filterGenes[,1]</span><br><span class="line">design &lt;- read.table(&quot;05.diffexp/design.tsv&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line">colData &lt;- design</span><br><span class="line"></span><br><span class="line"># generate DGE object</span><br><span class="line">y &lt;- DGEList(countData, samples=colData, group=colData$Treatment)</span><br><span class="line">y &lt;- calcNormFactors(y)</span><br><span class="line"></span><br><span class="line">#Estimate Error Model</span><br><span class="line">design &lt;-model.matrix(~Treatment, data=colData)</span><br><span class="line">y &lt;- estimateDisp(y, design)</span><br><span class="line"></span><br><span class="line"># classic methods: compute p-values, then output</span><br><span class="line">et &lt;- exactTest(y)</span><br><span class="line">res &lt;- topTags(et,Inf)</span><br><span class="line">tidyResult &lt;- data.frame(Gene=rownames(res$table), res$table)</span><br><span class="line"></span><br><span class="line">if(!file.exists(&quot;05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.classic.tsv&quot;))&#123;</span><br><span class="line">write.table(tidyResult,file=&quot;05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.classic.tsv&quot;,sep=&quot;\t&quot;,row.names=FALSE)&#125;</span><br><span class="line"></span><br><span class="line"># Generalized linear models</span><br><span class="line">fit &lt;- glmFit(y,design)</span><br><span class="line"># likelihood ratio test</span><br><span class="line">lrt &lt;- glmLRT(fit,contrast = c(1,-1))</span><br><span class="line">FDR &lt;- p.adjust(lrt$table$PValue, method=&quot;BH&quot;)</span><br><span class="line">padj_lrt &lt;- cbind(lrt$table,FDR)</span><br><span class="line">fit_df &lt;- lrt$fitted.values</span><br><span class="line">if(!file.exists(&quot;05.diffexp/hcc_example.miRNA.homer.edgeR.TMM.mx&quot;))&#123;</span><br><span class="line">write.table(fit_df,file = &quot;05.diffexp/hcc_example.miRNA.homer.edgeR.TMM.mx&quot;,row.names = T, sep=&quot;\t&quot;, quote=F)&#125;</span><br><span class="line">merged_lrt &lt;- merge(fit_df,padj_lrt,by=&quot;row.names&quot;)</span><br><span class="line">colnames(merged_lrt)[1] &lt;- &quot;Genes&quot;</span><br><span class="line"></span><br><span class="line">if(!file.exists(&quot;05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.tsv&quot;))&#123;</span><br><span class="line">write.table(merged_lrt,file =&quot;05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.tsv&quot;,row.names = F, sep=&quot;\t&quot;, quote=F)&#125;</span><br></pre></td></tr></table></figure><p>the codes use edgeR and produces files:</p><p>05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.classic.tsv</p><p>05.diffexp/hcc_example.miRNA.homer.edgeR.TMM.mx</p><p>05.diffexp/hcc_example.miRNA.NCvsHCC.edgeR.tsv</p><h2 id="Wilcox-Mann-Whitney-U-Test"><a href="#Wilcox-Mann-Whitney-U-Test" class="headerlink" title="Wilcox/Mann-Whitney-U Test"></a>Wilcox/Mann-Whitney-U Test</h2><h3 id="1-normalize-the-reads-by-library-size-edgeR"><a href="#1-normalize-the-reads-by-library-size-edgeR" class="headerlink" title="1. normalize the reads by library size (edgeR)"></a>1. normalize the reads by library size (edgeR)</h3><h3 id="2-identify-differential-expressed-gene-using-wilcoxon-test"><a href="#2-identify-differential-expressed-gene-using-wilcoxon-test" class="headerlink" title="2. identify differential expressed gene using wilcoxon.test()"></a>2. identify differential expressed gene using wilcoxon.test()</h3><figure class="highlight plain"><figcaption><span>warning</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cpmMx &lt;- read.table(&quot;04.counts/hcc_example.miRNA.homer.rpm.mx&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line">filter_cpm &lt;- apply(</span><br><span class="line">    mx[,2:ncol(cpmMx)],</span><br><span class="line">    1,</span><br><span class="line">    function(x) length(x[x &gt; 0]) &gt;= 2</span><br><span class="line">)</span><br><span class="line">mx_filterCPM &lt;- cpmMx[filter_cpm,]</span><br><span class="line"></span><br><span class="line">myFun &lt;- function(x)&#123;</span><br><span class="line">  x = as.numeric(x)</span><br><span class="line">  v1 = x[2:4]</span><br><span class="line">  v2 = x[5:10]</span><br><span class="line">  out &lt;- wilcox.test(v1,v2,exact = F) </span><br><span class="line">  out &lt;- out$p.value</span><br><span class="line">&#125;</span><br><span class="line">p_value &lt;- apply(mx_filterCPM,1,myFun)</span><br><span class="line">p_value[is.nan(p_value)] &lt;- 1</span><br><span class="line">FDR &lt;- p.adjust(p_value,method = &quot;BH&quot;)</span><br><span class="line">mx_filterCPM$avgNC &lt;- apply(mx_filterCPM[,2:4],1,mean)</span><br><span class="line">mx_filterCPM$avgHCC &lt;- apply(mx_filterCPM[,5:10],1,mean)</span><br><span class="line">mx_filterCPM$log2fc &lt;- log2((mx_filterCPM$avgNC+0.25)/(mx_filterCPM$avgHCC+0.25))</span><br><span class="line">results &lt;- cbind(mx_filterCPM,p_value,FDR)</span><br><span class="line">if(!file.exists(&quot;05.diffexp/hcc_example.miRNA.NCvsHCC.wilcox__.tsv&quot;))&#123;</span><br><span class="line">write.table(results,file = &quot;05.diffexp/hcc_example.miRNA.NCvsHCC.wilcox__.tsv&quot;,row.names = F, sep=&quot;\t&quot;, quote=F)&#125;</span><br></pre></td></tr></table></figure><p>the codes use wilconx test and produces files:</p><p>05.diffexp/hcc<em>example.miRNA.NCvsHCC.wilcox</em>.tsv</p><h2 id="exploring-results"><a href="#exploring-results" class="headerlink" title="exploring results"></a>exploring results</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># filter expression matrix</span><br><span class="line">mx &lt;- read.table(&quot;04.counts/hcc_example.miRNA.homer.ct.mx&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line"></span><br><span class="line"># filter genes</span><br><span class="line">filter_genes &lt;- apply(</span><br><span class="line">  mx[,2:ncol(mx)],</span><br><span class="line">  1,</span><br><span class="line">  function(x) length(x[x &gt; 2]) &gt;= 2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mx_filterGenes &lt;- mx[filter_genes,]</span><br><span class="line"></span><br><span class="line"># load experimential design</span><br><span class="line">design &lt;- read.table(&quot;05.diffexp/design.tsv&quot;,sep=&quot;\t&quot;,header=T)</span><br><span class="line"></span><br><span class="line">#-----------------------------------------</span><br><span class="line"># basic script for normalizing with DESeq2</span><br><span class="line">library(DESeq2)</span><br><span class="line">#Read Data in</span><br><span class="line">countData &lt;- mx_filterGenes</span><br><span class="line">colData &lt;- design</span><br><span class="line"></span><br><span class="line"># generate Dataset</span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(countData, colData, design=~Treatment, tidy=TRUE)</span><br><span class="line"></span><br><span class="line"># normlize using rlog mathod</span><br><span class="line">norm &lt;- rlog(dds,blind=FALSE)</span><br><span class="line">norm_matrix &lt;- assay(norm)</span><br><span class="line"></span><br><span class="line"># diff-exp analysis using DESeq2</span><br><span class="line">deg &lt;- DESeq(dds)</span><br><span class="line">res &lt;- results(deg,tidy=TRUE)</span><br></pre></td></tr></table></figure><h4 id="Heatmap-for-count-matrix"><a href="#Heatmap-for-count-matrix" class="headerlink" title="Heatmap for count matrix"></a>Heatmap for count matrix</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">library(&quot;pheatmap&quot;)</span><br><span class="line">select &lt;- order(rowMeans(counts(deg,normalized=TRUE)), decreasing=TRUE)[1:25]</span><br><span class="line">df &lt;- as.data.frame(colData(deg)[,c(&quot;Treatment&quot;,&quot;Sample&quot;)])</span><br><span class="line">pheatmap(assay(norm)[select,], cluster_rows=FALSE, show_rownames=FALSE, cluster_cols=TRUE, annotation_col=df)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It contains my assignment in Bioinformatics course talking about Differential Expression and this semesters’ code&lt;br&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="bioinformatics" scheme="https://www.cmwonderland.com/tags/bioinformatics/"/>
    
  </entry>
  
  <entry>
    <title>分享一个微信机器人</title>
    <link href="https://www.cmwonderland.com/2018/05/16/wechat/"/>
    <id>https://www.cmwonderland.com/2018/05/16/wechat/</id>
    <published>2018-05-16T13:13:27.000Z</published>
    <updated>2018-05-16T13:14:35.997Z</updated>
    
    <content type="html"><![CDATA[<p>去年最火的微信机器人似乎是<a href="https://github.com/littlecodersh/ItChat" target="_blank" rel="noopener">GitHub - littlecodersh/ItChat: A complete and graceful API for Wechat. 微信个人号接口、微信机器人及命令行微信，三十行即可自定义个人号机器人。</a>，尤其是这种文章<a href="https://zhuanlan.zhihu.com/p/25670072" target="_blank" rel="noopener">用微信控制深度学习训练：中国特色的keras插件</a>还是相当有趣的。今天又看到一个功能很全的微信接口<a href="https://github.com/youfou/wxpy" target="_blank" rel="noopener">https://github.com/youfou/wxpy</a></p><a id="more"></a><p>功能非常多，不过有一些bug，比如会多次重复弹出二维码扫描。另外因为中文编码的不友好，用来处理些中文信息还是挺不顺畅的。</p><p>Share一下用来获取所有好友的个性签名的代码，比一篇微信文章的教程多了一些东西，换成了numpy，把好友名字对应起来了。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-<span class="number">8</span></span><br><span class="line">from wxpy <span class="keyword">import</span> *</span><br><span class="line"># 初始化机器人，扫码登陆</span><br><span class="line">bot = Bot()</span><br><span class="line"># 获取所有好友</span><br><span class="line">my_friends = bot.friends()</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">filterdata= &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="built_in">in</span> range(len(my_friends)):</span><br><span class="line">    friend = my_friends[i]</span><br><span class="line">    #pattern = re.compile(r<span class="string">'[一-龥]+'</span>)</span><br><span class="line">    filterdata[i] = friend.signature</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">sig = np.array([filterdata[i] <span class="keyword">for</span> i <span class="built_in">in</span> range(len(my_friends))])</span><br><span class="line">induse = np.<span class="keyword">where</span>(sig !=<span class="string">''</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">sign</span> = np.ndarray([induse.shape[<span class="number">0</span>],<span class="number">2</span>]).astype(<span class="string">'str'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="built_in">in</span> range(induse.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="built_in">sign</span>[i,<span class="number">0</span>] = my_friends[induse[i]].<span class="keyword">name</span></span><br><span class="line">    <span class="built_in">sign</span>[i,<span class="number">1</span>] = sig[induse[i]]</span><br><span class="line">np.savetxt(<span class="string">'signature'</span>,<span class="built_in">sign</span>,fmt=<span class="string">'%s'</span>)#,encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure><p>看了一遍有签名的的好友的微信签名，蛮有意思的，然后浏览了一下wxpy的文档<a href="http://wxpy.readthedocs.io/zh/latest/" target="_blank" rel="noopener">wxpy: 用 Python 玩微信 — wxpy 0.3.9.8 文档</a>，陷入沉思：<strong>这玩意儿就是为微商量身打造的垃圾信息骚扰利器，，，</strong></p><p>资源：<a href="https://mp.weixin.qq.com/s/hGptTYZnO4DVPTshgiJZmg" target="_blank" rel="noopener">人工智能头条/用Python更加了解微信好友</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;去年最火的微信机器人似乎是&lt;a href=&quot;https://github.com/littlecodersh/ItChat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub - littlecodersh/ItChat: A complete and graceful API for Wechat. 微信个人号接口、微信机器人及命令行微信，三十行即可自定义个人号机器人。&lt;/a&gt;，尤其是这种文章&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25670072&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;用微信控制深度学习训练：中国特色的keras插件&lt;/a&gt;还是相当有趣的。今天又看到一个功能很全的微信接口&lt;a href=&quot;https://github.com/youfou/wxpy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/youfou/wxpy&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
  </entry>
  
  <entry>
    <title>Multivariate Statistics Assignment 4</title>
    <link href="https://www.cmwonderland.com/2018/05/16/multi1/"/>
    <id>https://www.cmwonderland.com/2018/05/16/multi1/</id>
    <published>2018-05-16T04:59:19.000Z</published>
    <updated>2018-05-21T14:14:39.228Z</updated>
    
    <content type="html"><![CDATA[<p>The fourth assignment of Multivariate Statistics. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.</p><a id="more"></a><blockquote><p><strong>most recommend:</strong> <a href="https://www.cmwonderland.com/multihw4.html"><strong>click here</strong></a> for <strong>html version</strong> of assignment, you can see codes as well as plots.</p></blockquote><p>You may also find the <a href="https://github.com/james20141606/somethingmore/tree/master/multi-variable_pdf" target="_blank" rel="noopener"><strong>PDF Version</strong></a> of this assignment from github. <strong>Or if you can cross the fire wall, just see below</strong>:<br><div class="row"><iframe src="https://drive.google.com/file/d/1w9ByeBbuVBKFxahOIrwu2oZFuFXydeKa/preview" style="width:100%; height:550px"></iframe></div></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mp &lt;- matrix(c(5,2,2,2),2,2,byrow=T) </span><br><span class="line">eigen(mp)</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\text{The eigenvalue-eigenvector pairs are } \lambda_1 =6, e_1 =  [\frac{2}{\sqrt5},\frac{1}{\sqrt5}]; \lambda_2 =1, e_2 =  [-\frac{1}{\sqrt5},\frac{2}{\sqrt5}].\\\text{Therefore, the principle componenets become: }\\Y_1 = e_1^T X = \frac{2}{\sqrt5}X_1 +\frac{1}{\sqrt5}X_2\\Y_1 = e_2^T X = -\frac{1}{\sqrt5}X_1 +\frac{2}{\sqrt5}X_2\\\text{The total population variance explained by first principal component is:}\\\frac{var(Y_1)}{var(Y_1)+var(Y_2)} = \frac{\lambda_1}{\lambda_1+\lambda_2} = \frac{6}{1+6} \approx 85.71\%</script><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cov2cor(mp)</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\text{The correlation matrix } \rho = \left[\begin{matrix}1 & \sqrt\frac{2}{5} \\\sqrt\frac{2}{5}&1\end{matrix}\right]\\\text{The eigenvalue-eigenvector pairs are }\\\lambda_1= \frac{5+\sqrt {10}}{5}, \ e_1=\left[\begin{matrix}\frac{1}{\sqrt 2} \\\frac{1}{\sqrt 2}\end{matrix}\right]\\\lambda_1= \frac{5-\sqrt {10}}{5}, \ e_1=\left[\begin{matrix}-\frac{1}{\sqrt 2} \\\frac{1}{\sqrt 2}\end{matrix}\right]</script><script type="math/tex; mode=display">Let \ \mathbf{Z_i} = \frac{\mathbf{X_i}-\mu_i}{\sqrt {\sigma_{ii}}}, i =1,...,p. \text{The principal components become:}\\Y_1 = e_1^T Z = \frac{1}{\sqrt2}Z_1 +\frac{1}{\sqrt2}Z_2\\Y_1 = e_2^T Z = -\frac{1}{\sqrt2}Z_1 +\frac{1}{\sqrt2}Z_2\\\text{The total population variance explained by first principal component is:}\\\frac{var(Y_1)}{var(Y_1)+var(Y_2)} = \frac{\lambda_1}{\lambda_1+\lambda_2} = \frac{5+\sqrt{10}}{10} \approx 81.6\%</script><h2 id="b"><a href="#b" class="headerlink" title="b"></a>b</h2><p>The principal components of Z obtained from the eigenvectors of the correlation<br>matrix ρ of X is different from those calculated from covariance matrix $\Sigma$. Because<br>the eigen pairs derived from $\Sigma$, in general not the same as the ones derived from $\rho$</p><h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2><p>THe correlations between $Y_j$ and $Z_i$ are:</p><script type="math/tex; mode=display">\rho_{Y_1,Z_1} = e_{11}\sqrt {\lambda_1} = \frac{1}{\sqrt2}\sqrt \frac{5+\sqrt {10}}{5} \approx0.903 \\\rho_{Y_1,Z_2} = e_{12}\sqrt {\lambda_1} = \frac{1}{\sqrt2}\sqrt \frac{5+\sqrt {10}}{5} \approx0.903 \\\rho_{Y_2,Z_1} = e_{21}\sqrt {\lambda_2} = - \frac{1}{\sqrt2}\sqrt \frac{5-\sqrt {10}}{5} \approx -0.429</script><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><h2 id="a-1"><a href="#a-1" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># read the data</span><br><span class="line">setwd(&apos;~/Desktop/三春/3多元统计分析/作业/作业4/&apos;)</span><br><span class="line">dat&lt;-read.csv(&quot;table8.4.csv&quot;)</span><br><span class="line">X1&lt;-dat$x1</span><br><span class="line">X2&lt;-dat$x2</span><br><span class="line">X3&lt;-dat$x3</span><br><span class="line">X4&lt;-dat$x4</span><br><span class="line">X5&lt;-dat$x5</span><br><span class="line">covar &lt;- cov(dat)</span><br><span class="line">covar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eigen(cov(dat))</span><br><span class="line">prcomp(dat)</span><br><span class="line">summary(prcomp(dat))</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">Y_1 = e_1^T X= -0.2228228 X_1  -0.3072900 X_2 -0.1548103 X_3 -0.6389680 X_4 -0.6509044 X_5\\Y_2 = e_2^T X = 0.6252260 X_1 + 0.5703900 X_2 +0.3445049 X_3 -0.2479475 X_4 -0.3218478 X_5\\Y_3 = e_3^T X= -0.32611218 X_1 +  0.24959014 X_2 +0.03763929 X_3 +0.64249741 X_4 -0.64586064 X_5\\Y_4 = e_4^T X=  0.6627590 X_1 -0.4140935X_2 -0.4970499 X_3 +0.3088689 X_4 -0.2163758 X_5\\Y_5 = e_5^T X=-0.11765952 X_1 +0.58860803 X_2 -0.78030428 X_3 -0.14845546 X_4 +0.09371777 X_5</script><h2 id="b-1"><a href="#b-1" class="headerlink" title="b"></a>b</h2><p>From the summary above, the proportion of the total sample variance explained by the rst<br>three principal components is: 89.881%. It means that the first three explain almost all<br>variance.</p><h2 id="c-1"><a href="#c-1" class="headerlink" title="c"></a>c</h2><p>From 8-33, we have the CI of m $\lambda_i$:</p><script type="math/tex; mode=display">[\frac{\hat \lambda_i}{1+z(\alpha/2m)\sqrt{2/n}},\frac{\hat \lambda_i}{1-z(\alpha/2m)\sqrt{2/n}}]</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">z &lt;-qnorm(1-1/6)</span><br><span class="line">cical &lt;-function(lambda)&#123;</span><br><span class="line">  c(lambda/(1+z*(1/103)**0.5),lambda/(1-z*(1/103)**0.5))</span><br><span class="line">&#125;</span><br><span class="line">cical(0.0013676780)</span><br><span class="line">cical(0.0007011596) </span><br><span class="line">cical(0.0002538024)</span><br></pre></td></tr></table></figure><p>CIs are: [0.001248653 0.001511786], [0.0006401396 0.0007750385], [0.0002317147 0.0002805447]</p><h2 id="d"><a href="#d" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(c(0.52926, 0.80059, 0.89881, 0.95399, 1.00000),ylab=&quot;Cumulative proportion&quot;,xlab=&quot;Component number&quot;,type=&apos;b&apos;)</span><br></pre></td></tr></table></figure><p>From the cumulative proportion plot, it seems that three dimensions’ PC are enough.</p><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><h2 id="a-2"><a href="#a-2" class="headerlink" title="a"></a>a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library(bootstrap)</span><br><span class="line">data(scor)</span><br><span class="line">plot(scor)</span><br></pre></td></tr></table></figure><h2 id="b-2"><a href="#b-2" class="headerlink" title="b"></a>b</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor(scor)</span><br></pre></td></tr></table></figure><h2 id="c-2"><a href="#c-2" class="headerlink" title="c"></a>c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">prcomp(scor)</span><br><span class="line">summary(prcomp(scor))</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">Y_1 = e_1^T X= -0.5054457 X_1  -0.3683486 X_2 -0.3456612 X_3 -0.4511226 X_4 -0.5346501 X_5\\Y_2 = e_2^T X = -0.74874751 X_1 -0.20740314 X_2 + 0.07590813 X_3 +0.30088849 X_4 +0.54778205 X_5\\Y_3 = e_3^T X= 0.2997888 X_1   -0.4155900 X_2 -0.1453182 X_3 -0.5966265 X_4 +0.6002758 X_5\\Y_4 = e_4^T X=  -0.296184264 X_1 + 0.78288817X_2 +0.003236339 X_3 -0.518139724 X_4 +0.175732020 X_5\\Y_5 = e_5^T X= -0.07939388 X_1 -0.18887639 X_2 +0.92392015 X_3 -0.28552169 X_4 -0.15123239 X_5</script><h2 id="d-1"><a href="#d-1" class="headerlink" title="d"></a>d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(c( 0.6191,0.8013 ,0.8948 ,0.97102, 1.00000),ylab=&quot;Cumulative proportion&quot;,xlab=&quot;Component number&quot;,type=&apos;b&apos;)</span><br></pre></td></tr></table></figure><p>I will choose the first too for these three PCs take almost 80% of total variance.</p><h2 id="e"><a href="#e" class="headerlink" title="e"></a>e</h2><p>PC1 may stand for the indicator of scores on all subjects. PC2 has more straightforward mearning: it is related to closed or open rules.</p><h2 id="f"><a href="#f" class="headerlink" title="f"></a>f</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(&apos;ggfortify&apos;)</span><br><span class="line">autoplot(prcomp(scor,scale=TRUE),colour=&apos;green&apos;,label=TRUE)</span><br></pre></td></tr></table></figure><h2 id="g"><a href="#g" class="headerlink" title="g"></a>g</h2><p>$\chi^2_2(0.05) = 5.99$<br>I use python to check the outlier:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(strr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.array(strr.split(<span class="string">' '</span>)).astype(<span class="string">'float'</span>).reshape(<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">pca = PCA(n_components=<span class="number">2</span>, svd_solver=<span class="string">'full'</span>)</span><br><span class="line">dat = pca.fit_transform(data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ellipse</span><span class="params">(i)</span>:</span></span><br><span class="line">    x,y = dat[i,<span class="number">0</span>],dat[i,<span class="number">1</span>]</span><br><span class="line">    a =  (x/<span class="number">26.2105</span>)**<span class="number">2</span> + (y/<span class="number">14.2166</span>)**<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> a &gt;=<span class="number">5.99</span>:</span><br><span class="line">        <span class="keyword">print</span> (i,a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(data.shape[<span class="number">0</span>]):</span><br><span class="line">    ellipse(i)</span><br></pre></td></tr></table></figure></p><p>And we can find eight outliers: 1,2,23,28,66,76,81,87</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The fourth assignment of Multivariate Statistics. The assignment is written in Rmarkdown, a smart syntax supported by RStudio helping with formula, plot visualization and plugin codes running.&lt;/p&gt;
    
    </summary>
    
      <category term="school work" scheme="https://www.cmwonderland.com/categories/school-work/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="R" scheme="https://www.cmwonderland.com/tags/R/"/>
    
      <category term="assignment" scheme="https://www.cmwonderland.com/tags/assignment/"/>
    
      <category term="statistics" scheme="https://www.cmwonderland.com/tags/statistics/"/>
    
      <category term="linear regression" scheme="https://www.cmwonderland.com/tags/linear-regression/"/>
    
  </entry>
  
  <entry>
    <title>J-1 Visa申请流程回忆</title>
    <link href="https://www.cmwonderland.com/2018/05/15/J-1-Visa/"/>
    <id>https://www.cmwonderland.com/2018/05/15/J-1-Visa/</id>
    <published>2018-05-15T14:32:38.000Z</published>
    <updated>2018-05-21T15:38:03.381Z</updated>
    
    <content type="html"><![CDATA[<p>5.14下午去美国大使馆非移民签证处办了签证，虽然很折腾但是比较顺利，把过程记录一下。</p><p>首先是漫长的准备阶段，参考了去年和以前的去芝加哥的学长学姐的各种流程和资料，网上搜罗的各种经验（靠谱的不靠谱的）甚至看了看youtube的面试指南。办签证这件事网上的信息实在是非常杂乱，信息量很低，包括很多out of date的信息，需要大量的过滤。</p><p>办签证的过程一定要记好笔记，因为这可能是个持续数月的艰苦工程，笔记太凌乱就不放上来了，现在简单总结下重要的材料和节点</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28828120&auto=1&height=66"></iframe><a id="more"></a><ul><li>办<strong>护照</strong>，早点去办，和其他环节独立，带上交通时间花费不会超过三个小时，提前填好表格带过去就行，攻略很多</li><li>配合对方负责人填写各种表格，基本对方给什么就填什么，该签字就签字扫描再传回去，Harvard还有网上填的一个表格，然后等待对方审核最后把<strong>DS7002和2019</strong>寄回来，学校还寄了其他的一堆指南，不过有个bug是对方导师没在DS7002签字，我专门又要了签名扫描传过来，没用上。这个过程和校内的批件什么的是独立的，和对方学校联系好就可以办了，持续时间将近两个月。。。包括Harvard的国际处从审核开始到联邦快递寄过来就花了半个月。</li><li>学校的<strong>派出证明、在学证明、资助证明</strong>。资助证明和派出证明还是有用的，作为J-1签证申请者，有学校资助证明就不需要再用什么财产证明了（所以之前爸妈弄得财产证明什么的也没什么用）。要开这几个证明就要先办好<strong>批件</strong>，批件可以先填着各种表格，找各种地方签字，以前的资料都可以参考，芝加哥的指南最详细，不过要注意各个负责老师换的很频繁，以前的经验里的老师们大多数都不再负责了，可以问问最近的同学或者找刘栋老师办的时候顺便问一下其他几个负责的老师。表格各种签好字扫描上传，加上对方导师发过来的邀请信就可以完成批件资料了，等着国际处几天审核好，去李兆基楼取就好了，取的时候顺手打印好资助证明，自己在上面填金额，要符合对方的要求，比如（2333$ /month），然后让国际处老师盖个章，顺手还可以要一个保险的明信片。</li><li>准备其他材料，<strong>比如去照符合美签要求的照片，自己、导师的CV准备好，写好过去之后的工作计划，日程表</strong>。</li><li>开始准备面签流程，现在真的比过去简化太多了，<strong>交SEVIS FEE，留好确认收据</strong>，填DS160表，网上各种指南，填着也不是很麻烦，然后<strong>打印DS160确认页</strong>，然后缴费，用中信银行交就行，我当时用手机银行交的，没有收据，因为处于很担心因为手续不全耽误签证又不敢确信是否需要的心情下，就专门去中信银行开了签证费收据，后来发现面签的时候完全没用，并不需要，但是报销应该需要。因为现在各种信息都联网了，所以扫一下你的DS160的码就知道了，各种收费的收据也不需要看了。</li><li>选一个面签时间，我选的是周一下午3：15的场</li></ul><p>简单总结一下材料：</p><ul><li><strong>DS-160确认页 【彩印】，面签确认页，SEVIS FEE收据</strong></li><li><strong>DS7002 DS2019，护照，美签标准照片</strong> </li><li><strong>派出许可、资助证明 ， 批件</strong></li><li><strong>邀请信， 自己，教授CV，实验室网页，国内外导师网页介绍， 托福成绩单，英文成绩单  ，日程计划，proposal</strong> </li><li><strong>户口本复印件，身份证，学生证，在学证明</strong></li><li><strong>资产证明，全家福照片，父母的在职证明&amp;收入证明</strong></li></ul><p>以上这些，除了护照和DS2019，面签的时候我一个都没用上。。。</p><p><strong>面签当日流程：</strong></p><p>上午仔细总结梳理了整个流程和材料，处于一种相当担惊受怕的心情，很怕被check了耽误出国，尤其是最近发生了好几起暑研办签证被check的现象，如果check一个月的话怕是真的会耽误。。</p><p>中午一点出发，大概两点到，站了一路，北京当天的气温是三十多度，今年第一次上三十吧，相当热了，然后愚蠢的百度地图导航错误，走到了大使馆的另一侧，于是又绕了一公里才找到了非移民签证处，人头攒动，很多人堵着在等着面签。按照经验去马路斜对面的一个办事处花了三十元存包，然后去了另一个大楼上个卫生间，，，（真是相当奇葩，附近大概没有其他可以去卫生间的地方和存东西的地方，而大使馆里没有坐的地方，真是毫无人权，，）</p><p>先要在外面排队，排队非常非常的混乱，靠纸牌子显示时间，，而且虽然预约单上的最晚时间已经到了，但是显然由于低效率，纸牌子上的时间远远慢于当前时间，但是后来发现好像也无所谓，，在拥挤的人群中在太阳地下站了大概一个小时，脑子接近短路，然后进去，经过几关之后，到一个窗口先扫描了160上的码登记了信息，不同的队伍效率差距挺大的，然后去扫了指纹，然后就上去开始排队准备面签了，两个厅，大概一个厅几十个人，面签的时候隔着玻璃，毫无尊严地站着面签。。</p><p>中间发生了一个非常非常严重的插曲，刚排没多久，一个女人就开始大哭，应该是被拒了，然后崩溃，对着签证官大哭大吼，说什么又被拒了，要把肚子里的孩子打掉，场面混乱至极，女人赖着不走，所有人在一片哭闹中默默地等待面签，我不知道多少人如果被拒绝或者check了会在事后归结于这个女的身上。我觉得这个女人真的是极其极其的自私。ok你想去美国生孩子我就不说什么了，崇洋媚外也行吧，谁让我国跪舔外国人清华北大对外国人也优待呢。你八个月了要出去花几十万买个美国籍，全家人明明是中国人，估计英语都不怎么会说，当签证官傻吗，，，这也算了，你出不去就威胁说你要把孩子打掉，以此威胁签证官说他们没人性？？拜托，，，我觉得在场所有人都石化了，，然后不断的有安保和工作人员和级别更高的美国人过来，无奈该女性一直赖在窗口不走。然后我果然运气很差地被分到了隔壁窗口，还是刚才经历了这么糟糕的经历的签证官来面试我。</p><p>面试我的签证官是华裔，而且据排队时观察，很多签证官都中英文切换顺利，不过作为J-1签证申请者，还是主动地选择了用英语。。</p><p>不过面试的经历极其简单，大概如下：</p><ul><li>Me: good afternoon, how are you doing</li><li>Official: fine, thank you （内心独白可能是，刚才被孕妇闹得，不知道得有多少事，你还问我感觉怎么样）</li><li>Official: Could you give me your passport and DS2019</li><li>Me: Sure</li><li>Official: Wow, you must be very smart, Tsinghua, Harvard</li><li>Me: Thank you（没想到会说这个，完全忘了怎么回答）</li><li>Official: So it is your “Dasan? Daer?”（又一个奇怪的但是经常出现的问题，大概因为太多人听不懂大一大二大三的英文，面试官已经习惯直接说拼音了，但是当时处在思维定式专注地等着听英语的我楞了一下）</li><li>Me: dasan</li><li>Official: what’s your plan after you return to China（一个坑问题，看看你会不会有留在美国的心思）</li><li>Me: I think I will finish my undergraduate study to get my bachelor degree, and then I will continue my phd program in Tsinghua in my current lab（瞎扯就好了）</li></ul><p>然后他竟然就懒得再问了，直接在DS2019上面签字，递蓝条子，说:congratulations, you pass!</p><p>于是只花了两分钟就面试完了，真的非常顺利，感觉学校帮了很大的忙，其他资料完全没用上，但是还是一定要准备好的。</p><p>出门取了存的包，然后坐地铁回西门，整整四个小时一直在紧张的情绪下站着真的是对身体极大的消耗，不过过了就好，后续就可以在<strong>校内买保险、让国际处老师买机票，以及领生活费了</strong>。</p><p>大致流程就是这样了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5.14下午去美国大使馆非移民签证处办了签证，虽然很折腾但是比较顺利，把过程记录一下。&lt;/p&gt;
&lt;p&gt;首先是漫长的准备阶段，参考了去年和以前的去芝加哥的学长学姐的各种流程和资料，网上搜罗的各种经验（靠谱的不靠谱的）甚至看了看youtube的面试指南。办签证这件事网上的信息实在是非常杂乱，信息量很低，包括很多out of date的信息，需要大量的过滤。&lt;/p&gt;
&lt;p&gt;办签证的过程一定要记好笔记，因为这可能是个持续数月的艰苦工程，笔记太凌乱就不放上来了，现在简单总结下重要的材料和节点&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=28828120&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="summer research" scheme="https://www.cmwonderland.com/categories/summer-research/"/>
    
    
      <category term="school" scheme="https://www.cmwonderland.com/tags/school/"/>
    
      <category term="research" scheme="https://www.cmwonderland.com/tags/research/"/>
    
      <category term="summer research" scheme="https://www.cmwonderland.com/tags/summer-research/"/>
    
  </entry>
  
  <entry>
    <title>母爱是一弯柔缓的河流</title>
    <link href="https://www.cmwonderland.com/2018/05/12/mom/"/>
    <id>https://www.cmwonderland.com/2018/05/12/mom/</id>
    <published>2018-05-12T15:58:06.000Z</published>
    <updated>2018-05-13T04:42:08.186Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i1.fuimg.com/640680/387ef9bb6b1632fa.jpg" alt="Markdown"><br>前几天读到了一篇文章，是从一个医学类的微信公众号看到的，辗转找到了知乎的原文<a href="https://www.zhihu.com/question/269575911/answer/372282921" target="_blank" rel="noopener">你手机里最舍不得删的那张照片有什么故事? - 知乎</a>，从一个丈夫和父亲的角度，讲述自己的妻子产后大出血的惊心动魄的故事，讲的特别细腻而揪心，大晚上看很容易流泪，让人有感动又害怕，把这样好的文章放在开头，似乎已经不用再写什么东西了，一切都在里面了。</p><p>看着文章的第一反应是如果生孩子这么辛苦和危险，要想办法找到更好的条件减轻风险，第二反应是妈妈真不容易，很勇敢，很了不起，勇敢地把我生了下来。我想世界的话语权长期被男性把持着，所以一直低估了女性在生育过程中经历的漫长的、折磨人的却又自愿的痛苦。如果细细回想，细细品味，从男人的角度看那些令人揪心的描述，想象漫长的数十个月甚至更久的煎熬和痛苦，实在是值得每个男人潸然泪下，为自己的母亲、自己的妻子和自己的孩子。</p><a id="more"></a><p>每个女人都曾经是二十多岁的美女，却要经受改变身材的难过，经历风险和巨大的痛苦，经历产后的日日夜夜的辛苦和煎熬，初为父母一定有很多不会、不懂的慌张，有很多劳力、劳心的疲乏与无力，想想已经让我感到紧张和担心了，所以我总是感觉到我们每个人，都远远低估了父母之爱的沉重与宝贵，尤其是一个个从弱女子成长起来的人送出的母爱，我相信等我为人父母的那一天我会体会地愈发深刻。你永远体会不到、甚至记不得了父母在你最弱小无力的那些年岁所做的事情，你记得青春年少时每一件鸡毛蒜皮的小事，你写诗唱歌、反复吟咏每一个细节，你却不知道母爱，你以为母爱是一句句唠叨和叮嘱，我想不是，因为母爱的沉重和复杂已经超出了母亲的表达能力，超出了青春年少文采飞扬的你所能表达描述的极限，以至于你熟视无睹，理所当然，无力描述，以至于多年后你理解了，甚至相当后悔。</p><p>我不是个愿意无休止的后悔的人，所以我一直努力不做后悔的事情，对于母爱，不后悔的源头就在于，认清楚这份爱多么重要，以及它明明不是<strong>unconditional love</strong>，不是<strong>无条件的爱</strong>，但母爱的伟大之处就在于有很多伟大的母亲让这份爱变得无条件，它浑然天成，不需要条件，这是怎样浓厚沉重的馈赠。  </p><p>我想清楚这件事在于“<strong>一个自私的念头</strong>”，我想到很多夫妻在结婚后重心都转移给了孩子，孩子成了纽带，中心，一切，在我看来这甚至算是一个破坏两个人的爱情的因素。我担心有一天我和我的妻子也会把很多倾注在孩子身上，没有了当年的浓浓的爱，而是对孩子的爱，对孩子的爱超过了对对方，可是沉浸在爱情的年轻人总是想独占对方的爱，不想和一个未来的无知的小生命分享爱，甚至抢走自己的爱，打扰自己的生活。  这个时候我想到了过去的自己，在过去的很多年里，我就是这样一个无知的小生命，我打扰了父母的美好的生活，我带给了他们很多快乐，也占有了他们无数的生命、时间和精力。我不知道我会不会向我未来的孩子抱怨：“都怪你，如果没有你，我和你妈妈两个人会多幸福，想去哪里去哪里，没有牵挂，没有烦恼”，可是我知道父母从没有这么对我说过， 我很惊讶，他们竟然没有我这样的自私的念头，让我占了很多年的光，让我得到了很多的东西，而我好像没有认真地感谢过几次。如果是我，我该如何向我的孩子抱怨呢？也许是：“我为你付出了这么多我生命的时光和精力，你无论如何感谢我都不够。”那我想我的父母一定很有资格这么对我说，这么想我就懂得母亲有的时候会有多伤心了，当这么多年的无条件的，如此沉重的付出之后，人永远无法理性起来，如果你还是个理性的人，那是因为你还不懂这份爱，现在我慢慢懂了，<strong>如果一份爱柔缓地滋润了你那么多年，那它就不该受到伤害。</strong></p><p>这不是我应得的，不是我无条件就必然获得的，但是父母从没有质疑过这是不是我应得的，这就是母爱和父爱的伟大之处，<strong>Unconditional Love</strong></p><p>我觉得妈妈很厉害，不仅仅是无声无言的滋润，妈妈还有很多的唠叨，交代，叮嘱。我是个很细致和谨慎的人了，但是妈妈总是比我更加谨慎细致，我胜在有更多获取资源学习分析的工具，妈妈胜在她真的很关心一切事情。我觉得妈妈能解决很多我解决不了的事情，我相信很多事情都是锻炼来的，妈妈一定是经历了很多锻炼，我记得有一次我想解决一件事，但是搞的一团乱麻，毫无头绪，中午还昏昏沉沉的，就给妈妈打电话，妈妈给我提供了一个简洁得让我惊讶的正确方法，那时候我已经开始读大学了。所以后来我意识到，很多时候妈妈看似做不到某件事了，只是因为她得不到我身边的资源和知识，她比你过去以为的厉害得多呢。我的妈妈是个雷厉风行又富有效率的人呀，当你需要她的时候，你就可以耍赖地静静地看着她为你忙碌，看着她忙碌着，找这找那，照顾好每个细节，在这样的节奏中你就可以彻底地放松下来，什么都不用想，不用操心，这样的生活真好呀，母爱的河流流的湍急的时候，自己的心反而柔缓下来了，很放松很舒适。</p><p>但是这样的生活也不好呀，活的太幸福了，自己就变笨了变懒了，还怎么给自己关心牵挂的人们带来帮助呢。如果我们都像这个世界上伟大的母亲一样，要锻炼自己来帮助自己的孩子，也许我们也可以变得一样强大，所以我也感谢我中学的时候就去外地读书了，让我没有变笨变懒，学着自己勤快一点，远离了母爱的滋润也让我更加懂得母爱，也给了我更深刻的关于母爱的记忆。我还记得在郑州的很多个日子，从初一到高三，天知道父母多费了多少心力。所以我以为我远离了，但是我一直没有远离他们的滋润和灌溉，这是一份恰到好处的爱。</p><p>我不知道世界上是否有一份考卷，我一直觉得应该有一份的，因为有的新闻让我愤怒地想“为什么为人父母这么重要的事情不用考试”，我喜欢列出来各种条件来评估一件事情，我很多次回想过我的人生经历，让我这样吹毛求疵的人都感觉满意、幸运、幸福，（方法之一是我问我自己，愿不愿意再来一次自己的人生重新选择、我的回答是不，我很满足，也不后悔于什么事），我知道在我幼小无知的很多年里，在我将自己的命运交给父母选择的很多年里，是妈妈为我做了一个又一个正确的决定，明明有那么多歧路，我竟然都没有走错，因此我想如果有这样的考卷的话，我相信我的妈妈一定是满分。</p><p><strong>谢谢妈妈，母亲节快乐！</strong></p><p><img src="http://i1.fuimg.com/640680/e2bfc669eb590032.jpg" alt="Markdow"></p><center><font color="red" ,font="" size="5">如果我懂得了爱，那一定是因为你</font></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i1.fuimg.com/640680/387ef9bb6b1632fa.jpg&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;前几天读到了一篇文章，是从一个医学类的微信公众号看到的，辗转找到了知乎的原文&lt;a href=&quot;https://www.zhihu.com/question/269575911/answer/372282921&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;你手机里最舍不得删的那张照片有什么故事? - 知乎&lt;/a&gt;，从一个丈夫和父亲的角度，讲述自己的妻子产后大出血的惊心动魄的故事，讲的特别细腻而揪心，大晚上看很容易流泪，让人有感动又害怕，把这样好的文章放在开头，似乎已经不用再写什么东西了，一切都在里面了。&lt;/p&gt;
&lt;p&gt;看着文章的第一反应是如果生孩子这么辛苦和危险，要想办法找到更好的条件减轻风险，第二反应是妈妈真不容易，很勇敢，很了不起，勇敢地把我生了下来。我想世界的话语权长期被男性把持着，所以一直低估了女性在生育过程中经历的漫长的、折磨人的却又自愿的痛苦。如果细细回想，细细品味，从男人的角度看那些令人揪心的描述，想象漫长的数十个月甚至更久的煎熬和痛苦，实在是值得每个男人潸然泪下，为自己的母亲、自己的妻子和自己的孩子。&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="https://www.cmwonderland.com/categories/life/"/>
    
    
      <category term="life" scheme="https://www.cmwonderland.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>爷爷回忆录总结</title>
    <link href="https://www.cmwonderland.com/2018/05/08/autobio/"/>
    <id>https://www.cmwonderland.com/2018/05/08/autobio/</id>
    <published>2018-05-08T11:47:25.000Z</published>
    <updated>2018-05-08T12:06:33.121Z</updated>
    
    <content type="html"><![CDATA[<p>爷爷的回忆录是我投入了很多心力的一项工程，从把手写稿敲到word，排版排的十分吃力，到后续放到gitbook网站(<a href="https://james20141606.gitbooks.io/grandpa-autobiography/content/" target="_blank" rel="noopener">爷爷回忆录</a>)上，到在博客上分章节更新，到这篇博文(<a href="https://www.cmwonderland.com/2018/05/04/gitbook/">GitBook intro &amp; Grandpa’s Bio | James Chen’s Blogs</a>)所写的，为了更好的布局和字体和缩进所使用的本地版gitbook。</p><p><strong>现在内容基本确定，也把书打印了两本送给爷爷奶奶，后续希望可以有更多新的东西加入进去，现在先把相关的内容都总结在这里：</strong></p><a id="more"></a><h2 id="资源总结"><a href="#资源总结" class="headerlink" title="资源总结"></a>资源总结</h2><h3 id="博客连载"><a href="#博客连载" class="headerlink" title="博客连载"></a>博客连载</h3><p><a href="https://www.cmwonderland.com/2018/04/11/auto1/">回忆录 CHAPTER Ⅰ  我的童年 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto2/">回忆录 CHAPTER Ⅱ  初中生活 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto3/">回忆录 CHAPTER Ⅲ  难忘的一九五八 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto4/">回忆录 CHAPTER Ⅳ  新的篇章 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto5/">回忆录 CHAPTER Ⅴ 休学的日子 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto6/">回忆录 CHAPTER Ⅵ  婚后的生活 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto7/">回忆录 CHAPTER Ⅶ 喜上加喜 喜中有忧 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto8/">回忆录 CHAPTER Ⅷ 工作,崭新的篇章 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto9/">回忆录 短文数篇 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto10/">回忆录 童年的诗 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto11/">回忆录 关于正义的故事 | James Chen’s Blogs</a> <br><br><a href="https://www.cmwonderland.com/2018/04/11/auto12/">回忆录 年表 | James Chen’s Blogs</a></p><h3 id="书籍预览（需翻墙）"><a href="#书籍预览（需翻墙）" class="headerlink" title="书籍预览（需翻墙）"></a>书籍预览（需翻墙）</h3><p><strong>A4版本：</strong></p><div class="row"><iframe src="https://drive.google.com/file/d/1GOYSpu4kwXQQtoKME6YaSA26WfL9cHb9/preview" style="width:100%; height:550px"></iframe></div><p><strong>B5版本</strong></p><div class="row"><iframe src="https://drive.google.com/file/d/18-WA9WnxuCwaK4wWSOmV04Iv3gNcnxHu/preview" style="width:100%; height:550px"></iframe></div><h3 id="在Gitbook网站浏览"><a href="#在Gitbook网站浏览" class="headerlink" title="在Gitbook网站浏览"></a>在Gitbook网站浏览</h3><p>在<strong>GitBook网站</strong>上可以分章节浏览本书，但<strong>更新及时性差</strong>。</p><p><a href="https://james20141606.gitbooks.io/grandpa-autobiography/content/" target="_blank" rel="noopener">爷爷回忆录</a></p><p>注意不要在这个网站上下载pdf，在<strong>以下网站</strong>可以下载:</p><h3 id="在GitHub下载PDF"><a href="#在GitHub下载PDF" class="headerlink" title="在GitHub下载PDF"></a>在GitHub下载PDF</h3><p><a href="https://github.com/james20141606/somethingmore/tree/master/grandpa_autobiography" target="_blank" rel="noopener">A4及B5两种排版pdf下载</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;爷爷的回忆录是我投入了很多心力的一项工程，从把手写稿敲到word，排版排的十分吃力，到后续放到gitbook网站(&lt;a href=&quot;https://james20141606.gitbooks.io/grandpa-autobiography/content/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;爷爷回忆录&lt;/a&gt;)上，到在博客上分章节更新，到这篇博文(&lt;a href=&quot;https://www.cmwonderland.com/2018/05/04/gitbook/&quot;&gt;GitBook intro &amp;amp; Grandpa’s Bio | James Chen’s Blogs&lt;/a&gt;)所写的，为了更好的布局和字体和缩进所使用的本地版gitbook。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现在内容基本确定，也把书打印了两本送给爷爷奶奶，后续希望可以有更多新的东西加入进去，现在先把相关的内容都总结在这里：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="爷爷回忆录" scheme="https://www.cmwonderland.com/categories/%E7%88%B7%E7%88%B7%E5%9B%9E%E5%BF%86%E5%BD%95/"/>
    
    
      <category term="life" scheme="https://www.cmwonderland.com/tags/life/"/>
    
      <category term="autobiograpy" scheme="https://www.cmwonderland.com/tags/autobiograpy/"/>
    
  </entry>
  
  <entry>
    <title>Snakemake初步</title>
    <link href="https://www.cmwonderland.com/2018/05/05/snakemake/"/>
    <id>https://www.cmwonderland.com/2018/05/05/snakemake/</id>
    <published>2018-05-05T14:39:51.000Z</published>
    <updated>2018-05-05T14:50:49.471Z</updated>
    
    <content type="html"><![CDATA[<p>snakemake是一个用来编写任务流程的工具，用python写的，因此其执行的流程脚本也比较通俗易懂，易于理解，可以看做用户友好版的make。</p><a id="more"></a><p>其实流程控制是复杂任务（在生信领域很常见）必需的关注点。只是snakemake对于代码功力不够的人来说，在写好代码与重复流程的花销的trade off上，还不如一遍遍重复流程。。但是真的是一个写好了就很好用的东西，我经历的第一个项目就让我深有感触，eMaize早期做的说实话不算复杂，但是一步一步数据读取、处理、特征选择、回归等步骤已经能够把人搞晕了，如果一步有问题要返工，就得调出来以前的代码、笔记，如果笔记记得不详细就惨了，所以在接触snakemake的时候，就感觉到这款工具确实非常有意义（尤其是在别人写好自己用的时候(^o^)/~）</p><p>这次motif预测的数据处理过程很繁杂，数据种类很多，bin神的代码组织向来非常复杂严谨，所以实在是个用snakemake的绝佳场景，在读他的文件的时候，就顺便看了看snakemake的基本使用。</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>snakemake</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">pip3 <span class="keyword">install </span>snakemake</span><br></pre></td></tr></table></figure><h2 id="一个简单的例子"><a href="#一个简单的例子" class="headerlink" title="一个简单的例子"></a>一个简单的例子</h2><p><strong>建立两个文件</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Here is hello."</span> &gt; hello.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Here is world."</span> &gt; world.txt</span></span><br></pre></td></tr></table></figure></p><p><strong>接下来开始编写我们的Snakefile</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rule concat:  <span class="comment"># 这里的rule可视为snakemake定义的关键字，concat使我们自定义的这一步任务的名称</span></span><br><span class="line">    input:   <span class="comment"># input同样是snakemake的关键字，定义了在这个任务中的输入文件 </span></span><br><span class="line">        expand(<span class="string">"&#123;file&#125;.txt"</span>, file=[<span class="string">"hello"</span>, <span class="string">"world"</span>]) <span class="comment">#expand是一个snakemake定义的替换命令</span></span><br><span class="line">    output:   <span class="comment"># output也是snakemake的关键字，定义输出结果的保存文件</span></span><br><span class="line">        <span class="string">"merged.txt"</span></span><br><span class="line">    <span class="keyword">shell</span><span class="bash">:  <span class="comment"># 这里表示我们下面的命令将在命令行中执行</span></span></span><br><span class="line"><span class="bash">        <span class="string">"cat &#123;input&#125; &gt; &#123;output&#125;"</span></span></span><br></pre></td></tr></table></figure><p><strong>最后就可以在Snakefile的路径执行snakemake命令即可</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> snakemake</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat merge.txt</span></span><br><span class="line">Here is hello.</span><br><span class="line">Here is world.</span><br></pre></td></tr></table></figure><p>在上面的Snakefile脚本中，rule、input、output、shell、expand均为snakemake中的关键字或者命令。同时Snakefile中的每一个rule其实都可以看作是一个简单的shell脚本，通过Snakefile将多个rule组织在一起并按照我们定义的顺序来执行。另外，<strong>在output中的结果文件可以是未存在目录中的文件,这时会自动创建不存在的目录</strong>（这个功能是在很强）。</p><h2 id="snakemake中命令与规则"><a href="#snakemake中命令与规则" class="headerlink" title="snakemake中命令与规则"></a>snakemake中命令与规则</h2><h3 id="rule"><a href="#rule" class="headerlink" title="rule"></a>rule</h3><p>rule是Snakefile中最主要的部分。如上面的例子所说，每一个rule定义了一系列pipe中的一步，每一个rule都可以当作一个shell脚本来处理，一般主要包括input、output、shell3个部分。同时还有许多上面没有列出来的用法：</p><h4 id="rule-all"><a href="#rule-all" class="headerlink" title="rule all"></a>rule all</h4><p>不同于其他的rule，在rule all里面一般不会去定义要执行的命令，他一般用来定义最后的输出结果文件。除了rule all中定义的文件外最后输出结果不会保存任何中间文件。例如将上面的脚本改成如下文件则没有输出结果：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rule <span class="keyword">al</span><span class="variable">l:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">         #<span class="string">"merged.txt"</span>  取消注释后，则能正常输出文件</span><br><span class="line">rule conca<span class="variable">t:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="built_in">expand</span>(<span class="string">"&#123;file&#125;.txt"</span>, <span class="keyword">file</span>=[<span class="string">"hello"</span>, <span class="string">"world"</span>])</span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"merge.txt"</span></span><br><span class="line">    shel<span class="variable">l:</span></span><br><span class="line">        <span class="string">"cat &#123;input&#125; &gt; &#123;output&#125;"</span></span><br></pre></td></tr></table></figure></p><h4 id="wildcards"><a href="#wildcards" class="headerlink" title="wildcards"></a>wildcards</h4><p>用来获取通配符匹配到的部分，例如对于通配符$”{dataset}/file.{group}.txt”$匹配到文件101/file.A.txt，则{wildcards.dataset}就是101，{wildcards.group}就是A。</p><h4 id="threads"><a href="#threads" class="headerlink" title="threads"></a>threads</h4><p>通过在rule里面指定threads参数来指定分配给程序的线程数，egthreads: 8。</p><h4 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h4><p>可用来指定程序运行的内存，eg. resources: mem_mb=800。</p><h4 id="message"><a href="#message" class="headerlink" title="message"></a>message</h4><p>使用message参数可以指定每运行到一个rule时，在终端中给出提示信息，eg.message: “starting mapping …”。</p><h4 id="priority"><a href="#priority" class="headerlink" title="priority"></a>priority</h4><p>可用来指定程序运行的优先级，默认为0，eg.priority: 20。</p><h4 id="log"><a href="#log" class="headerlink" title="log"></a>log</h4><p>用来指定生成的日志文件，eg.log: “logs/concat.log”。</p><h4 id="params"><a href="#params" class="headerlink" title="params"></a>params</h4><p>指定程序运行的参数，eg.params: cat=”-n”,调用方法为{params.cat}。</p><h4 id="run"><a href="#run" class="headerlink" title="run"></a>run</h4><p>在run的缩进区域里面可以输入并执行python代码。</p><h4 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h4><p>用来执行指定脚本，eg.scripts: “rm_dup.py”</p><h4 id="temp"><a href="#temp" class="headerlink" title="temp"></a>temp</h4><p>通过temp方法可以在所有rule运行完后删除指定的中间文件，eg.output: temp(“f1.bam”)。</p><h4 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h4><p>用来指定某些<strong>中间文件是需要保留的</strong>，eg.output: protected(“f1.bam”)。</p><h4 id="ancient"><a href="#ancient" class="headerlink" title="ancient"></a>ancient</h4><p>重复运行执行某个Snakefile时，snakemake会通过比较输入文件的时间戳是否更改(比原来的新)来决定是否重新执行程序生成文件，使用ancient方法可以强制使得结果文件一旦生成就不会再次重新生成覆盖，即便输入文件时间戳已经更新，eg.input: ancient(“f1.fastq”)。</p><h4 id="Rule-Dependencies。可通过快捷方式指定前一个rule的输出文件为此rule的输入文件："><a href="#Rule-Dependencies。可通过快捷方式指定前一个rule的输出文件为此rule的输入文件：" class="headerlink" title="Rule Dependencies。可通过快捷方式指定前一个rule的输出文件为此rule的输入文件："></a>Rule Dependencies。可通过快捷方式指定前一个rule的输出文件为此rule的输入文件：</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rule <span class="selector-tag">a</span>:</span><br><span class="line">    <span class="selector-tag">input</span>:  <span class="string">"path/to/input"</span></span><br><span class="line">    output: <span class="string">"path/to/output"</span></span><br><span class="line">    shell:  ...</span><br><span class="line"></span><br><span class="line">rule <span class="selector-tag">b</span>:</span><br><span class="line">    <span class="selector-tag">input</span>:  rules<span class="selector-class">.a</span><span class="selector-class">.output</span>   #直接通过rules<span class="selector-class">.a</span><span class="selector-class">.output</span> 指定rule a的输出</span><br><span class="line">    output: <span class="string">"path/to/output/of/b"</span></span><br><span class="line">    shell:  ...</span><br></pre></td></tr></table></figure><h4 id="report"><a href="#report" class="headerlink" title="report"></a>report</h4><p>使用snakemake定义的report函数可以方便的将结果嵌入到一个<strong>HTML文件</strong>中进行查看。</p><h3 id="configuration"><a href="#configuration" class="headerlink" title="configuration"></a>configuration</h3><p>每计算一次数据都要重写一次Snakefile有时可能会显得有些繁琐，可以将那些改动写入配置文件，使用相同流程计算时，将输入文件的文件名写入配置文件然后通过Snakefile读入即可。<br>配置文件有两种书写格式——json和yaml。在Snakefile中读入配置文件使用如下方式：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">configfile</span>: "path/to/config.json" </span><br><span class="line"><span class="attribute">configfile</span>: "path/to/config.yaml"</span><br><span class="line"></span><br><span class="line"># 也可直接在执行snakemake命令时指定配置</span><br><span class="line">$ snakemake --config yourparam=1.5</span><br></pre></td></tr></table></figure><p>在shell命令中直接调用config文件中的内容的话，不需要引号，如config[a]而不是config[“a”]。</p><h2 id="snakemake的执行"><a href="#snakemake的执行" class="headerlink" title="snakemake的执行"></a>snakemake的执行</h2><p>一般讲所有的参数配置写入Snakefile后直接在Snakefile所在路径执行snakemake命令即可开始执行流程任务，如果只有一个snakefile的话，连文件都不用写。一些常用的参数：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">--snakefile,</span> -s 指定<span class="string">Snakefile，</span>否则是当前目录下的<span class="string">Snakefile</span></span><br><span class="line"><span class="string">-</span>-<span class="string">dryrun,</span> -n  不真正执行，一般用来查看<span class="string">Snakefile是</span>否有错</span><br><span class="line"><span class="built_in">--printshellcmds,</span> -p   输出要执行的<span class="string">shell命</span>令</span><br><span class="line"><span class="built_in">--reason,</span> -r  输出每条<span class="string">rule执</span>行的原因,默认<span class="string">FALSE</span></span><br><span class="line"><span class="string">-</span>-<span class="string">cores,</span> <span class="built_in">--jobs,</span> -j  指定运行的核数，若不指定，则使用最大的核数</span><br><span class="line"><span class="built_in">--force,</span> -f 重新运行第一条<span class="string">rule或</span>指定的<span class="string">rule</span></span><br><span class="line"><span class="string">-</span>-<span class="string">forceall,</span> -F 重新运行所有的<span class="string">rule，</span>不管是否已经有输出结果</span><br><span class="line"><span class="built_in">--forcerun,</span> -R 重新执行<span class="string">Snakefile，</span>当更新了<span class="string">rule时</span>候使用此命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#一些可视化命令</span></span><br><span class="line">$ <span class="string">snakemake </span><span class="built_in">--dag</span> | <span class="string">dot </span>-<span class="string">Tpdf </span>&gt; <span class="string">dag.</span><span class="string">pdf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#</span>集群投递</span><br><span class="line"><span class="string">snakemake </span><span class="built_in">--cluster</span> <span class="string">"qsub -V -cwd -q 节点队列"</span> -j <span class="string">10</span></span><br><span class="line"><span class="string">#</span> <span class="built_in">--cluster</span> /-c <span class="string">CMD:</span> 集群运行指令</span><br><span class="line"><span class="comment"># qusb -V -cwd -q， 表示输出当前环境变量(-V),在当前目录下运行(-cwd), 投递到指定的队列(-q), 如果不指定则使用任何可用队列</span></span><br><span class="line"><span class="comment"># --local-cores N: 在每个集群中最多并行N核</span></span><br><span class="line"><span class="comment"># --cluster-config/-u FILE: 集群配置文件</span></span><br></pre></td></tr></table></figure><h4 id="Snakemake-生成图"><a href="#Snakemake-生成图" class="headerlink" title="Snakemake  生成图"></a>Snakemake  生成图</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snakemake --dag <span class="string">| dot -Tpdf &gt; dag.pdf</span></span><br></pre></td></tr></table></figure><h4 id="生成report"><a href="#生成report" class="headerlink" title="生成report"></a>生成report</h4><p>以HTML格式生成report</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">rule report:</span><br><span class="line">    input:</span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    output:</span><br><span class="line">        <span class="string">"report.html"</span></span><br><span class="line">    run:</span><br><span class="line">        <span class="keyword">from</span> snakemake.utils <span class="keyword">import</span> report</span><br><span class="line">        <span class="keyword">with</span> open(input[<span class="number">0</span>]) <span class="keyword">as</span> vcf:</span><br><span class="line">            n_calls = sum(<span class="number">1</span> <span class="keyword">for</span> l <span class="keyword">in</span> vcf <span class="keyword">if</span> <span class="keyword">not</span> l.startswith(<span class="string">"#"</span>))</span><br><span class="line"></span><br><span class="line">        report(<span class="string">"""</span></span><br><span class="line"><span class="string">        An example variant calling workflow</span></span><br><span class="line"><span class="string">        ===================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Reads were mapped to the Yeast</span></span><br><span class="line"><span class="string">        reference genome and variants were called jointly with</span></span><br><span class="line"><span class="string">        SAMtools/BCFtools.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        This resulted in &#123;n_calls&#125; variants (see Table T1_).</span></span><br><span class="line"><span class="string">        """</span>, output[<span class="number">0</span>], T1=input[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>一个完整的例子</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">SAMPLES = [<span class="string">"A"</span>, <span class="string">"B"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule <span class="keyword">al</span><span class="variable">l:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"report.html"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule bwa_map:</span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        <span class="string">"data/samples/&#123;sample&#125;.fastq"</span></span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"mapped_reads/&#123;sample&#125;.bam"</span></span><br><span class="line">    shel<span class="variable">l:</span></span><br><span class="line">        <span class="string">"bwa mem &#123;input&#125; | samtools view -Sb - &gt; &#123;output&#125;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule samtools_sor<span class="variable">t:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"mapped_reads/&#123;sample&#125;.bam"</span></span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"sorted_reads/&#123;sample&#125;.bam"</span></span><br><span class="line">    shel<span class="variable">l:</span></span><br><span class="line">        <span class="string">"samtools sort -T sorted_reads/&#123;wildcards.sample&#125; "</span></span><br><span class="line">        <span class="string">"-O bam &#123;input&#125; &gt; &#123;output&#125;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule samtools_index:</span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"sorted_reads/&#123;sample&#125;.bam"</span></span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"sorted_reads/&#123;sample&#125;.bam.bai"</span></span><br><span class="line">    shel<span class="variable">l:</span></span><br><span class="line">        <span class="string">"samtools index &#123;input&#125;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule bcftools_cal<span class="variable">l:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        fa=<span class="string">"data/genome.fa"</span>,</span><br><span class="line">        bam=<span class="built_in">expand</span>(<span class="string">"sorted_reads/&#123;sample&#125;.bam"</span>, sample=SAMPLES),</span><br><span class="line">        bai=<span class="built_in">expand</span>(<span class="string">"sorted_reads/&#123;sample&#125;.bam.bai"</span>, sample=SAMPLES)</span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    shel<span class="variable">l:</span></span><br><span class="line">        <span class="string">"samtools mpileup -g -f &#123;input.fa&#125; &#123;input.bam&#125; | "</span></span><br><span class="line">        <span class="string">"bcftools call -mv - &gt; &#123;output&#125;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rule repor<span class="variable">t:</span></span><br><span class="line">    inpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    outpu<span class="variable">t:</span></span><br><span class="line">        <span class="string">"report.html"</span></span><br><span class="line">    run:</span><br><span class="line">        from snakemake.utils import report</span><br><span class="line">        with <span class="keyword">open</span>(<span class="built_in">input</span>[<span class="number">0</span>]) <span class="keyword">as</span> vcf:</span><br><span class="line">            n_calls = sum(<span class="number">1</span> <span class="keyword">for</span> <span class="keyword">l</span> in vcf <span class="keyword">if</span> not <span class="keyword">l</span>.startswith(<span class="string">"#"</span>))</span><br><span class="line"></span><br><span class="line">        report(<span class="string">""</span><span class="comment">"</span></span><br><span class="line">        An example variant calling workflow</span><br><span class="line">        ===================================</span><br><span class="line"></span><br><span class="line">        Reads were mapped <span class="keyword">to</span> the Yeast</span><br><span class="line">        reference genome <span class="built_in">and</span> variants were called jointly with</span><br><span class="line">        SAMtools/BCFtools.</span><br><span class="line"></span><br><span class="line">        This resulted in &#123;n_calls&#125; variants (see Table T1_).</span><br><span class="line">        <span class="string">""</span><span class="comment">", output[0], T1=input[0])</span></span><br></pre></td></tr></table></figure><p><strong>更加复杂的例子可以看这里：</strong><br><a href="https://github.com/james20141606/Deepshape/blob/master/predict_reactivity/Snakefile" target="_blank" rel="noopener">斌神写的</a></p><p>资源<br><a href="http://snakemake.readthedocs.io/" target="_blank" rel="noopener">Snakemake documentation</a><br><a href="https://www.jianshu.com/p/8e57fd2b81b2" target="_blank" rel="noopener">snakemake—我最喜欢的流程管理工具 - 简书</a><br><a href="https://www.jianshu.com/p/14b9eccc0c0e" target="_blank" rel="noopener">snakemake使用笔记</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;snakemake是一个用来编写任务流程的工具，用python写的，因此其执行的流程脚本也比较通俗易懂，易于理解，可以看做用户友好版的make。&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
      <category term="bioinformatics" scheme="https://www.cmwonderland.com/categories/techniques/bioinformatics/"/>
    
    
      <category term="codes" scheme="https://www.cmwonderland.com/tags/codes/"/>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="bioinformatics" scheme="https://www.cmwonderland.com/tags/bioinformatics/"/>
    
  </entry>
  
  <entry>
    <title>搜索引擎收录</title>
    <link href="https://www.cmwonderland.com/2018/05/05/search-engine/"/>
    <id>https://www.cmwonderland.com/2018/05/05/search-engine/</id>
    <published>2018-05-05T04:45:08.000Z</published>
    <updated>2018-05-05T04:57:26.648Z</updated>
    
    <content type="html"><![CDATA[<p>今天探索了一下如何添加个人网站到百度和google搜索引擎中</p><a id="more"></a><h2 id="测试一下有没有被收录"><a href="#测试一下有没有被收录" class="headerlink" title="测试一下有没有被收录"></a>测试一下有没有被收录</h2><p>在百度和谷歌上分别搜索</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:james20141606<span class="selector-class">.github</span><span class="selector-class">.io</span></span><br></pre></td></tr></table></figure><p>如果此前没有进行过操作，应该是搜不到的，并且搜索出来的结果含有搜索引擎提交入口</p><p><img src="http://i4.fuimg.com/640680/f223a0faa2355b3b.png" alt="Markdown"></p><p>分别进入搜索引擎提交入口，添加域名，选择验证网站，有3种验证方式，这里采用HTML标签验证</p><p>感觉这个验证方法蛮有意思的<br><img src="http://i4.fuimg.com/640680/358791ab5bafa1b2.png" alt="Markdown"></p><p>注意是放在themes/next/source下面，不是站点文件夹的source下面！</p><h2 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h2><p><a href="https://ziyuan.baidu.com/linksubmit/url" target="_blank" rel="noopener">链接提交<em>加快网站内容抓取，快速提交数据工具</em>站长工具<em>网站支持</em>百度搜索资源平台</a><br><del>目前看起来不需要验证？百度这样好吗，，，</del><br>看起来要在<a href="https://ziyuan.baidu.com/site/" target="_blank" rel="noopener">https://ziyuan.baidu.com/site/</a> 这里添加，百度的东西真的搞的很乱。</p><p>正常情况，是要等百度爬虫来爬到你的网站，才会被收录。但是github屏蔽了百度爬虫目前，所以我们要主动出击，我们自己把网站提交给百度。这就要使用到百度站长平台（就上面那个网站）</p><p>在上面页面填好域名，选择分类，然后验证方式和谷歌的非常相似。</p><p><img src="http://i4.fuimg.com/640680/0a5700083829445b.png" alt="Markdown"></p><p>然后</p><h2 id="打开Hexo主题配置文件，添加以下两行"><a href="#打开Hexo主题配置文件，添加以下两行" class="headerlink" title="打开Hexo主题配置文件，添加以下两行"></a>打开Hexo主题配置文件，添加以下两行</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">google_site_verification:</span> google5b248f7b86cbcee5.html</span><br><span class="line">baidu-site-<span class="string">verification:</span> <span class="number">7</span>Qj6Ob0N31</span><br></pre></td></tr></table></figure><p>顺便还看到了Bing的，也可以搞一下。必应的用前面的方法直接搜自己的域名不行，要访问这里<a href="http://cn.bing.com/webmaster/submitsitepage.aspx" target="_blank" rel="noopener">必应 Bing - 将您的网站提交到必应</a></p><p><a href="https://www.google.com/webmasters/tools" target="_blank" rel="noopener">google站长工具</a>可以进一步设置。</p><h2 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>在博客的站点配置文件_config.yml中添加以下代码</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 自动生成sitemap</span></span><br><span class="line"><span class="symbol">sitemap:</span></span><br><span class="line"><span class="symbol">path:</span> sitemap.xml</span><br><span class="line"><span class="symbol">baidusitemap:</span></span><br><span class="line"><span class="symbol">path:</span> baidusitemap.xml</span><br></pre></td></tr></table></figure><p>不添加也是可以的</p><p>在站点配置文件的# URL处填入你的主页地址就可以每次生成的时候自动填好地址了，如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site <span class="keyword">is</span> <span class="keyword">put</span> in <span class="keyword">a</span> subdirectory, <span class="keyword">set</span> url <span class="keyword">as</span> <span class="string">'http://yoursite.com/child'</span> <span class="built_in">and</span> root <span class="keyword">as</span> <span class="string">'/child/'</span></span><br><span class="line"># ur<span class="variable">l:</span> http://yoursite.<span class="keyword">com</span></span><br><span class="line">ur<span class="variable">l:</span> http://hosea1008.coding.<span class="keyword">me</span></span><br><span class="line">roo<span class="variable">t:</span> /</span><br></pre></td></tr></table></figure><h2 id="百度自动推送"><a href="#百度自动推送" class="headerlink" title="百度自动推送"></a>百度自动推送</h2><p>Next主题有百度自动推送功能，将主题配置文件中的baidu_push设置为true，然后将/next/layout/_scripts文件夹下面的baidu-push.swig文件中的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//push.zhanzhang.baidu.com/push.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="undefined">    s.parentNode.insertBefore(bp, s);</span></span><br><span class="line"><span class="undefined">&#125;)();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>貌似现在这个文件被移除了，先不折腾了</p><p>资源：<br><a href="http://www.shangyang.me/2016/12/16/hexo-base-concept/#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95" target="_blank" rel="noopener">hexo 我的使用总结 | 伤神的博客</a><br><a href="http://www.helloshawn.cn/2016/Hexo-Next%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95.html" target="_blank" rel="noopener">Hexo+Next主题博客提交百度谷歌收录 | 大江东去</a></p><h1 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天探索了一下如何添加个人网站到百度和google搜索引擎中&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="website" scheme="https://www.cmwonderland.com/tags/website/"/>
    
  </entry>
  
  <entry>
    <title>神器分享</title>
    <link href="https://www.cmwonderland.com/2018/05/05/tools/"/>
    <id>https://www.cmwonderland.com/2018/05/05/tools/</id>
    <published>2018-05-04T16:35:09.000Z</published>
    <updated>2018-05-04T16:41:18.186Z</updated>
    
    <content type="html"><![CDATA[<p>分享一些想到的觉得好用的工具和软件，挂一漏万，这个文章后续可以不断更新。</p><h2 id="Mathpix"><a href="#Mathpix" class="headerlink" title="Mathpix"></a>Mathpix</h2><p><a href="https://mathpix.com/" target="_blank" rel="noopener">Mathpix: convert images to LaTex.</a><br>可以截图将公式转成latex代码</p><p>在排版的文章里讲过<a href="https://james20141606.github.io/2018/05/04/%E8%AE%BA%E6%96%87%E4%B8%8E%E6%8E%92%E7%89%88/" target="_blank" rel="noopener">论文与排版 | James Chen’s Blogs</a></p><a id="more"></a><h2 id="iTERM-oh-my-zsh"><a href="#iTERM-oh-my-zsh" class="headerlink" title="iTERM oh my zsh"></a>iTERM oh my zsh</h2><p>酷炫命令行<br><a href="https://www.jianshu.com/p/7de00c73a2bb" target="_blank" rel="noopener">iTerm 2 &amp;&amp; Oh My Zsh【DIY教程——亲身体验过程】 - 简书</a><br>[image:B8E2F4B7-70CB-4EC5-88B5-DA515F88DFFA-354-00002982DF7A8359/屏幕快照 2018-04-28 下午10.12.58.png]</p><p>而且oh my zsh配置了快速提交github的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ga . &amp;&amp; gcmsg <span class="string">'update'</span> &amp;&amp; gp</span><br><span class="line"><span class="built_in">alias</span> gitp=<span class="string">'ga . &amp;&amp; gcmsg '</span>update<span class="string">' &amp;&amp; gp'</span></span><br></pre></td></tr></table></figure></p><p>讲过一系列的写在~/.zshrc中的快捷方式<a href="https://james20141606.github.io/2018/05/05/alias-setting/" target="_blank" rel="noopener">Alias Setting | James Chen’s Blogs</a></p><h2 id="每个人都爱的VSCODE"><a href="#每个人都爱的VSCODE" class="headerlink" title="每个人都爱的VSCODE"></a>每个人都爱的VSCODE</h2><p>神器，插件扩展太多了<br>一开始看人用各种IDE，包括pycharm，但是我一直不喜欢，很卡，xcode太臃肿，苹果塞了一堆用不上的东西，github的atom实在是垃圾，对mac的适配很差，很容易崩，最后发现还是良心的微软好，vscode用的很顺滑，看到各种人都在用，甚至还有用latex插件的，扩展性真的非常好<br>包括workspace，和git的配合，终端用起来都很顺。</p><p>排版的博客里讲过VSCode和LaTeX结合<a href="https://james20141606.github.io/2018/05/04/%E8%AE%BA%E6%96%87%E4%B8%8E%E6%8E%92%E7%89%88/" target="_blank" rel="noopener">论文与排版 | James Chen’s Blogs</a></p><h2 id="Unclutter"><a href="#Unclutter" class="headerlink" title="Unclutter"></a>Unclutter</h2><p>你一定会爱上它，用过的人都说好，对于一个几乎电脑不离手的人来说，unclutter让你的人生变得无比的从容和有条理，每天用几百遍，强迫症必备。<br><a href="https://unclutterapp.com/" target="_blank" rel="noopener">Unclutter - Files, Notes and Clipboard Manager for Mac</a></p><h2 id="net-tsinghua"><a href="#net-tsinghua" class="headerlink" title="net.tsinghua"></a>net.tsinghua</h2><p>清华的学生可以试试net.stinghua。 <a href="https://github.com/ThomasLee969/net.tsinghua" target="_blank" rel="noopener">GitHub - ThomasLee969/net.tsinghua: A cross-platform auto-login utility for Tsinghua students</a>，比学校提供的校园网客户端好看很多。</p><h2 id="SwitchyOmega"><a href="#SwitchyOmega" class="headerlink" title="SwitchyOmega"></a>SwitchyOmega</h2><p>Chrome的插件，实在是太强，翻墙，多个服务器的jupyter、Rstudio远程使用，绝对离不开的，甚至有非校园网环境下继续用清华用户身份找各种数据库的能力（感谢万能斌）。</p><h2 id="Aria2，破解百度云限速"><a href="#Aria2，破解百度云限速" class="headerlink" title="Aria2，破解百度云限速"></a>Aria2，破解百度云限速</h2><p>一个强大的下载工具，甚至有linux版本，当然主要是为了对付百度云限速的。有GUI版本的，自行搜索Aria2GUI即可。</p><p>当然这是不够的，需要配合一个神奇的插件，在github有，每次都要找一会儿才能找到，放这里了<a href="https://github.com/acgotaku/BaiduExporter" target="_blank" rel="noopener">GitHub - acgotaku/BaiduExporter: Assistant for Baidu to export download links to aria2/aria2-rpc</a>。当然在Github搜baiduyun能搜到一堆各路神仙的破解办法。这个是使用很久觉得很靠谱的，装好chrome的插件之后，每次百度云分享的页面都会有一个导出下载的按钮，可以用aria2下载，更好的是可以导出下载链接，用迅雷下也很爽（仅限mac，mac版的有些软件实在良心，比如校园网下我的迅雷下载经常2M以上，流畅情况可以10M/s，还有爱奇艺，没广告）</p><h2 id="mindnode"><a href="#mindnode" class="headerlink" title="mindnode"></a>mindnode</h2><p>很适合做思维导图</p><h2 id="notability"><a href="#notability" class="headerlink" title="notability"></a>notability</h2><p>用过的最好的录音加记笔记的软件，记笔记一般，录音功能真心好用</p><h2 id="分享过的"><a href="#分享过的" class="headerlink" title="分享过的"></a>分享过的</h2><p>Bear，提过几次了，强烈推荐的markdown记笔记软件。</p><p>Jupyter，提了N次了，用python的人一定要用，其他的IDE真的弱爆了，虽然其实不是一个概念的东西。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享一些想到的觉得好用的工具和软件，挂一漏万，这个文章后续可以不断更新。&lt;/p&gt;
&lt;h2 id=&quot;Mathpix&quot;&gt;&lt;a href=&quot;#Mathpix&quot; class=&quot;headerlink&quot; title=&quot;Mathpix&quot;&gt;&lt;/a&gt;Mathpix&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://mathpix.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mathpix: convert images to LaTex.&lt;/a&gt;&lt;br&gt;可以截图将公式转成latex代码&lt;/p&gt;
&lt;p&gt;在排版的文章里讲过&lt;a href=&quot;https://james20141606.github.io/2018/05/04/%E8%AE%BA%E6%96%87%E4%B8%8E%E6%8E%92%E7%89%88/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;论文与排版 | James Chen’s Blogs&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="setup" scheme="https://www.cmwonderland.com/tags/setup/"/>
    
      <category term="software" scheme="https://www.cmwonderland.com/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Alias Setting</title>
    <link href="https://www.cmwonderland.com/2018/05/05/alias-setting/"/>
    <id>https://www.cmwonderland.com/2018/05/05/alias-setting/</id>
    <published>2018-05-04T16:17:18.000Z</published>
    <updated>2018-05-04T16:22:13.364Z</updated>
    
    <content type="html"><![CDATA[<p>Alias is a very good way to save time and reduce non necessary memory. Since I use zsh, I set the alias in ~/.zshrc. </p><p>For example, I even set one alias: srczsh=’source ~/.zshrc’ to enable source more convienient.</p><a id="more"></a><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">source /Users/james/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line">plugins=(zsh-syntax-highlighting)</span><br><span class="line">alias github='cd /Users/james/Desktop/website/github'</span><br><span class="line">alias web='cd /Users/james/Desktop/website/jamesblog/james20141606.github.io'</span><br><span class="line">alias gitp='ga . &amp;&amp; gcmsg 'update' &amp;&amp; gp'</span><br><span class="line">alias srczsh='source ~/.zshrc'</span><br><span class="line">alias deep='cd /Users/james/Desktop/Deepshape_whole/Deepshape/'</span><br><span class="line">alias gitbookbp='gitbook build &amp;&amp; gitbook pdf .'</span><br><span class="line">alias jp='jupyter notebook'</span><br><span class="line">alias snip='bash syncsnip.sh'</span><br><span class="line">alias hgd='hexo g &amp;&amp; hexo d'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zsh配置好的：</span><br><span class="line">-='cd -'</span><br><span class="line">...=../..</span><br><span class="line">....=../../..</span><br><span class="line">.....=../../../..</span><br><span class="line">......=../../../../..</span><br><span class="line">1='cd -'</span><br><span class="line">2='cd -2'</span><br><span class="line">3='cd -3'</span><br><span class="line">4='cd -4'</span><br><span class="line">5='cd -5'</span><br><span class="line">6='cd -6'</span><br><span class="line">7='cd -7'</span><br><span class="line">8='cd -8'</span><br><span class="line">9='cd -9'</span><br><span class="line">_=sudo</span><br><span class="line">afind='ack -il'</span><br><span class="line">d='dirs -v | head -10'</span><br><span class="line">g=git</span><br><span class="line">ga='git add'</span><br><span class="line">gaa='git add --all'</span><br><span class="line">gap='git apply'</span><br><span class="line">gapa='git add --patch'</span><br><span class="line">gau='git add --update'</span><br><span class="line">gb='git branch'</span><br><span class="line">gba='git branch -a'</span><br><span class="line">gbd='git branch -d'</span><br><span class="line">gbda='git branch --no-color --merged | command grep -vE <span class="string">"^(\*|\s*(master|develop|dev)\s*$)"</span> | command xargs -n 1 git branch -d'</span><br><span class="line">gbl='git blame -b -w'</span><br><span class="line">gbnm='git branch --no-merged'</span><br><span class="line">gbr='git branch --remote'</span><br><span class="line">gbs='git bisect'</span><br><span class="line">gbsb='git bisect bad'</span><br><span class="line">gbsg='git bisect good'</span><br><span class="line">gbsr='git bisect reset'</span><br><span class="line">gbss='git bisect start'</span><br><span class="line">gc='git commit -v'</span><br><span class="line">'gc!'='git commit -v --amend'</span><br><span class="line">gca='git commit -v -a'</span><br><span class="line">'gca!'='git commit -v -a --amend'</span><br><span class="line">gcam='git commit -a -m'</span><br><span class="line">'gcan!'='git commit -v -a --no-edit --amend'</span><br><span class="line">'gcans!'='git commit -v -a -s --no-edit --amend'</span><br><span class="line">gcb='git checkout -b'</span><br><span class="line">gcd='git checkout develop'</span><br><span class="line">gcf='git config --list'</span><br><span class="line">gcl='git clone --recursive'</span><br><span class="line">gclean='git clean -fd'</span><br><span class="line">gcm='git checkout master'</span><br><span class="line">gcmsg='git commit -m'</span><br><span class="line">'gcn!'='git commit -v --no-edit --amend'</span><br><span class="line">gco='git checkout'</span><br><span class="line">gcount='git shortlog -sn'</span><br><span class="line">gcp='git cherry-pick'</span><br><span class="line">gcpa='git cherry-pick --abort'</span><br><span class="line">gcpc='git cherry-pick --continue'</span><br><span class="line">gcs='git commit -S'</span><br><span class="line">gcsm='git commit -s -m'</span><br><span class="line">gd='git diff'</span><br><span class="line">gdca='git diff --cached'</span><br><span class="line">gdct='git describe --tags `git rev-list --tags --max-count=1`'</span><br><span class="line">gdcw='git diff --cached --word-diff'</span><br><span class="line">gdt='git diff-tree --no-commit-id --name-only -r'</span><br><span class="line">gdw='git diff --word-diff'</span><br><span class="line">gf='git fetch'</span><br><span class="line">gfa='git fetch --all --prune'</span><br><span class="line">gfo='git fetch origin'</span><br><span class="line">gg='git gui citool'</span><br><span class="line">gga='git gui citool --amend'</span><br><span class="line">ggpull='git pull origin <span class="variable">$(git_current_branch)</span>'</span><br><span class="line">ggpur=ggu</span><br><span class="line">ggpush='git push origin <span class="variable">$(git_current_branch)</span>'</span><br><span class="line">ggsup='git branch --set-upstream-to=origin/<span class="variable">$(git_current_branch)</span>'</span><br><span class="line">ghh='git help'</span><br><span class="line">gignore='git update-index --assume-unchanged'</span><br><span class="line">gignored='git ls-files -v | grep <span class="string">"^[[:lower:]]"</span>'</span><br><span class="line">git-svn-dcommit-push='git svn dcommit &amp;&amp; git push github master:svntrunk'</span><br><span class="line">gk='\gitk --all --branches'</span><br><span class="line">gke='\gitk --all <span class="variable">$(git log -g --pretty=%h)</span>'</span><br><span class="line">gl='git pull'</span><br><span class="line">glg='git log --stat'</span><br><span class="line">glgg='git log --graph'</span><br><span class="line">glgga='git log --graph --decorate --all'</span><br><span class="line">glgm='git log --graph --max-count=10'</span><br><span class="line">glgp='git log --stat -p'</span><br><span class="line">glo='git log --oneline --decorate'</span><br><span class="line">globurl='noglob urlglobber '</span><br><span class="line">glog='git log --oneline --decorate --graph'</span><br><span class="line">gloga='git log --oneline --decorate --graph --all'</span><br><span class="line">glol='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset'\'</span><br><span class="line">glola='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset'\'' --all'</span><br><span class="line">glp=_git_log_prettily</span><br><span class="line">glum='git pull upstream master'</span><br><span class="line">gm='git merge'</span><br><span class="line">gma='git merge --abort'</span><br><span class="line">gmom='git merge origin/master'</span><br><span class="line">gmt='git mergetool --no-prompt'</span><br><span class="line">gmtvim='git mergetool --no-prompt --tool=vimdiff'</span><br><span class="line">gmum='git merge upstream/master'</span><br><span class="line">gp='git push'</span><br><span class="line">gpd='git push --dry-run'</span><br><span class="line">gpoat='git push origin --all &amp;&amp; git push origin --tags'</span><br><span class="line">gpristine='git reset --hard &amp;&amp; git clean -dfx'</span><br><span class="line">gpsup='git push --set-upstream origin <span class="variable">$(git_current_branch)</span>'</span><br><span class="line">gpu='git push upstream'</span><br><span class="line">gpv='git push -v'</span><br><span class="line">gr='git remote'</span><br><span class="line">gra='git remote add'</span><br><span class="line">grb='git rebase'</span><br><span class="line">grba='git rebase --abort'</span><br><span class="line">grbc='git rebase --continue'</span><br><span class="line">grbi='git rebase -i'</span><br><span class="line">grbm='git rebase master'</span><br><span class="line">grbs='git rebase --skip'</span><br><span class="line">grep='grep  --color=auto --exclude-dir=&#123;.bzr,CVS,.git,.hg,.svn&#125;'</span><br><span class="line">grh='git reset HEAD'</span><br><span class="line">grhh='git reset HEAD --hard'</span><br><span class="line">grmv='git remote rename'</span><br><span class="line">grrm='git remote remove'</span><br><span class="line">grset='git remote set-url'</span><br><span class="line">grt='cd <span class="variable">$(git rev-parse --show-toplevel || echo ".")</span>'</span><br><span class="line">gru='git reset --'</span><br><span class="line">grup='git remote update'</span><br><span class="line">grv='git remote -v'</span><br><span class="line">gsb='git status -sb'</span><br><span class="line">gsd='git svn dcommit'</span><br><span class="line">gsi='git submodule init'</span><br><span class="line">gsps='git show --pretty=short --show-signature'</span><br><span class="line">gsr='git svn rebase'</span><br><span class="line">gss='git status -s'</span><br><span class="line">gst='git status'</span><br><span class="line">gsta='git stash save'</span><br><span class="line">gstaa='git stash apply'</span><br><span class="line">gstc='git stash clear'</span><br><span class="line">gstd='git stash drop'</span><br><span class="line">gstl='git stash list'</span><br><span class="line">gstp='git stash pop'</span><br><span class="line">gsts='git stash show --text'</span><br><span class="line">gsu='git submodule update'</span><br><span class="line">gts='git tag -s'</span><br><span class="line">gtv='git tag | sort -V'</span><br><span class="line">gunignore='git update-index --no-assume-unchanged'</span><br><span class="line">gunwip='git log -n 1 | grep -q -c <span class="string">"\-\-wip\-\-"</span> &amp;&amp; git reset HEAD~1'</span><br><span class="line">gup='git pull --rebase'</span><br><span class="line">gupv='git pull --rebase -v'</span><br><span class="line">gwch='git whatchanged -p --abbrev-commit --pretty=medium'</span><br><span class="line">gwip='git add -A; git rm <span class="variable">$(git ls-files --deleted)</span> 2&gt; /dev/null; git commit --no-verify -m <span class="string">"--wip-- [skip ci]"</span>'</span><br><span class="line">history=omz_history</span><br><span class="line">l='ls -lah'</span><br><span class="line">la='ls -lAh'</span><br><span class="line">ll='ls -lh'</span><br><span class="line">ls='ls -G'</span><br><span class="line">lsa='ls -lah'</span><br><span class="line">md='mkdir -p'</span><br><span class="line">please=sudo</span><br><span class="line">po=popd</span><br><span class="line">pu=pushd</span><br><span class="line">rd=rmdir</span><br><span class="line">run-help=man</span><br><span class="line">which-command=whence</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Alias is a very good way to save time and reduce non necessary memory. Since I use zsh, I set the alias in ~/.zshrc. &lt;/p&gt;
&lt;p&gt;For example, I even set one alias: srczsh=’source ~/.zshrc’ to enable source more convienient.&lt;/p&gt;
    
    </summary>
    
      <category term="techniques" scheme="https://www.cmwonderland.com/categories/techniques/"/>
    
    
      <category term="techniques" scheme="https://www.cmwonderland.com/tags/techniques/"/>
    
      <category term="zsh" scheme="https://www.cmwonderland.com/tags/zsh/"/>
    
      <category term="alias" scheme="https://www.cmwonderland.com/tags/alias/"/>
    
      <category term="setup" scheme="https://www.cmwonderland.com/tags/setup/"/>
    
  </entry>
  
</feed>
